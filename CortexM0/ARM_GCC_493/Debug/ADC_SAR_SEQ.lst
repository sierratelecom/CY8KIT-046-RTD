ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC_SAR_SEQ.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	ADC_SAR_SEQ_initVar
  18              		.bss
  19              		.type	ADC_SAR_SEQ_initVar, %object
  20              		.size	ADC_SAR_SEQ_initVar, 1
  21              	ADC_SAR_SEQ_initVar:
  22 0000 00       		.space	1
  23              		.comm	ADC_SAR_SEQ_offset,8,4
  24              		.comm	ADC_SAR_SEQ_countsPer10Volt,16,4
  25              		.section	.rodata
  26              		.align	2
  27              		.type	ADC_SAR_SEQ_channelsConfig, %object
  28              		.size	ADC_SAR_SEQ_channelsConfig, 16
  29              	ADC_SAR_SEQ_channelsConfig:
  30 0000 02010000 		.word	258
  31 0004 02010000 		.word	258
  32 0008 02010000 		.word	258
  33 000c 00010000 		.word	256
  34              		.section	.text.ADC_SAR_SEQ_Start,"ax",%progbits
  35              		.align	2
  36              		.global	ADC_SAR_SEQ_Start
  37              		.code	16
  38              		.thumb_func
  39              		.type	ADC_SAR_SEQ_Start, %function
  40              	ADC_SAR_SEQ_Start:
  41              	.LFB1:
  42              		.file 1 "Generated_Source\\PSoC4\\ADC_SAR_SEQ.c"
   1:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * File Name: ADC_SAR_SEQ.c
   3:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Version 2.40
   4:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
   5:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Description:
   6:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
   9:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Note:
  10:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  11:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * the software package with which this file was provided.
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 2


  16:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  18:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** #include "ADC_SAR_SEQ.h"
  19:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  20:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  21:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /***************************************
  22:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** uint8 ADC_SAR_SEQ_initVar = 0u;
  25:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** volatile int16 ADC_SAR_SEQ_offset[ADC_SAR_SEQ_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** volatile int32 ADC_SAR_SEQ_countsPer10Volt[ADC_SAR_SEQ_TOTAL_CHANNELS_NUM];   /* Gain compensation 
  27:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  28:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  29:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /***************************************
  30:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Local data allocation
  31:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** static const uint32 CYCODE ADC_SAR_SEQ_channelsConfig[] = { 0x00000102u, 0x00000102u, 0x00000102u, 
  34:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  35:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  36:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_Start
  38:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  40:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
  41:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  45:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
  47:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  48:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
  49:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
  50:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  51:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  The ADC_SAR_SEQ_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_SAR_SEQ_Start() routine.
  57:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  to zero before call of ADC_SAR_SEQ_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_SAR_SEQ_Init() and ADC_SAR_SEQ_Enable() as done in the
  60:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_SAR_SEQ_Start() routine.
  61:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  62:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_Start(void)
  64:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
  43              		.loc 1 64 0
  44              		.cfi_startproc
  45 0000 80B5     		push	{r7, lr}
  46              		.cfi_def_cfa_offset 8
  47              		.cfi_offset 7, -8
  48              		.cfi_offset 14, -4
  49 0002 00AF     		add	r7, sp, #0
  50              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 3


  65:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     if(ADC_SAR_SEQ_initVar == 0u)
  51              		.loc 1 66 0
  52 0004 064B     		ldr	r3, .L3
  53 0006 1B78     		ldrb	r3, [r3]
  54 0008 002B     		cmp	r3, #0
  55 000a 04D1     		bne	.L2
  67:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
  68:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_Init();
  56              		.loc 1 68 0
  57 000c FFF7FEFF 		bl	ADC_SAR_SEQ_Init
  69:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_initVar = 1u;
  58              		.loc 1 69 0
  59 0010 034B     		ldr	r3, .L3
  60 0012 0122     		mov	r2, #1
  61 0014 1A70     		strb	r2, [r3]
  62              	.L2:
  70:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
  71:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_Enable();
  63              		.loc 1 71 0
  64 0016 FFF7FEFF 		bl	ADC_SAR_SEQ_Enable
  72:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
  65              		.loc 1 72 0
  66 001a BD46     		mov	sp, r7
  67              		@ sp needed
  68 001c 80BD     		pop	{r7, pc}
  69              	.L4:
  70 001e C046     		.align	2
  71              	.L3:
  72 0020 00000000 		.word	ADC_SAR_SEQ_initVar
  73              		.cfi_endproc
  74              	.LFE1:
  75              		.size	ADC_SAR_SEQ_Start, .-ADC_SAR_SEQ_Start
  76              		.section	.text.ADC_SAR_SEQ_Init,"ax",%progbits
  77              		.align	2
  78              		.global	ADC_SAR_SEQ_Init
  79              		.code	16
  80              		.thumb_func
  81              		.type	ADC_SAR_SEQ_Init, %function
  82              	ADC_SAR_SEQ_Init:
  83              	.LFB2:
  73:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  74:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
  75:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_Init
  77:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  79:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
  80:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_SAR_SEQ_Start().
  83:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  84:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
  86:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  87:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
  88:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 4


  89:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  90:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  The ADC_SAR_SEQ_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
  93:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_Init(void)
  95:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
  84              		.loc 1 95 0
  85              		.cfi_startproc
  86 0000 80B5     		push	{r7, lr}
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 7, -8
  89              		.cfi_offset 14, -4
  90 0002 84B0     		sub	sp, sp, #16
  91              		.cfi_def_cfa_offset 24
  92 0004 00AF     		add	r7, sp, #0
  93              		.cfi_def_cfa_register 7
  96:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 100:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         static const uint8 CYCODE ADC_SAR_SEQ_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 103:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             (uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****              (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 9u)
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 5


 136:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ,(uint8)(ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (uint8)ADC_SAR_SEQ_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         };
 168:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 170:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         CyIntSetPriority(ADC_SAR_SEQ_INTC_NUMBER, ADC_SAR_SEQ_INTC_PRIOR_NUMBER);
  94              		.loc 1 172 0
  95 0006 1120     		mov	r0, #17
  96 0008 0321     		mov	r1, #3
  97 000a FFF7FEFF 		bl	CyIntSetPriority
 173:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         (void)CyIntSetVector(ADC_SAR_SEQ_INTC_NUMBER, &ADC_SAR_SEQ_ISR);
  98              		.loc 1 173 0
  99 000e 664B     		ldr	r3, .L18
 100 0010 1120     		mov	r0, #17
 101 0012 191C     		mov	r1, r3
 102 0014 FFF7FEFF 		bl	CyIntSetVector
 174:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif   /* End ADC_SAR_SEQ_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 176:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_CHAN_EN_REG = ADC_SAR_SEQ_DEFAULT_EN_CHANNELS;
 103              		.loc 1 177 0
 104 0018 644B     		ldr	r3, .L18+4
 105 001a 0F22     		mov	r2, #15
 106 001c 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_CTRL_REG |= ADC_SAR_SEQ_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Enable the SAR internal pump when global pump is enabled */
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 6


 180:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         (((ADC_SAR_SEQ_PUMP_CTRL_REG & ADC_SAR_SEQ_PUMP_CTRL_ENABLED) != 0u) ? 
 107              		.loc 1 180 0
 108 001e 644B     		ldr	r3, .L18+8
 109 0020 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_CTRL_REG |= ADC_SAR_SEQ_DEFAULT_CTRL_REG_CFG | 
 110              		.loc 1 178 0
 111 0022 002B     		cmp	r3, #0
 112 0024 01DA     		bge	.L6
 178:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_CTRL_REG |= ADC_SAR_SEQ_DEFAULT_CTRL_REG_CFG | 
 113              		.loc 1 178 0 is_stmt 0 discriminator 1
 114 0026 6349     		ldr	r1, .L18+12
 115 0028 00E0     		b	.L7
 116              	.L6:
 178:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_CTRL_REG |= ADC_SAR_SEQ_DEFAULT_CTRL_REG_CFG | 
 117              		.loc 1 178 0 discriminator 2
 118 002a 6349     		ldr	r1, .L18+16
 119              	.L7:
 178:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_CTRL_REG |= ADC_SAR_SEQ_DEFAULT_CTRL_REG_CFG | 
 120              		.loc 1 178 0 discriminator 4
 121 002c 634B     		ldr	r3, .L18+20
 122 002e 634A     		ldr	r2, .L18+20
 123 0030 1268     		ldr	r2, [r2]
 124 0032 0A43     		orr	r2, r1
 125 0034 1A60     		str	r2, [r3]
 181:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_SAMPLE_CTRL_REG = ADC_SAR_SEQ_DEFAULT_SAMPLE_CTRL_REG_CFG;
 126              		.loc 1 182 0 is_stmt 1 discriminator 4
 127 0036 624B     		ldr	r3, .L18+24
 128 0038 624A     		ldr	r2, .L18+28
 129 003a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_RANGE_THRES_REG = ADC_SAR_SEQ_DEFAULT_RANGE_THRES_REG_CFG;
 130              		.loc 1 183 0 discriminator 4
 131 003c 624B     		ldr	r3, .L18+32
 132 003e 634A     		ldr	r2, .L18+36
 133 0040 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_RANGE_COND_REG  = ADC_SAR_SEQ_COMPARE_MODE;
 134              		.loc 1 184 0 discriminator 4
 135 0042 634B     		ldr	r3, .L18+40
 136 0044 8022     		mov	r2, #128
 137 0046 D205     		lsl	r2, r2, #23
 138 0048 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_SAMPLE_TIME01_REG = ADC_SAR_SEQ_DEFAULT_SAMPLE_TIME01_REG_CFG;
 139              		.loc 1 185 0 discriminator 4
 140 004a 624B     		ldr	r3, .L18+44
 141 004c 624A     		ldr	r2, .L18+48
 142 004e 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_SAMPLE_TIME23_REG = ADC_SAR_SEQ_DEFAULT_SAMPLE_TIME23_REG_CFG;
 143              		.loc 1 186 0 discriminator 4
 144 0050 624B     		ldr	r3, .L18+52
 145 0052 614A     		ldr	r2, .L18+48
 146 0054 1A60     		str	r2, [r3]
 187:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     
 188:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_MUX_SWITCH0_REG |= ADC_SAR_SEQ_DEFAULT_MUX_SWITCH0;
 147              		.loc 1 190 0 discriminator 4
 148 0056 624B     		ldr	r3, .L18+56
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 7


 149 0058 614A     		ldr	r2, .L18+56
 150 005a 1268     		ldr	r2, [r2]
 151 005c 8021     		mov	r1, #128
 152 005e 4902     		lsl	r1, r1, #9
 153 0060 0A43     		orr	r2, r1
 154 0062 1A60     		str	r2, [r3]
 191:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             ADC_SAR_SEQ_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_SEQ_DEFAULT_MUX_SWITCH0;
 155              		.loc 1 193 0 discriminator 4
 156 0064 5F4B     		ldr	r3, .L18+60
 157 0066 5F4A     		ldr	r2, .L18+60
 158 0068 1268     		ldr	r2, [r2]
 159 006a 8021     		mov	r1, #128
 160 006c 4902     		lsl	r1, r1, #9
 161 006e 0A43     		orr	r2, r1
 162 0070 1A60     		str	r2, [r3]
 194:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif /*ADC_SAR_SEQ_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 197:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_SATURATE_INTR_MASK_REG = 0u;
 163              		.loc 1 197 0 discriminator 4
 164 0072 5D4B     		ldr	r3, .L18+64
 165 0074 0022     		mov	r2, #0
 166 0076 1A60     		str	r2, [r3]
 198:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_RANGE_INTR_MASK_REG = 0u;
 167              		.loc 1 198 0 discriminator 4
 168 0078 5C4B     		ldr	r3, .L18+68
 169 007a 0022     		mov	r2, #0
 170 007c 1A60     		str	r2, [r3]
 199:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_INTR_MASK_REG = ADC_SAR_SEQ_SAR_INTR_MASK;
 171              		.loc 1 199 0 discriminator 4
 172 007e 5C4B     		ldr	r3, .L18+72
 173 0080 0122     		mov	r2, #1
 174 0082 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 201:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_CY_SAR_IP_VER == ADC_SAR_SEQ_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_ANA_TRIM_REG = ADC_SAR_SEQ_TRIM_COEF;
 203:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif /* (ADC_SAR_SEQ_CY_SAR_IP_VER == ADC_SAR_SEQ_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 205:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     tmpRegVal = ADC_SAR_SEQ_SAR_DFT_CTRL_REG;
 175              		.loc 1 206 0 discriminator 4
 176 0084 5B4B     		ldr	r3, .L18+76
 177 0086 1B68     		ldr	r3, [r3]
 178 0088 7B60     		str	r3, [r7, #4]
 207:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     tmpRegVal &= (uint32)~ADC_SAR_SEQ_DCEN;
 179              		.loc 1 207 0 discriminator 4
 180 008a 7B68     		ldr	r3, [r7, #4]
 181 008c 5A4A     		ldr	r2, .L18+80
 182 008e 1340     		and	r3, r2
 183 0090 7B60     		str	r3, [r7, #4]
 208:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     
 209:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_CY_SAR_IP_VER == ADC_SAR_SEQ_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_NOMINAL_CLOCK_FREQ > (ADC_SAR_SEQ_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             tmpRegVal |= ADC_SAR_SEQ_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #else  /* clock speed < 9 Mhz */
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 8


 213:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             tmpRegVal |= ADC_SAR_SEQ_DLY_INC;
 214:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #else
 216:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if ((ADC_SAR_SEQ_DEFAULT_VREF_SEL == ADC_SAR_SEQ__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****              (ADC_SAR_SEQ_DEFAULT_VREF_SEL == ADC_SAR_SEQ__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             tmpRegVal |= ADC_SAR_SEQ_DLY_INC;
 219:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #else
 220:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             tmpRegVal |= ADC_SAR_SEQ_DCEN;
 184              		.loc 1 220 0 discriminator 4
 185 0092 7B68     		ldr	r3, [r7, #4]
 186 0094 8022     		mov	r2, #128
 187 0096 9205     		lsl	r2, r2, #22
 188 0098 1343     		orr	r3, r2
 189 009a 7B60     		str	r3, [r7, #4]
 221:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             tmpRegVal &= (uint32)~ADC_SAR_SEQ_DLY_INC;
 190              		.loc 1 221 0 discriminator 4
 191 009c 7B68     		ldr	r3, [r7, #4]
 192 009e 0122     		mov	r2, #1
 193 00a0 9343     		bic	r3, r2
 194 00a2 7B60     		str	r3, [r7, #4]
 222:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ((ADC_SAR_SEQ_DEFAULT_VREF_SEL == ADC_SAR_SEQ__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                    (ADC_SAR_SEQ_DEFAULT_VREF_SEL == ADC_SAR_SEQ__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif /* (ADC_SAR_SEQ_CY_SAR_IP_VER == ADC_SAR_SEQ_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     
 226:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_DFT_CTRL_REG = tmpRegVal;
 195              		.loc 1 226 0 discriminator 4
 196 00a4 534B     		ldr	r3, .L18+76
 197 00a6 7A68     		ldr	r2, [r7, #4]
 198 00a8 1A60     		str	r2, [r3]
 227:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 228:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_MAX_RESOLUTION != ADC_SAR_SEQ_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_WOUNDING_REG = ADC_SAR_SEQ_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif /* ADC_SAR_SEQ_MAX_RESOLUTION != ADC_SAR_SEQ_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 232:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     for(chNum = 0u; chNum < ADC_SAR_SEQ_TOTAL_CHANNELS_NUM; chNum++)
 199              		.loc 1 232 0 discriminator 4
 200 00aa 0023     		mov	r3, #0
 201 00ac FB60     		str	r3, [r7, #12]
 202 00ae 75E0     		b	.L8
 203              	.L17:
 233:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 234:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         tmpRegVal = (ADC_SAR_SEQ_channelsConfig[chNum] & ADC_SAR_SEQ_CHANNEL_CONFIG_MASK);
 204              		.loc 1 234 0
 205 00b0 524B     		ldr	r3, .L18+84
 206 00b2 FA68     		ldr	r2, [r7, #12]
 207 00b4 9200     		lsl	r2, r2, #2
 208 00b6 D258     		ldr	r2, [r2, r3]
 209 00b8 DC23     		mov	r3, #220
 210 00ba 9B01     		lsl	r3, r3, #6
 211 00bc 1340     		and	r3, r2
 212 00be 7B60     		str	r3, [r7, #4]
 235:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             tmpRegVal |= ADC_SAR_SEQ_InputsPlacement[chNum];
 213              		.loc 1 236 0
 214 00c0 4F4A     		ldr	r2, .L18+88
 215 00c2 FB68     		ldr	r3, [r7, #12]
 216 00c4 D318     		add	r3, r2, r3
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 9


 217 00c6 1B78     		ldrb	r3, [r3]
 218 00c8 1A1C     		mov	r2, r3
 219 00ca 7B68     		ldr	r3, [r7, #4]
 220 00cc 1343     		orr	r3, r2
 221 00ce 7B60     		str	r3, [r7, #4]
 237:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* End ADC_SAR_SEQ_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         
 239:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         
 240:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         */
 244:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if((ADC_SAR_SEQ_MAX_RESOLUTION != ADC_SAR_SEQ_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             (ADC_SAR_SEQ_ALT_WOUNDING == ADC_SAR_SEQ_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             tmpRegVal &= (uint32)(~ADC_SAR_SEQ_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ADC_SAR_SEQ_MAX_RESOLUTION != ADC_SAR_SEQ_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 249:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         if(chNum < ADC_SAR_SEQ_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ADC_SAR_SEQ_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 253:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_SEQ_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegV
 222              		.loc 1 253 0
 223 00d0 FB68     		ldr	r3, [r7, #12]
 224 00d2 9B00     		lsl	r3, r3, #2
 225 00d4 4B4A     		ldr	r2, .L18+92
 226 00d6 9446     		mov	ip, r2
 227 00d8 6344     		add	r3, r3, ip
 228 00da 7A68     		ldr	r2, [r7, #4]
 229 00dc 1A60     		str	r2, [r3]
 254:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 255:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             if((ADC_SAR_SEQ_channelsConfig[chNum] & ADC_SAR_SEQ_IS_SATURATE_EN_MASK) != 0u)
 230              		.loc 1 255 0
 231 00de 474B     		ldr	r3, .L18+84
 232 00e0 FA68     		ldr	r2, [r7, #12]
 233 00e2 9200     		lsl	r2, r2, #2
 234 00e4 D358     		ldr	r3, [r2, r3]
 235 00e6 0122     		mov	r2, #1
 236 00e8 1340     		and	r3, r2
 237 00ea 09D0     		beq	.L9
 256:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 257:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ADC_SAR_SEQ_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 238              		.loc 1 257 0
 239 00ec 3E4B     		ldr	r3, .L18+64
 240 00ee 3E4A     		ldr	r2, .L18+64
 241 00f0 1268     		ldr	r2, [r2]
 242 00f2 F968     		ldr	r1, [r7, #12]
 243 00f4 0120     		mov	r0, #1
 244 00f6 8840     		lsl	r0, r0, r1
 245 00f8 011C     		mov	r1, r0
 246 00fa 89B2     		uxth	r1, r1
 247 00fc 0A43     		orr	r2, r1
 248 00fe 1A60     		str	r2, [r3]
 249              	.L9:
 258:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }
 259:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 260:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             if((ADC_SAR_SEQ_channelsConfig[chNum] & ADC_SAR_SEQ_IS_RANGE_CTRL_EN_MASK) != 0u)
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 10


 250              		.loc 1 260 0
 251 0100 3E4B     		ldr	r3, .L18+84
 252 0102 FA68     		ldr	r2, [r7, #12]
 253 0104 9200     		lsl	r2, r2, #2
 254 0106 D358     		ldr	r3, [r2, r3]
 255 0108 0222     		mov	r2, #2
 256 010a 1340     		and	r3, r2
 257 010c 09D0     		beq	.L10
 261:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 262:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ADC_SAR_SEQ_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 258              		.loc 1 262 0
 259 010e 374B     		ldr	r3, .L18+68
 260 0110 364A     		ldr	r2, .L18+68
 261 0112 1268     		ldr	r2, [r2]
 262 0114 F968     		ldr	r1, [r7, #12]
 263 0116 0120     		mov	r0, #1
 264 0118 8840     		lsl	r0, r0, r1
 265 011a 011C     		mov	r1, r0
 266 011c 89B2     		uxth	r1, r1
 267 011e 0A43     		orr	r2, r1
 268 0120 1A60     		str	r2, [r3]
 269              	.L10:
 263:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }
 264:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         }
 265:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             else
 267:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 268:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 CY_SET_REG32(ADC_SAR_SEQ_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_SEQ_INJ_TAILG
 269:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 270:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 if((ADC_SAR_SEQ_channelsConfig[chNum] & ADC_SAR_SEQ_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 {
 272:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                     ADC_SAR_SEQ_SAR_INTR_MASK_REG |= ADC_SAR_SEQ_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 }
 274:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 275:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 if((ADC_SAR_SEQ_channelsConfig[chNum] & ADC_SAR_SEQ_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 {
 277:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                     ADC_SAR_SEQ_SAR_INTR_MASK_REG |= ADC_SAR_SEQ_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 }
 279:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }
 280:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ADC_SAR_SEQ_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 282:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         if((ADC_SAR_SEQ_channelsConfig[chNum] & ADC_SAR_SEQ_ALT_RESOLUTION_ON) != 0u)
 270              		.loc 1 282 0
 271 0122 364B     		ldr	r3, .L18+84
 272 0124 FA68     		ldr	r2, [r7, #12]
 273 0126 9200     		lsl	r2, r2, #2
 274 0128 D258     		ldr	r2, [r2, r3]
 275 012a 8023     		mov	r3, #128
 276 012c 9B00     		lsl	r3, r3, #2
 277 012e 1340     		and	r3, r2
 278 0130 03D0     		beq	.L11
 283:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 284:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                counts = (int32)ADC_SAR_SEQ_DEFAULT_MAX_WRK_ALT;
 279              		.loc 1 284 0
 280 0132 8023     		mov	r3, #128
 281 0134 DB00     		lsl	r3, r3, #3
 282 0136 BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 11


 283 0138 02E0     		b	.L12
 284              	.L11:
 285:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         }
 286:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         else
 287:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 288:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                counts = (int32)ADC_SAR_SEQ_SAR_WRK_MAX_12BIT;
 285              		.loc 1 288 0
 286 013a 8023     		mov	r3, #128
 287 013c 5B01     		lsl	r3, r3, #5
 288 013e BB60     		str	r3, [r7, #8]
 289              	.L12:
 289:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         }
 290:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 291:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         if((ADC_SAR_SEQ_channelsConfig[chNum] & ADC_SAR_SEQ_DIFFERENTIAL_EN) == 0u)
 290              		.loc 1 291 0
 291 0140 2E4B     		ldr	r3, .L18+84
 292 0142 FA68     		ldr	r2, [r7, #12]
 293 0144 9200     		lsl	r2, r2, #2
 294 0146 D258     		ldr	r2, [r2, r3]
 295 0148 8023     		mov	r3, #128
 296 014a 5B00     		lsl	r3, r3, #1
 297 014c 1340     		and	r3, r2
 298 014e 05D1     		bne	.L13
 292:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 293:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if((ADC_SAR_SEQ_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_SEQ__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 (ADC_SAR_SEQ_DEFAULT_NEG_INPUT_SEL == ADC_SAR_SEQ__VREF))
 295:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ADC_SAR_SEQ_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #else
 298:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ADC_SAR_SEQ_offset[chNum] = 0;
 299              		.loc 1 298 0
 300 0150 2D4B     		ldr	r3, .L18+96
 301 0152 FA68     		ldr	r2, [r7, #12]
 302 0154 5200     		lsl	r2, r2, #1
 303 0156 0021     		mov	r1, #0
 304 0158 D152     		strh	r1, [r2, r3]
 305 015a 09E0     		b	.L14
 306              	.L13:
 299:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_SEQ__FSIGNED */
 300:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         }
 301:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 303:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #if(ADC_SAR_SEQ_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_SEQ__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ADC_SAR_SEQ_offset[chNum] = (int16)(counts / 2);
 307              		.loc 1 305 0
 308 015c BB68     		ldr	r3, [r7, #8]
 309 015e 002B     		cmp	r3, #0
 310 0160 00DA     		bge	.L15
 311 0162 0133     		add	r3, r3, #1
 312              	.L15:
 313 0164 5B10     		asr	r3, r3, #1
 314 0166 99B2     		uxth	r1, r3
 315 0168 274B     		ldr	r3, .L18+96
 316 016a FA68     		ldr	r2, [r7, #12]
 317 016c 5200     		lsl	r2, r2, #1
 318 016e D152     		strh	r1, [r2, r3]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 12


 319              	.L14:
 306:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #else
 307:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ADC_SAR_SEQ_offset[chNum] = 0;
 308:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             #endif /* end ADC_SAR_SEQ_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_SEQ__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         }
 310:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_SEQ_10MV_COUNTS) +
 320              		.loc 1 311 0 discriminator 2
 321 0170 BB68     		ldr	r3, [r7, #8]
 322 0172 264A     		ldr	r2, .L18+100
 323 0174 5343     		mul	r3, r2
 324 0176 8022     		mov	r2, #128
 325 0178 D200     		lsl	r2, r2, #3
 326 017a 9446     		mov	ip, r2
 327 017c 6344     		add	r3, r3, ip
 312:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                             ADC_SAR_SEQ_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_SEQ_DEFAULT_VREF_MV_VALUE
 328              		.loc 1 312 0 discriminator 2
 329 017e 002B     		cmp	r3, #0
 330 0180 02DA     		bge	.L16
 331 0182 234A     		ldr	r2, .L18+104
 332 0184 9446     		mov	ip, r2
 333 0186 6344     		add	r3, r3, ip
 334              	.L16:
 335 0188 DB12     		asr	r3, r3, #11
 311:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                             ADC_SAR_SEQ_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_SEQ_DEFAULT_VREF_MV_VALUE
 336              		.loc 1 311 0 discriminator 2
 337 018a 9BB2     		uxth	r3, r3
 338 018c 19B2     		sxth	r1, r3
 339 018e 214B     		ldr	r3, .L18+108
 340 0190 FA68     		ldr	r2, [r7, #12]
 341 0192 9200     		lsl	r2, r2, #2
 342 0194 D150     		str	r1, [r2, r3]
 232:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 343              		.loc 1 232 0 discriminator 2
 344 0196 FB68     		ldr	r3, [r7, #12]
 345 0198 0133     		add	r3, r3, #1
 346 019a FB60     		str	r3, [r7, #12]
 347              	.L8:
 232:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 348              		.loc 1 232 0 is_stmt 0 discriminator 1
 349 019c FB68     		ldr	r3, [r7, #12]
 350 019e 032B     		cmp	r3, #3
 351 01a0 86D9     		bls	.L17
 313:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 314:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 352              		.loc 1 314 0 is_stmt 1
 353 01a2 BD46     		mov	sp, r7
 354 01a4 04B0     		add	sp, sp, #16
 355              		@ sp needed
 356 01a6 80BD     		pop	{r7, pc}
 357              	.L19:
 358              		.align	2
 359              	.L18:
 360 01a8 00000000 		.word	ADC_SAR_SEQ_ISR
 361 01ac 20003A40 		.word	1077542944
 362 01b0 80033A40 		.word	1077543808
 363 01b4 C0201013 		.word	319824064
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 13


 364 01b8 C0200013 		.word	318775488
 365 01bc 00003A40 		.word	1077542912
 366 01c0 04003A40 		.word	1077542916
 367 01c4 C5000080 		.word	-2147483451
 368 01c8 18003A40 		.word	1077542936
 369 01cc 0000FF0F 		.word	268369920
 370 01d0 1C003A40 		.word	1077542940
 371 01d4 10003A40 		.word	1077542928
 372 01d8 04000400 		.word	262148
 373 01dc 14003A40 		.word	1077542932
 374 01e0 00033A40 		.word	1077543680
 375 01e4 40033A40 		.word	1077543744
 376 01e8 28023A40 		.word	1077543464
 377 01ec 38023A40 		.word	1077543480
 378 01f0 18023A40 		.word	1077543448
 379 01f4 30003A40 		.word	1077542960
 380 01f8 FFFFFFDF 		.word	-536870913
 381 01fc 00000000 		.word	ADC_SAR_SEQ_channelsConfig
 382 0200 10000000 		.word	ADC_SAR_SEQ_InputsPlacement.4852
 383 0204 80003A40 		.word	1077543040
 384 0208 00000000 		.word	ADC_SAR_SEQ_offset
 385 020c 10270000 		.word	10000
 386 0210 FF070000 		.word	2047
 387 0214 00000000 		.word	ADC_SAR_SEQ_countsPer10Volt
 388              		.cfi_endproc
 389              	.LFE2:
 390              		.size	ADC_SAR_SEQ_Init, .-ADC_SAR_SEQ_Init
 391              		.section	.text.ADC_SAR_SEQ_Enable,"ax",%progbits
 392              		.align	2
 393              		.global	ADC_SAR_SEQ_Enable
 394              		.code	16
 395              		.thumb_func
 396              		.type	ADC_SAR_SEQ_Enable, %function
 397              	ADC_SAR_SEQ_Enable:
 398              	.LFB3:
 315:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 316:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 320:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 321:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 323:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 325:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 326:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 327:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 328:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 329:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_Enable(void)
 331:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 399              		.loc 1 331 0
 400              		.cfi_startproc
 401 0000 80B5     		push	{r7, lr}
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 7, -8
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 14


 404              		.cfi_offset 14, -4
 405 0002 00AF     		add	r7, sp, #0
 406              		.cfi_def_cfa_register 7
 332:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     if (0u == (ADC_SAR_SEQ_SAR_CTRL_REG & ADC_SAR_SEQ_ENABLE))
 407              		.loc 1 332 0
 408 0004 0A4B     		ldr	r3, .L23
 409 0006 1B68     		ldr	r3, [r3]
 410 0008 002B     		cmp	r3, #0
 411 000a 0EDB     		blt	.L20
 333:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 334:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_CY_SAR_IP_VER != ADC_SAR_SEQ_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 336:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             while (0u != (ADC_SAR_SEQ_SAR_STATUS_REG & ADC_SAR_SEQ_STATUS_BUSY))
 412              		.loc 1 336 0
 413 000c C046     		mov	r8, r8
 414              	.L22:
 415              		.loc 1 336 0 is_stmt 0 discriminator 1
 416 000e 094B     		ldr	r3, .L23+4
 417 0010 1B68     		ldr	r3, [r3]
 418 0012 002B     		cmp	r3, #0
 419 0014 FBDB     		blt	.L22
 337:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 338:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }
 340:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* (ADC_SAR_SEQ_CY_SAR_IP_VER != ADC_SAR_SEQ_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         
 342:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_SAR_CTRL_REG |= ADC_SAR_SEQ_ENABLE;
 420              		.loc 1 342 0 is_stmt 1
 421 0016 064B     		ldr	r3, .L23
 422 0018 054A     		ldr	r2, .L23
 423 001a 1268     		ldr	r2, [r2]
 424 001c 8021     		mov	r1, #128
 425 001e 0906     		lsl	r1, r1, #24
 426 0020 0A43     		orr	r2, r1
 427 0022 1A60     		str	r2, [r3]
 343:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         
 344:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         CyDelayUs(ADC_SAR_SEQ_10US_DELAY);         
 428              		.loc 1 345 0
 429 0024 0A20     		mov	r0, #10
 430 0026 FFF7FEFF 		bl	CyDelayUs
 431              	.L20:
 346:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 347:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 432              		.loc 1 347 0
 433 002a BD46     		mov	sp, r7
 434              		@ sp needed
 435 002c 80BD     		pop	{r7, pc}
 436              	.L24:
 437 002e C046     		.align	2
 438              	.L23:
 439 0030 00003A40 		.word	1077542912
 440 0034 08023A40 		.word	1077543432
 441              		.cfi_endproc
 442              	.LFE3:
 443              		.size	ADC_SAR_SEQ_Enable, .-ADC_SAR_SEQ_Enable
 444              		.section	.text.ADC_SAR_SEQ_Stop,"ax",%progbits
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 15


 445              		.align	2
 446              		.global	ADC_SAR_SEQ_Stop
 447              		.code	16
 448              		.thumb_func
 449              		.type	ADC_SAR_SEQ_Stop, %function
 450              	ADC_SAR_SEQ_Stop:
 451              	.LFB4:
 348:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 349:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 350:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_Stop
 352:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 354:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 355:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  mode.
 357:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 358:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 360:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 361:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 362:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 363:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 364:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_Stop(void)
 366:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 452              		.loc 1 366 0
 453              		.cfi_startproc
 454 0000 80B5     		push	{r7, lr}
 455              		.cfi_def_cfa_offset 8
 456              		.cfi_offset 7, -8
 457              		.cfi_offset 14, -4
 458 0002 00AF     		add	r7, sp, #0
 459              		.cfi_def_cfa_register 7
 367:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_CTRL_REG &= (uint32)~ADC_SAR_SEQ_ENABLE;
 460              		.loc 1 367 0
 461 0004 034B     		ldr	r3, .L26
 462 0006 034A     		ldr	r2, .L26
 463 0008 1268     		ldr	r2, [r2]
 464 000a 5200     		lsl	r2, r2, #1
 465 000c 5208     		lsr	r2, r2, #1
 466 000e 1A60     		str	r2, [r3]
 368:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 467              		.loc 1 368 0
 468 0010 BD46     		mov	sp, r7
 469              		@ sp needed
 470 0012 80BD     		pop	{r7, pc}
 471              	.L27:
 472              		.align	2
 473              	.L26:
 474 0014 00003A40 		.word	1077542912
 475              		.cfi_endproc
 476              	.LFE4:
 477              		.size	ADC_SAR_SEQ_Stop, .-ADC_SAR_SEQ_Stop
 478              		.section	.text.ADC_SAR_SEQ_StartConvert,"ax",%progbits
 479              		.align	2
 480              		.global	ADC_SAR_SEQ_StartConvert
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 16


 481              		.code	16
 482              		.thumb_func
 483              		.type	ADC_SAR_SEQ_StartConvert, %function
 484              	ADC_SAR_SEQ_StartConvert:
 485              	.LFB5:
 369:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 370:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 371:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_StartConvert
 373:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 375:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 376:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Description:
 377:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 380:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 384:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 386:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 387:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 388:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 389:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 390:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_StartConvert(void)
 392:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 486              		.loc 1 392 0
 487              		.cfi_startproc
 488 0000 80B5     		push	{r7, lr}
 489              		.cfi_def_cfa_offset 8
 490              		.cfi_offset 7, -8
 491              		.cfi_offset 14, -4
 492 0002 00AF     		add	r7, sp, #0
 493              		.cfi_def_cfa_register 7
 393:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_SEQ__FREERUNNING)
 394:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_SAR_SAMPLE_CTRL_REG |= ADC_SAR_SEQ_CONTINUOUS_EN;
 494              		.loc 1 394 0
 495 0004 044B     		ldr	r3, .L29
 496 0006 044A     		ldr	r2, .L29
 497 0008 1268     		ldr	r2, [r2]
 498 000a 8021     		mov	r1, #128
 499 000c 4902     		lsl	r1, r1, #9
 500 000e 0A43     		orr	r2, r1
 501 0010 1A60     		str	r2, [r3]
 395:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_SAR_START_CTRL_REG = ADC_SAR_SEQ_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif /* End ADC_SAR_SEQ_DEFAULT_SAMPLE_MODE == ADC_SAR_SEQ__FREERUNNING */
 398:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 399:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 502              		.loc 1 399 0
 503 0012 BD46     		mov	sp, r7
 504              		@ sp needed
 505 0014 80BD     		pop	{r7, pc}
 506              	.L30:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 17


 507 0016 C046     		.align	2
 508              	.L29:
 509 0018 04003A40 		.word	1077542916
 510              		.cfi_endproc
 511              	.LFE5:
 512              		.size	ADC_SAR_SEQ_StartConvert, .-ADC_SAR_SEQ_StartConvert
 513              		.section	.text.ADC_SAR_SEQ_StopConvert,"ax",%progbits
 514              		.align	2
 515              		.global	ADC_SAR_SEQ_StopConvert
 516              		.code	16
 517              		.thumb_func
 518              		.type	ADC_SAR_SEQ_StopConvert, %function
 519              	ADC_SAR_SEQ_StopConvert:
 520              	.LFB6:
 400:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 401:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 402:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_StopConvert
 404:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 406:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 407:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 409:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 411:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 412:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 413:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 414:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 415:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_StopConvert(void)
 417:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 521              		.loc 1 417 0
 522              		.cfi_startproc
 523 0000 80B5     		push	{r7, lr}
 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 7, -8
 526              		.cfi_offset 14, -4
 527 0002 00AF     		add	r7, sp, #0
 528              		.cfi_def_cfa_register 7
 418:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_SEQ__FREERUNNING)
 419:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_SEQ_CONTINUOUS_EN);
 529              		.loc 1 419 0
 530 0004 034B     		ldr	r3, .L32
 531 0006 034A     		ldr	r2, .L32
 532 0008 1268     		ldr	r2, [r2]
 533 000a 0349     		ldr	r1, .L32+4
 534 000c 0A40     		and	r2, r1
 535 000e 1A60     		str	r2, [r3]
 420:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif /* ADC_SAR_SEQ_DEFAULT_SAMPLE_MODE == ADC_SAR_SEQ__FREERUNNING */
 421:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 536              		.loc 1 421 0
 537 0010 BD46     		mov	sp, r7
 538              		@ sp needed
 539 0012 80BD     		pop	{r7, pc}
 540              	.L33:
 541              		.align	2
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 18


 542              	.L32:
 543 0014 04003A40 		.word	1077542916
 544 0018 FFFFFEFF 		.word	-65537
 545              		.cfi_endproc
 546              	.LFE6:
 547              		.size	ADC_SAR_SEQ_StopConvert, .-ADC_SAR_SEQ_StopConvert
 548              		.section	.text.ADC_SAR_SEQ_IsEndConversion,"ax",%progbits
 549              		.align	2
 550              		.global	ADC_SAR_SEQ_IsEndConversion
 551              		.code	16
 552              		.thumb_func
 553              		.type	ADC_SAR_SEQ_IsEndConversion, %function
 554              	ADC_SAR_SEQ_IsEndConversion:
 555              	.LFB7:
 422:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 423:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 424:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_IsEndConversion
 426:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 428:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 429:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  completed.
 436:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 437:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 445:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 446:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 449:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** uint32 ADC_SAR_SEQ_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 556              		.loc 1 451 0
 557              		.cfi_startproc
 558 0000 80B5     		push	{r7, lr}
 559              		.cfi_def_cfa_offset 8
 560              		.cfi_offset 7, -8
 561              		.cfi_offset 14, -4
 562 0002 84B0     		sub	sp, sp, #16
 563              		.cfi_def_cfa_offset 24
 564 0004 00AF     		add	r7, sp, #0
 565              		.cfi_def_cfa_register 7
 566 0006 7860     		str	r0, [r7, #4]
 452:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     uint32 status = 0u;
 567              		.loc 1 452 0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 19


 568 0008 0023     		mov	r3, #0
 569 000a FB60     		str	r3, [r7, #12]
 453:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 454:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     if((retMode & (ADC_SAR_SEQ_RETURN_STATUS | ADC_SAR_SEQ_WAIT_FOR_RESULT)) != 0u)
 570              		.loc 1 454 0
 571 000c 7B68     		ldr	r3, [r7, #4]
 572 000e 0322     		mov	r2, #3
 573 0010 1340     		and	r3, r2
 574 0012 11D0     		beq	.L35
 575              	.L37:
 455:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 456:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         do
 457:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 458:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             status = ADC_SAR_SEQ_SAR_INTR_REG & ADC_SAR_SEQ_EOS_MASK;
 576              		.loc 1 458 0 discriminator 2
 577 0014 0B4B     		ldr	r3, .L39
 578 0016 1B68     		ldr	r3, [r3]
 579 0018 0122     		mov	r2, #1
 580 001a 1340     		and	r3, r2
 581 001c FB60     		str	r3, [r7, #12]
 459:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         }while((status == 0u) && ((retMode & ADC_SAR_SEQ_WAIT_FOR_RESULT) != 0u));
 582              		.loc 1 459 0 discriminator 2
 583 001e FB68     		ldr	r3, [r7, #12]
 584 0020 002B     		cmp	r3, #0
 585 0022 03D1     		bne	.L36
 586              		.loc 1 459 0 is_stmt 0 discriminator 1
 587 0024 7B68     		ldr	r3, [r7, #4]
 588 0026 0222     		mov	r2, #2
 589 0028 1340     		and	r3, r2
 590 002a F3D1     		bne	.L37
 591              	.L36:
 460:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 461:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         if(status != 0u)
 592              		.loc 1 461 0 is_stmt 1
 593 002c FB68     		ldr	r3, [r7, #12]
 594 002e 002B     		cmp	r3, #0
 595 0030 02D0     		beq	.L35
 462:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 463:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             ADC_SAR_SEQ_SAR_INTR_REG = ADC_SAR_SEQ_EOS_MASK;
 596              		.loc 1 464 0
 597 0032 044B     		ldr	r3, .L39
 598 0034 0122     		mov	r2, #1
 599 0036 1A60     		str	r2, [r3]
 600              	.L35:
 465:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         }
 466:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 467:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 468:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #if(ADC_SAR_SEQ_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         if((retMode & (ADC_SAR_SEQ_RETURN_STATUS_INJ | ADC_SAR_SEQ_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         {
 471:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             do
 472:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 473:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 status |= ADC_SAR_SEQ_SAR_INTR_REG & ADC_SAR_SEQ_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }while(((status & ADC_SAR_SEQ_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                    ((retMode & ADC_SAR_SEQ_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 20


 477:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             if((status & ADC_SAR_SEQ_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 479:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ADC_SAR_SEQ_SAR_INTR_REG = ADC_SAR_SEQ_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }
 482:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         }
 483:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     #endif /* ADC_SAR_SEQ_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 485:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     return (status);
 601              		.loc 1 485 0
 602 0038 FB68     		ldr	r3, [r7, #12]
 486:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 603              		.loc 1 486 0
 604 003a 181C     		mov	r0, r3
 605 003c BD46     		mov	sp, r7
 606 003e 04B0     		add	sp, sp, #16
 607              		@ sp needed
 608 0040 80BD     		pop	{r7, pc}
 609              	.L40:
 610 0042 C046     		.align	2
 611              	.L39:
 612 0044 10023A40 		.word	1077543440
 613              		.cfi_endproc
 614              	.LFE7:
 615              		.size	ADC_SAR_SEQ_IsEndConversion, .-ADC_SAR_SEQ_IsEndConversion
 616              		.section	.text.ADC_SAR_SEQ_GetResult16,"ax",%progbits
 617              		.align	2
 618              		.global	ADC_SAR_SEQ_GetResult16
 619              		.code	16
 620              		.thumb_func
 621              		.type	ADC_SAR_SEQ_GetResult16, %function
 622              	ADC_SAR_SEQ_GetResult16:
 623              	.LFB8:
 487:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 488:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 489:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_GetResult16
 491:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 493:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 494:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 496:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 500:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 501:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 503:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** int16 ADC_SAR_SEQ_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 624              		.loc 1 505 0
 625              		.cfi_startproc
 626 0000 80B5     		push	{r7, lr}
 627              		.cfi_def_cfa_offset 8
 628              		.cfi_offset 7, -8
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 21


 629              		.cfi_offset 14, -4
 630 0002 84B0     		sub	sp, sp, #16
 631              		.cfi_def_cfa_offset 24
 632 0004 00AF     		add	r7, sp, #0
 633              		.cfi_def_cfa_register 7
 634 0006 7860     		str	r0, [r7, #4]
 506:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 508:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     CYASSERT(chan < ADC_SAR_SEQ_TOTAL_CHANNELS_NUM);
 635              		.loc 1 509 0
 636 0008 7B68     		ldr	r3, [r7, #4]
 637 000a 032B     		cmp	r3, #3
 638 000c 02D9     		bls	.L42
 639              		.loc 1 509 0 is_stmt 0 discriminator 1
 640 000e 0020     		mov	r0, #0
 641 0010 FFF7FEFF 		bl	CyHalt
 642              	.L42:
 510:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 511:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     if(chan < ADC_SAR_SEQ_SEQUENCED_CHANNELS_NUM)
 643              		.loc 1 511 0 is_stmt 1
 644 0014 7B68     		ldr	r3, [r7, #4]
 645 0016 032B     		cmp	r3, #3
 646 0018 09D8     		bhi	.L43
 512:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 513:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_SEQ_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 647              		.loc 1 513 0
 648 001a 7B68     		ldr	r3, [r7, #4]
 649 001c 9B00     		lsl	r3, r3, #2
 650 001e 084A     		ldr	r2, .L46
 651 0020 9446     		mov	ip, r2
 652 0022 6344     		add	r3, r3, ip
 653 0024 1B68     		ldr	r3, [r3]
 654 0026 1B04     		lsl	r3, r3, #16
 655 0028 1B0C     		lsr	r3, r3, #16
 656 002a FB60     		str	r3, [r7, #12]
 657 002c 01E0     		b	.L44
 658              	.L43:
 514:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 ADC_SAR_SEQ_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 516:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     else
 517:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 518:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             result = ADC_SAR_SEQ_SAR_INJ_RESULT_REG & ADC_SAR_SEQ_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #else
 521:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             result = 0u;
 659              		.loc 1 521 0
 660 002e 0023     		mov	r3, #0
 661 0030 FB60     		str	r3, [r7, #12]
 662              	.L44:
 522:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ADC_SAR_SEQ_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 524:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 525:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     return ( (int16)result );
 663              		.loc 1 525 0
 664 0032 FB68     		ldr	r3, [r7, #12]
 665 0034 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 22


 666 0036 1BB2     		sxth	r3, r3
 526:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 667              		.loc 1 526 0
 668 0038 181C     		mov	r0, r3
 669 003a BD46     		mov	sp, r7
 670 003c 04B0     		add	sp, sp, #16
 671              		@ sp needed
 672 003e 80BD     		pop	{r7, pc}
 673              	.L47:
 674              		.align	2
 675              	.L46:
 676 0040 80013A40 		.word	1077543296
 677              		.cfi_endproc
 678              	.LFE8:
 679              		.size	ADC_SAR_SEQ_GetResult16, .-ADC_SAR_SEQ_GetResult16
 680              		.section	.text.ADC_SAR_SEQ_SetChanMask,"ax",%progbits
 681              		.align	2
 682              		.global	ADC_SAR_SEQ_SetChanMask
 683              		.code	16
 684              		.thumb_func
 685              		.type	ADC_SAR_SEQ_SetChanMask, %function
 686              	ADC_SAR_SEQ_SetChanMask:
 687              	.LFB9:
 527:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 528:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 529:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_SetChanMask
 531:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 533:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 534:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 536:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 545:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 546:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 547:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 548:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 688              		.loc 1 550 0
 689              		.cfi_startproc
 690 0000 80B5     		push	{r7, lr}
 691              		.cfi_def_cfa_offset 8
 692              		.cfi_offset 7, -8
 693              		.cfi_offset 14, -4
 694 0002 82B0     		sub	sp, sp, #8
 695              		.cfi_def_cfa_offset 16
 696 0004 00AF     		add	r7, sp, #0
 697              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 23


 698 0006 7860     		str	r0, [r7, #4]
 551:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_CHAN_EN_REG = mask & ADC_SAR_SEQ_MAX_CHANNELS_EN_MASK;
 699              		.loc 1 551 0
 700 0008 034B     		ldr	r3, .L49
 701 000a 7A68     		ldr	r2, [r7, #4]
 702 000c 0F21     		mov	r1, #15
 703 000e 0A40     		and	r2, r1
 704 0010 1A60     		str	r2, [r3]
 552:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 705              		.loc 1 552 0
 706 0012 BD46     		mov	sp, r7
 707 0014 02B0     		add	sp, sp, #8
 708              		@ sp needed
 709 0016 80BD     		pop	{r7, pc}
 710              	.L50:
 711              		.align	2
 712              	.L49:
 713 0018 20003A40 		.word	1077542944
 714              		.cfi_endproc
 715              	.LFE9:
 716              		.size	ADC_SAR_SEQ_SetChanMask, .-ADC_SAR_SEQ_SetChanMask
 717              		.section	.text.ADC_SAR_SEQ_SetLowLimit,"ax",%progbits
 718              		.align	2
 719              		.global	ADC_SAR_SEQ_SetLowLimit
 720              		.code	16
 721              		.thumb_func
 722              		.type	ADC_SAR_SEQ_SetLowLimit, %function
 723              	ADC_SAR_SEQ_SetLowLimit:
 724              	.LFB10:
 553:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 554:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** #if(ADC_SAR_SEQ_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 556:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 557:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Function Name: ADC_SAR_SEQ_EnableInjection
 559:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 561:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 564:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  None.
 566:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 567:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Return:
 568:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  None.
 569:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 570:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     void ADC_SAR_SEQ_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 573:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         ADC_SAR_SEQ_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_SEQ_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 575:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 576:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** #endif /* ADC_SAR_SEQ_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 578:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 579:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_SetLowLimit
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 24


 581:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 583:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 584:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 586:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 589:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 590:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 591:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 592:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 725              		.loc 1 594 0
 726              		.cfi_startproc
 727 0000 80B5     		push	{r7, lr}
 728              		.cfi_def_cfa_offset 8
 729              		.cfi_offset 7, -8
 730              		.cfi_offset 14, -4
 731 0002 82B0     		sub	sp, sp, #8
 732              		.cfi_def_cfa_offset 16
 733 0004 00AF     		add	r7, sp, #0
 734              		.cfi_def_cfa_register 7
 735 0006 7860     		str	r0, [r7, #4]
 595:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_SEQ_RANGE_LOW_MASK);
 736              		.loc 1 595 0
 737 0008 084B     		ldr	r3, .L52
 738 000a 084A     		ldr	r2, .L52
 739 000c 1268     		ldr	r2, [r2]
 740 000e 120C     		lsr	r2, r2, #16
 741 0010 1204     		lsl	r2, r2, #16
 742 0012 1A60     		str	r2, [r3]
 596:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_SEQ_RANGE_LOW_MASK;
 743              		.loc 1 596 0
 744 0014 054B     		ldr	r3, .L52
 745 0016 054A     		ldr	r2, .L52
 746 0018 1168     		ldr	r1, [r2]
 747 001a 7A68     		ldr	r2, [r7, #4]
 748 001c 1204     		lsl	r2, r2, #16
 749 001e 120C     		lsr	r2, r2, #16
 750 0020 0A43     		orr	r2, r1
 751 0022 1A60     		str	r2, [r3]
 597:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 752              		.loc 1 597 0
 753 0024 BD46     		mov	sp, r7
 754 0026 02B0     		add	sp, sp, #8
 755              		@ sp needed
 756 0028 80BD     		pop	{r7, pc}
 757              	.L53:
 758 002a C046     		.align	2
 759              	.L52:
 760 002c 18003A40 		.word	1077542936
 761              		.cfi_endproc
 762              	.LFE10:
 763              		.size	ADC_SAR_SEQ_SetLowLimit, .-ADC_SAR_SEQ_SetLowLimit
 764              		.section	.text.ADC_SAR_SEQ_SetHighLimit,"ax",%progbits
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 25


 765              		.align	2
 766              		.global	ADC_SAR_SEQ_SetHighLimit
 767              		.code	16
 768              		.thumb_func
 769              		.type	ADC_SAR_SEQ_SetHighLimit, %function
 770              	ADC_SAR_SEQ_SetHighLimit:
 771              	.LFB11:
 598:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 599:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 600:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_SetHighLimit
 602:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 604:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 605:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 607:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 610:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 611:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 612:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 613:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 772              		.loc 1 615 0
 773              		.cfi_startproc
 774 0000 80B5     		push	{r7, lr}
 775              		.cfi_def_cfa_offset 8
 776              		.cfi_offset 7, -8
 777              		.cfi_offset 14, -4
 778 0002 82B0     		sub	sp, sp, #8
 779              		.cfi_def_cfa_offset 16
 780 0004 00AF     		add	r7, sp, #0
 781              		.cfi_def_cfa_register 7
 782 0006 7860     		str	r0, [r7, #4]
 616:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_SEQ_RANGE_HIGH_MASK);
 783              		.loc 1 616 0
 784 0008 074B     		ldr	r3, .L55
 785 000a 074A     		ldr	r2, .L55
 786 000c 1268     		ldr	r2, [r2]
 787 000e 1204     		lsl	r2, r2, #16
 788 0010 120C     		lsr	r2, r2, #16
 789 0012 1A60     		str	r2, [r3]
 617:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_SEQ_RANGE_HIGH_OFFSET);
 790              		.loc 1 617 0
 791 0014 044B     		ldr	r3, .L55
 792 0016 044A     		ldr	r2, .L55
 793 0018 1168     		ldr	r1, [r2]
 794 001a 7A68     		ldr	r2, [r7, #4]
 795 001c 1204     		lsl	r2, r2, #16
 796 001e 0A43     		orr	r2, r1
 797 0020 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 798              		.loc 1 618 0
 799 0022 BD46     		mov	sp, r7
 800 0024 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 26


 801              		@ sp needed
 802 0026 80BD     		pop	{r7, pc}
 803              	.L56:
 804              		.align	2
 805              	.L55:
 806 0028 18003A40 		.word	1077542936
 807              		.cfi_endproc
 808              	.LFE11:
 809              		.size	ADC_SAR_SEQ_SetHighLimit, .-ADC_SAR_SEQ_SetHighLimit
 810              		.section	.text.ADC_SAR_SEQ_SetLimitMask,"ax",%progbits
 811              		.align	2
 812              		.global	ADC_SAR_SEQ_SetLimitMask
 813              		.code	16
 814              		.thumb_func
 815              		.type	ADC_SAR_SEQ_SetLimitMask, %function
 816              	ADC_SAR_SEQ_SetLimitMask:
 817              	.LFB12:
 619:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 620:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 621:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_SetLimitMask
 623:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 625:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 626:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 628:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 634:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 635:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 636:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 637:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 818              		.loc 1 639 0
 819              		.cfi_startproc
 820 0000 80B5     		push	{r7, lr}
 821              		.cfi_def_cfa_offset 8
 822              		.cfi_offset 7, -8
 823              		.cfi_offset 14, -4
 824 0002 82B0     		sub	sp, sp, #8
 825              		.cfi_def_cfa_offset 16
 826 0004 00AF     		add	r7, sp, #0
 827              		.cfi_def_cfa_register 7
 828 0006 7860     		str	r0, [r7, #4]
 640:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_SEQ_MAX_CHANNELS_EN_MASK;
 829              		.loc 1 640 0
 830 0008 034B     		ldr	r3, .L58
 831 000a 7A68     		ldr	r2, [r7, #4]
 832 000c 0F21     		mov	r1, #15
 833 000e 0A40     		and	r2, r1
 834 0010 1A60     		str	r2, [r3]
 641:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 27


 835              		.loc 1 641 0
 836 0012 BD46     		mov	sp, r7
 837 0014 02B0     		add	sp, sp, #8
 838              		@ sp needed
 839 0016 80BD     		pop	{r7, pc}
 840              	.L59:
 841              		.align	2
 842              	.L58:
 843 0018 38023A40 		.word	1077543480
 844              		.cfi_endproc
 845              	.LFE12:
 846              		.size	ADC_SAR_SEQ_SetLimitMask, .-ADC_SAR_SEQ_SetLimitMask
 847              		.section	.text.ADC_SAR_SEQ_SetSatMask,"ax",%progbits
 848              		.align	2
 849              		.global	ADC_SAR_SEQ_SetSatMask
 850              		.code	16
 851              		.thumb_func
 852              		.type	ADC_SAR_SEQ_SetSatMask, %function
 853              	ADC_SAR_SEQ_SetSatMask:
 854              	.LFB13:
 642:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 643:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 644:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_SetSatMask
 646:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 648:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 649:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 651:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 657:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 658:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 659:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 660:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 855              		.loc 1 662 0
 856              		.cfi_startproc
 857 0000 80B5     		push	{r7, lr}
 858              		.cfi_def_cfa_offset 8
 859              		.cfi_offset 7, -8
 860              		.cfi_offset 14, -4
 861 0002 82B0     		sub	sp, sp, #8
 862              		.cfi_def_cfa_offset 16
 863 0004 00AF     		add	r7, sp, #0
 864              		.cfi_def_cfa_register 7
 865 0006 7860     		str	r0, [r7, #4]
 663:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_SEQ_MAX_CHANNELS_EN_MASK;
 866              		.loc 1 663 0
 867 0008 034B     		ldr	r3, .L61
 868 000a 7A68     		ldr	r2, [r7, #4]
 869 000c 0F21     		mov	r1, #15
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 28


 870 000e 0A40     		and	r2, r1
 871 0010 1A60     		str	r2, [r3]
 664:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 872              		.loc 1 664 0
 873 0012 BD46     		mov	sp, r7
 874 0014 02B0     		add	sp, sp, #8
 875              		@ sp needed
 876 0016 80BD     		pop	{r7, pc}
 877              	.L62:
 878              		.align	2
 879              	.L61:
 880 0018 28023A40 		.word	1077543464
 881              		.cfi_endproc
 882              	.LFE13:
 883              		.size	ADC_SAR_SEQ_SetSatMask, .-ADC_SAR_SEQ_SetSatMask
 884              		.section	.text.ADC_SAR_SEQ_SetOffset,"ax",%progbits
 885              		.align	2
 886              		.global	ADC_SAR_SEQ_SetOffset
 887              		.code	16
 888              		.thumb_func
 889              		.type	ADC_SAR_SEQ_SetOffset, %function
 890              	ADC_SAR_SEQ_SetOffset:
 891              	.LFB14:
 665:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 666:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 667:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_SetOffset
 669:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 671:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 672:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 677:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 682:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 683:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 684:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 685:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_SAR_SEQ_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 688:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 892              		.loc 1 690 0
 893              		.cfi_startproc
 894 0000 80B5     		push	{r7, lr}
 895              		.cfi_def_cfa_offset 8
 896              		.cfi_offset 7, -8
 897              		.cfi_offset 14, -4
 898 0002 82B0     		sub	sp, sp, #8
 899              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 29


 900 0004 00AF     		add	r7, sp, #0
 901              		.cfi_def_cfa_register 7
 902 0006 7860     		str	r0, [r7, #4]
 903 0008 0A1C     		mov	r2, r1
 904 000a BB1C     		add	r3, r7, #2
 905 000c 1A80     		strh	r2, [r3]
 691:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     CYASSERT(chan < ADC_SAR_SEQ_TOTAL_CHANNELS_NUM);
 906              		.loc 1 692 0
 907 000e 7B68     		ldr	r3, [r7, #4]
 908 0010 032B     		cmp	r3, #3
 909 0012 02D9     		bls	.L64
 910              		.loc 1 692 0 is_stmt 0 discriminator 1
 911 0014 0020     		mov	r0, #0
 912 0016 FFF7FEFF 		bl	CyHalt
 913              	.L64:
 693:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 694:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_offset[chan] = offset;
 914              		.loc 1 694 0 is_stmt 1
 915 001a 044B     		ldr	r3, .L65
 916 001c 7A68     		ldr	r2, [r7, #4]
 917 001e 5200     		lsl	r2, r2, #1
 918 0020 B91C     		add	r1, r7, #2
 919 0022 0988     		ldrh	r1, [r1]
 920 0024 D152     		strh	r1, [r2, r3]
 695:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 921              		.loc 1 695 0
 922 0026 BD46     		mov	sp, r7
 923 0028 02B0     		add	sp, sp, #8
 924              		@ sp needed
 925 002a 80BD     		pop	{r7, pc}
 926              	.L66:
 927              		.align	2
 928              	.L65:
 929 002c 00000000 		.word	ADC_SAR_SEQ_offset
 930              		.cfi_endproc
 931              	.LFE14:
 932              		.size	ADC_SAR_SEQ_SetOffset, .-ADC_SAR_SEQ_SetOffset
 933              		.section	.text.ADC_SAR_SEQ_SetGain,"ax",%progbits
 934              		.align	2
 935              		.global	ADC_SAR_SEQ_SetGain
 936              		.code	16
 937              		.thumb_func
 938              		.type	ADC_SAR_SEQ_SetGain, %function
 939              	ADC_SAR_SEQ_SetGain:
 940              	.LFB15:
 696:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 697:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 698:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Function Name: ADC_SAR_SEQ_SetGain
 700:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 702:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Summary:
 703:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  calibrate the ADC with a known input or if an external reference is
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 30


 707:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 711:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 715:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Return:
 716:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  None.
 717:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 718:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *  ADC_SAR_SEQ_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *
 722:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** void ADC_SAR_SEQ_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** {
 941              		.loc 1 724 0
 942              		.cfi_startproc
 943 0000 80B5     		push	{r7, lr}
 944              		.cfi_def_cfa_offset 8
 945              		.cfi_offset 7, -8
 946              		.cfi_offset 14, -4
 947 0002 82B0     		sub	sp, sp, #8
 948              		.cfi_def_cfa_offset 16
 949 0004 00AF     		add	r7, sp, #0
 950              		.cfi_def_cfa_register 7
 951 0006 7860     		str	r0, [r7, #4]
 952 0008 3960     		str	r1, [r7]
 725:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     CYASSERT(chan < ADC_SAR_SEQ_TOTAL_CHANNELS_NUM);
 953              		.loc 1 726 0
 954 000a 7B68     		ldr	r3, [r7, #4]
 955 000c 032B     		cmp	r3, #3
 956 000e 02D9     		bls	.L68
 957              		.loc 1 726 0 is_stmt 0 discriminator 1
 958 0010 0020     		mov	r0, #0
 959 0012 FFF7FEFF 		bl	CyHalt
 960              	.L68:
 727:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 728:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ADC_SAR_SEQ_countsPer10Volt[chan] = adcGain;
 961              		.loc 1 728 0 is_stmt 1
 962 0016 044B     		ldr	r3, .L69
 963 0018 7A68     		ldr	r2, [r7, #4]
 964 001a 9200     		lsl	r2, r2, #2
 965 001c 3968     		ldr	r1, [r7]
 966 001e D150     		str	r1, [r2, r3]
 729:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** }
 967              		.loc 1 729 0
 968 0020 BD46     		mov	sp, r7
 969 0022 02B0     		add	sp, sp, #8
 970              		@ sp needed
 971 0024 80BD     		pop	{r7, pc}
 972              	.L70:
 973 0026 C046     		.align	2
 974              	.L69:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 31


 975 0028 00000000 		.word	ADC_SAR_SEQ_countsPer10Volt
 976              		.cfi_endproc
 977              	.LFE15:
 978              		.size	ADC_SAR_SEQ_SetGain, .-ADC_SAR_SEQ_SetGain
 979              		.global	__aeabi_idiv
 980              		.section	.text.ADC_SAR_SEQ_CountsTo_mVolts,"ax",%progbits
 981              		.align	2
 982              		.global	ADC_SAR_SEQ_CountsTo_mVolts
 983              		.code	16
 984              		.thumb_func
 985              		.type	ADC_SAR_SEQ_CountsTo_mVolts, %function
 986              	ADC_SAR_SEQ_CountsTo_mVolts:
 987              	.LFB16:
 730:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 731:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 732:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** #if(ADC_SAR_SEQ_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_SEQ__RIGHT)
 733:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 734:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 735:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Function Name: ADC_SAR_SEQ_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 739:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 743:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 747:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Return:
 748:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 750:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  ADC_SAR_SEQ_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  ADC_SAR_SEQ_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 755:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     int16 ADC_SAR_SEQ_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 988              		.loc 1 757 0
 989              		.cfi_startproc
 990 0000 80B5     		push	{r7, lr}
 991              		.cfi_def_cfa_offset 8
 992              		.cfi_offset 7, -8
 993              		.cfi_offset 14, -4
 994 0002 84B0     		sub	sp, sp, #16
 995              		.cfi_def_cfa_offset 24
 996 0004 00AF     		add	r7, sp, #0
 997              		.cfi_def_cfa_register 7
 998 0006 7860     		str	r0, [r7, #4]
 999 0008 0A1C     		mov	r2, r1
 1000 000a BB1C     		add	r3, r7, #2
 1001 000c 1A80     		strh	r2, [r3]
 758:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 32


 760:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         CYASSERT(chan < ADC_SAR_SEQ_TOTAL_CHANNELS_NUM);
 1002              		.loc 1 761 0
 1003 000e 7B68     		ldr	r3, [r7, #4]
 1004 0010 032B     		cmp	r3, #3
 1005 0012 02D9     		bls	.L72
 1006              		.loc 1 761 0 is_stmt 0 discriminator 1
 1007 0014 0020     		mov	r0, #0
 1008 0016 FFF7FEFF 		bl	CyHalt
 1009              	.L72:
 762:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 763:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_DEFAULT_AVG_MODE == ADC_SAR_SEQ__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             if((ADC_SAR_SEQ_channelsConfig[chan] & ADC_SAR_SEQ_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 767:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 adcCounts /= ADC_SAR_SEQ_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }
 769:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ADC_SAR_SEQ_DEFAULT_AVG_MODE == ADC_SAR_SEQ__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 771:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         adcCounts -= ADC_SAR_SEQ_offset[chan];
 1010              		.loc 1 772 0 is_stmt 1
 1011 001a 1F4B     		ldr	r3, .L78
 1012 001c 7A68     		ldr	r2, [r7, #4]
 1013 001e 5200     		lsl	r2, r2, #1
 1014 0020 D35A     		ldrh	r3, [r2, r3]
 1015 0022 99B2     		uxth	r1, r3
 1016 0024 BB1C     		add	r3, r7, #2
 1017 0026 1A88     		ldrh	r2, [r3]
 1018 0028 8BB2     		uxth	r3, r1
 1019 002a D31A     		sub	r3, r2, r3
 1020 002c 9AB2     		uxth	r2, r3
 1021 002e BB1C     		add	r3, r7, #2
 1022 0030 1A80     		strh	r2, [r3]
 773:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 774:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_SEQ_10MV_COUNTS) + ( (adcCounts > 0) ?
 1023              		.loc 1 774 0
 1024 0032 BB1C     		add	r3, r7, #2
 1025 0034 0022     		mov	r2, #0
 1026 0036 9B5E     		ldrsh	r3, [r3, r2]
 1027 0038 184A     		ldr	r2, .L78+4
 1028 003a 5A43     		mul	r2, r3
 775:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (ADC_SAR_SEQ_countsPer10Volt[chan] / 2) : (-(ADC_SAR_SEQ_countsPer10Volt[chan] / 2
 1029              		.loc 1 775 0
 1030 003c BB1C     		add	r3, r7, #2
 1031 003e 0021     		mov	r1, #0
 1032 0040 5B5E     		ldrsh	r3, [r3, r1]
 1033 0042 002B     		cmp	r3, #0
 1034 0044 08DD     		ble	.L73
 1035              		.loc 1 775 0 is_stmt 0 discriminator 1
 1036 0046 164B     		ldr	r3, .L78+8
 1037 0048 7968     		ldr	r1, [r7, #4]
 1038 004a 8900     		lsl	r1, r1, #2
 1039 004c CB58     		ldr	r3, [r1, r3]
 1040 004e 002B     		cmp	r3, #0
 1041 0050 00DA     		bge	.L74
 1042 0052 0133     		add	r3, r3, #1
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 33


 1043              	.L74:
 1044 0054 5B10     		asr	r3, r3, #1
 1045 0056 08E0     		b	.L75
 1046              	.L73:
 1047              		.loc 1 775 0 discriminator 2
 1048 0058 114B     		ldr	r3, .L78+8
 1049 005a 7968     		ldr	r1, [r7, #4]
 1050 005c 8900     		lsl	r1, r1, #2
 1051 005e CB58     		ldr	r3, [r1, r3]
 1052 0060 002B     		cmp	r3, #0
 1053 0062 00DA     		bge	.L76
 1054 0064 0133     		add	r3, r3, #1
 1055              	.L76:
 1056 0066 5B10     		asr	r3, r3, #1
 1057 0068 5B42     		neg	r3, r3
 1058              	.L75:
 774:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (ADC_SAR_SEQ_countsPer10Volt[chan] / 2) : (-(ADC_SAR_SEQ_countsPer10Volt[chan] / 2
 1059              		.loc 1 774 0 is_stmt 1
 1060 006a D118     		add	r1, r2, r3
 776:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  / ADC_SAR_SEQ_countsPer10Volt[chan]);
 1061              		.loc 1 776 0
 1062 006c 0C4B     		ldr	r3, .L78+8
 1063 006e 7A68     		ldr	r2, [r7, #4]
 1064 0070 9200     		lsl	r2, r2, #2
 1065 0072 D358     		ldr	r3, [r2, r3]
 1066 0074 081C     		mov	r0, r1
 1067 0076 191C     		mov	r1, r3
 1068 0078 FFF7FEFF 		bl	__aeabi_idiv
 1069 007c 031C     		mov	r3, r0
 1070 007e 1A1C     		mov	r2, r3
 774:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                  (ADC_SAR_SEQ_countsPer10Volt[chan] / 2) : (-(ADC_SAR_SEQ_countsPer10Volt[chan] / 2
 1071              		.loc 1 774 0
 1072 0080 0E23     		mov	r3, #14
 1073 0082 FB18     		add	r3, r7, r3
 1074 0084 1A80     		strh	r2, [r3]
 777:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 778:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         return( mVolts );
 1075              		.loc 1 778 0
 1076 0086 0E23     		mov	r3, #14
 1077 0088 FB18     		add	r3, r7, r3
 1078 008a 1B88     		ldrh	r3, [r3]
 1079 008c 1BB2     		sxth	r3, r3
 779:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 1080              		.loc 1 779 0
 1081 008e 181C     		mov	r0, r3
 1082 0090 BD46     		mov	sp, r7
 1083 0092 04B0     		add	sp, sp, #16
 1084              		@ sp needed
 1085 0094 80BD     		pop	{r7, pc}
 1086              	.L79:
 1087 0096 C046     		.align	2
 1088              	.L78:
 1089 0098 00000000 		.word	ADC_SAR_SEQ_offset
 1090 009c 10270000 		.word	10000
 1091 00a0 00000000 		.word	ADC_SAR_SEQ_countsPer10Volt
 1092              		.cfi_endproc
 1093              	.LFE16:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 34


 1094              		.size	ADC_SAR_SEQ_CountsTo_mVolts, .-ADC_SAR_SEQ_CountsTo_mVolts
 1095              		.global	__aeabi_lmul
 1096              		.global	__aeabi_ldivmod
 1097              		.section	.text.ADC_SAR_SEQ_CountsTo_uVolts,"ax",%progbits
 1098              		.align	2
 1099              		.global	ADC_SAR_SEQ_CountsTo_uVolts
 1100              		.code	16
 1101              		.thumb_func
 1102              		.type	ADC_SAR_SEQ_CountsTo_uVolts, %function
 1103              	ADC_SAR_SEQ_CountsTo_uVolts:
 1104              	.LFB17:
 780:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 781:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 782:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Function Name: ADC_SAR_SEQ_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 786:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 790:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 794:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Return:
 795:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 797:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  ADC_SAR_SEQ_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  ADC_SAR_SEQ_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 802:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 809:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     int32 ADC_SAR_SEQ_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 1105              		.loc 1 811 0
 1106              		.cfi_startproc
 1107 0000 B0B5     		push	{r4, r5, r7, lr}
 1108              		.cfi_def_cfa_offset 16
 1109              		.cfi_offset 4, -16
 1110              		.cfi_offset 5, -12
 1111              		.cfi_offset 7, -8
 1112              		.cfi_offset 14, -4
 1113 0002 86B0     		sub	sp, sp, #24
 1114              		.cfi_def_cfa_offset 40
 1115 0004 00AF     		add	r7, sp, #0
 1116              		.cfi_def_cfa_register 7
 1117 0006 F860     		str	r0, [r7, #12]
 1118 0008 0A1C     		mov	r2, r1
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 35


 1119 000a 0A23     		mov	r3, #10
 1120 000c FB18     		add	r3, r7, r3
 1121 000e 1A80     		strh	r2, [r3]
 812:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 814:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         CYASSERT(chan < ADC_SAR_SEQ_TOTAL_CHANNELS_NUM);
 1122              		.loc 1 815 0
 1123 0010 FB68     		ldr	r3, [r7, #12]
 1124 0012 032B     		cmp	r3, #3
 1125 0014 02D9     		bls	.L81
 1126              		.loc 1 815 0 is_stmt 0 discriminator 1
 1127 0016 0020     		mov	r0, #0
 1128 0018 FFF7FEFF 		bl	CyHalt
 1129              	.L81:
 816:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 817:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_DEFAULT_AVG_MODE == ADC_SAR_SEQ__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             if((ADC_SAR_SEQ_channelsConfig[chan] & ADC_SAR_SEQ_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 821:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 adcCounts /= ADC_SAR_SEQ_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }
 823:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ADC_SAR_SEQ_DEFAULT_AVG_MODE == ADC_SAR_SEQ__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 825:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         adcCounts -= ADC_SAR_SEQ_offset[chan];
 1130              		.loc 1 826 0 is_stmt 1
 1131 001c 194B     		ldr	r3, .L83
 1132 001e FA68     		ldr	r2, [r7, #12]
 1133 0020 5200     		lsl	r2, r2, #1
 1134 0022 D35A     		ldrh	r3, [r2, r3]
 1135 0024 99B2     		uxth	r1, r3
 1136 0026 0A23     		mov	r3, #10
 1137 0028 FB18     		add	r3, r7, r3
 1138 002a 1A88     		ldrh	r2, [r3]
 1139 002c 8BB2     		uxth	r3, r1
 1140 002e D31A     		sub	r3, r2, r3
 1141 0030 9AB2     		uxth	r2, r3
 1142 0032 0A23     		mov	r3, #10
 1143 0034 FB18     		add	r3, r7, r3
 1144 0036 1A80     		strh	r2, [r3]
 827:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 828:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         uVolts = ((int64)adcCounts * ADC_SAR_SEQ_10UV_COUNTS) / ADC_SAR_SEQ_countsPer10Volt[chan];
 1145              		.loc 1 828 0
 1146 0038 0A23     		mov	r3, #10
 1147 003a FB18     		add	r3, r7, r3
 1148 003c 1B88     		ldrh	r3, [r3]
 1149 003e 1BB2     		sxth	r3, r3
 1150 0040 3B60     		str	r3, [r7]
 1151 0042 DB17     		asr	r3, r3, #31
 1152 0044 7B60     		str	r3, [r7, #4]
 1153 0046 3868     		ldr	r0, [r7]
 1154 0048 7968     		ldr	r1, [r7, #4]
 1155 004a 0F4A     		ldr	r2, .L83+4
 1156 004c 0023     		mov	r3, #0
 1157 004e FFF7FEFF 		bl	__aeabi_lmul
 1158 0052 021C     		mov	r2, r0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 36


 1159 0054 0B1C     		mov	r3, r1
 1160 0056 101C     		mov	r0, r2
 1161 0058 191C     		mov	r1, r3
 1162 005a 0C4B     		ldr	r3, .L83+8
 1163 005c FA68     		ldr	r2, [r7, #12]
 1164 005e 9200     		lsl	r2, r2, #2
 1165 0060 D358     		ldr	r3, [r2, r3]
 1166 0062 1C1C     		mov	r4, r3
 1167 0064 DB17     		asr	r3, r3, #31
 1168 0066 1D1C     		mov	r5, r3
 1169 0068 221C     		mov	r2, r4
 1170 006a 2B1C     		mov	r3, r5
 1171 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1172 0070 031C     		mov	r3, r0
 1173 0072 0C1C     		mov	r4, r1
 1174 0074 3B61     		str	r3, [r7, #16]
 1175 0076 7C61     		str	r4, [r7, #20]
 829:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 830:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         return( (int32)uVolts );
 1176              		.loc 1 830 0
 1177 0078 3B69     		ldr	r3, [r7, #16]
 831:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 1178              		.loc 1 831 0
 1179 007a 181C     		mov	r0, r3
 1180 007c BD46     		mov	sp, r7
 1181 007e 06B0     		add	sp, sp, #24
 1182              		@ sp needed
 1183 0080 B0BD     		pop	{r4, r5, r7, pc}
 1184              	.L84:
 1185 0082 C046     		.align	2
 1186              	.L83:
 1187 0084 00000000 		.word	ADC_SAR_SEQ_offset
 1188 0088 80969800 		.word	10000000
 1189 008c 00000000 		.word	ADC_SAR_SEQ_countsPer10Volt
 1190              		.cfi_endproc
 1191              	.LFE17:
 1192              		.size	ADC_SAR_SEQ_CountsTo_uVolts, .-ADC_SAR_SEQ_CountsTo_uVolts
 1193              		.global	__aeabi_i2f
 1194              		.global	__aeabi_fmul
 1195              		.global	__aeabi_fdiv
 1196              		.section	.text.ADC_SAR_SEQ_CountsTo_Volts,"ax",%progbits
 1197              		.align	2
 1198              		.global	ADC_SAR_SEQ_CountsTo_Volts
 1199              		.code	16
 1200              		.thumb_func
 1201              		.type	ADC_SAR_SEQ_CountsTo_Volts, %function
 1202              	ADC_SAR_SEQ_CountsTo_Volts:
 1203              	.LFB18:
 832:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 833:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 834:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Function Name: ADC_SAR_SEQ_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 838:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  This function is not available when left data format justification selected.
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 37


 841:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 842:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 846:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Return:
 847:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 849:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  ADC_SAR_SEQ_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *  ADC_SAR_SEQ_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *
 854:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     float32 ADC_SAR_SEQ_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     {
 1204              		.loc 1 856 0
 1205              		.cfi_startproc
 1206 0000 90B5     		push	{r4, r7, lr}
 1207              		.cfi_def_cfa_offset 12
 1208              		.cfi_offset 4, -12
 1209              		.cfi_offset 7, -8
 1210              		.cfi_offset 14, -4
 1211 0002 85B0     		sub	sp, sp, #20
 1212              		.cfi_def_cfa_offset 32
 1213 0004 00AF     		add	r7, sp, #0
 1214              		.cfi_def_cfa_register 7
 1215 0006 7860     		str	r0, [r7, #4]
 1216 0008 0A1C     		mov	r2, r1
 1217 000a BB1C     		add	r3, r7, #2
 1218 000c 1A80     		strh	r2, [r3]
 857:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 859:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         CYASSERT(chan < ADC_SAR_SEQ_TOTAL_CHANNELS_NUM);
 1219              		.loc 1 860 0
 1220 000e 7B68     		ldr	r3, [r7, #4]
 1221 0010 032B     		cmp	r3, #3
 1222 0012 02D9     		bls	.L86
 1223              		.loc 1 860 0 is_stmt 0 discriminator 1
 1224 0014 0020     		mov	r0, #0
 1225 0016 FFF7FEFF 		bl	CyHalt
 1226              	.L86:
 861:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 862:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #if(ADC_SAR_SEQ_DEFAULT_AVG_MODE == ADC_SAR_SEQ__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             if((ADC_SAR_SEQ_channelsConfig[chan] & ADC_SAR_SEQ_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             {
 866:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****                 adcCounts /= ADC_SAR_SEQ_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****             }
 868:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         #endif /* ADC_SAR_SEQ_DEFAULT_AVG_MODE == ADC_SAR_SEQ__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 870:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         adcCounts -= ADC_SAR_SEQ_offset[chan];
 1227              		.loc 1 871 0 is_stmt 1
 1228 001a 164B     		ldr	r3, .L88
 1229 001c 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 38


 1230 001e 5200     		lsl	r2, r2, #1
 1231 0020 D35A     		ldrh	r3, [r2, r3]
 1232 0022 99B2     		uxth	r1, r3
 1233 0024 BB1C     		add	r3, r7, #2
 1234 0026 1A88     		ldrh	r2, [r3]
 1235 0028 8BB2     		uxth	r3, r1
 1236 002a D31A     		sub	r3, r2, r3
 1237 002c 9AB2     		uxth	r2, r3
 1238 002e BB1C     		add	r3, r7, #2
 1239 0030 1A80     		strh	r2, [r3]
 872:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 873:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         volts = ((float32)adcCounts * ADC_SAR_SEQ_10V_COUNTS) / (float32)ADC_SAR_SEQ_countsPer10Vol
 1240              		.loc 1 873 0
 1241 0032 BB1C     		add	r3, r7, #2
 1242 0034 0022     		mov	r2, #0
 1243 0036 9B5E     		ldrsh	r3, [r3, r2]
 1244 0038 181C     		mov	r0, r3
 1245 003a FFF7FEFF 		bl	__aeabi_i2f
 1246 003e 031C     		add	r3, r0, #0
 1247 0040 181C     		add	r0, r3, #0
 1248 0042 0D49     		ldr	r1, .L88+4
 1249 0044 FFF7FEFF 		bl	__aeabi_fmul
 1250 0048 031C     		add	r3, r0, #0
 1251 004a 1C1C     		add	r4, r3, #0
 1252 004c 0B4B     		ldr	r3, .L88+8
 1253 004e 7A68     		ldr	r2, [r7, #4]
 1254 0050 9200     		lsl	r2, r2, #2
 1255 0052 D358     		ldr	r3, [r2, r3]
 1256 0054 181C     		mov	r0, r3
 1257 0056 FFF7FEFF 		bl	__aeabi_i2f
 1258 005a 031C     		add	r3, r0, #0
 1259 005c 201C     		add	r0, r4, #0
 1260 005e 191C     		add	r1, r3, #0
 1261 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1262 0064 031C     		add	r3, r0, #0
 1263 0066 FB60     		str	r3, [r7, #12]
 874:Generated_Source\PSoC4/ADC_SAR_SEQ.c **** 
 875:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****         return( volts );
 1264              		.loc 1 875 0
 1265 0068 FB68     		ldr	r3, [r7, #12]
 876:Generated_Source\PSoC4/ADC_SAR_SEQ.c ****     }
 1266              		.loc 1 876 0
 1267 006a 181C     		add	r0, r3, #0
 1268 006c BD46     		mov	sp, r7
 1269 006e 05B0     		add	sp, sp, #20
 1270              		@ sp needed
 1271 0070 90BD     		pop	{r4, r7, pc}
 1272              	.L89:
 1273 0072 C046     		.align	2
 1274              	.L88:
 1275 0074 00000000 		.word	ADC_SAR_SEQ_offset
 1276 0078 00002041 		.word	1092616192
 1277 007c 00000000 		.word	ADC_SAR_SEQ_countsPer10Volt
 1278              		.cfi_endproc
 1279              	.LFE18:
 1280              		.size	ADC_SAR_SEQ_CountsTo_Volts, .-ADC_SAR_SEQ_CountsTo_Volts
 1281              		.section	.rodata
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 39


 1282              		.align	2
 1283              		.type	ADC_SAR_SEQ_InputsPlacement.4852, %object
 1284              		.size	ADC_SAR_SEQ_InputsPlacement.4852, 4
 1285              	ADC_SAR_SEQ_InputsPlacement.4852:
 1286 0010 06       		.byte	6
 1287 0011 04       		.byte	4
 1288 0012 02       		.byte	2
 1289 0013 00       		.byte	0
 1290              		.text
 1291              	.Letext0:
 1292              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1293              		.section	.debug_info,"",%progbits
 1294              	.Ldebug_info0:
 1295 0000 9D040000 		.4byte	0x49d
 1296 0004 0400     		.2byte	0x4
 1297 0006 00000000 		.4byte	.Ldebug_abbrev0
 1298 000a 04       		.byte	0x4
 1299 000b 01       		.uleb128 0x1
 1300 000c 9D030000 		.4byte	.LASF60
 1301 0010 01       		.byte	0x1
 1302 0011 12010000 		.4byte	.LASF61
 1303 0015 09030000 		.4byte	.LASF62
 1304 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1305 001d 00000000 		.4byte	0
 1306 0021 00000000 		.4byte	.Ldebug_line0
 1307 0025 02       		.uleb128 0x2
 1308 0026 01       		.byte	0x1
 1309 0027 06       		.byte	0x6
 1310 0028 A2000000 		.4byte	.LASF0
 1311 002c 02       		.uleb128 0x2
 1312 002d 01       		.byte	0x1
 1313 002e 08       		.byte	0x8
 1314 002f 5A020000 		.4byte	.LASF1
 1315 0033 02       		.uleb128 0x2
 1316 0034 02       		.byte	0x2
 1317 0035 05       		.byte	0x5
 1318 0036 68020000 		.4byte	.LASF2
 1319 003a 02       		.uleb128 0x2
 1320 003b 02       		.byte	0x2
 1321 003c 07       		.byte	0x7
 1322 003d 89010000 		.4byte	.LASF3
 1323 0041 02       		.uleb128 0x2
 1324 0042 04       		.byte	0x4
 1325 0043 05       		.byte	0x5
 1326 0044 B4000000 		.4byte	.LASF4
 1327 0048 02       		.uleb128 0x2
 1328 0049 04       		.byte	0x4
 1329 004a 07       		.byte	0x7
 1330 004b 67010000 		.4byte	.LASF5
 1331 004f 02       		.uleb128 0x2
 1332 0050 08       		.byte	0x8
 1333 0051 05       		.byte	0x5
 1334 0052 94000000 		.4byte	.LASF6
 1335 0056 02       		.uleb128 0x2
 1336 0057 08       		.byte	0x8
 1337 0058 07       		.byte	0x7
 1338 0059 52000000 		.4byte	.LASF7
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 40


 1339 005d 03       		.uleb128 0x3
 1340 005e 04       		.byte	0x4
 1341 005f 05       		.byte	0x5
 1342 0060 696E7400 		.ascii	"int\000"
 1343 0064 02       		.uleb128 0x2
 1344 0065 04       		.byte	0x4
 1345 0066 07       		.byte	0x7
 1346 0067 37010000 		.4byte	.LASF8
 1347 006b 04       		.uleb128 0x4
 1348 006c BD000000 		.4byte	.LASF9
 1349 0070 02       		.byte	0x2
 1350 0071 B901     		.2byte	0x1b9
 1351 0073 2C000000 		.4byte	0x2c
 1352 0077 04       		.uleb128 0x4
 1353 0078 00000000 		.4byte	.LASF10
 1354 007c 02       		.byte	0x2
 1355 007d BA01     		.2byte	0x1ba
 1356 007f 3A000000 		.4byte	0x3a
 1357 0083 04       		.uleb128 0x4
 1358 0084 FE000000 		.4byte	.LASF11
 1359 0088 02       		.byte	0x2
 1360 0089 BB01     		.2byte	0x1bb
 1361 008b 48000000 		.4byte	0x48
 1362 008f 04       		.uleb128 0x4
 1363 0090 97030000 		.4byte	.LASF12
 1364 0094 02       		.byte	0x2
 1365 0095 BD01     		.2byte	0x1bd
 1366 0097 33000000 		.4byte	0x33
 1367 009b 04       		.uleb128 0x4
 1368 009c AE000000 		.4byte	.LASF13
 1369 00a0 02       		.byte	0x2
 1370 00a1 BE01     		.2byte	0x1be
 1371 00a3 41000000 		.4byte	0x41
 1372 00a7 04       		.uleb128 0x4
 1373 00a8 D6010000 		.4byte	.LASF14
 1374 00ac 02       		.byte	0x2
 1375 00ad BF01     		.2byte	0x1bf
 1376 00af B3000000 		.4byte	0xb3
 1377 00b3 02       		.uleb128 0x2
 1378 00b4 04       		.byte	0x4
 1379 00b5 04       		.byte	0x4
 1380 00b6 31020000 		.4byte	.LASF15
 1381 00ba 02       		.uleb128 0x2
 1382 00bb 08       		.byte	0x8
 1383 00bc 04       		.byte	0x4
 1384 00bd DB000000 		.4byte	.LASF16
 1385 00c1 04       		.uleb128 0x4
 1386 00c2 07020000 		.4byte	.LASF17
 1387 00c6 02       		.byte	0x2
 1388 00c7 C401     		.2byte	0x1c4
 1389 00c9 4F000000 		.4byte	0x4f
 1390 00cd 02       		.uleb128 0x2
 1391 00ce 01       		.byte	0x1
 1392 00cf 08       		.byte	0x8
 1393 00d0 04030000 		.4byte	.LASF18
 1394 00d4 04       		.uleb128 0x4
 1395 00d5 D0010000 		.4byte	.LASF19
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 41


 1396 00d9 02       		.byte	0x2
 1397 00da 6502     		.2byte	0x265
 1398 00dc E0000000 		.4byte	0xe0
 1399 00e0 05       		.uleb128 0x5
 1400 00e1 83000000 		.4byte	0x83
 1401 00e5 02       		.uleb128 0x2
 1402 00e6 04       		.byte	0x4
 1403 00e7 07       		.byte	0x7
 1404 00e8 DE010000 		.4byte	.LASF20
 1405 00ec 06       		.uleb128 0x6
 1406 00ed 40000000 		.4byte	.LASF25
 1407 00f1 01       		.byte	0x1
 1408 00f2 3F       		.byte	0x3f
 1409 00f3 00000000 		.4byte	.LFB1
 1410 00f7 24000000 		.4byte	.LFE1-.LFB1
 1411 00fb 01       		.uleb128 0x1
 1412 00fc 9C       		.byte	0x9c
 1413 00fd 07       		.uleb128 0x7
 1414 00fe 2B040000 		.4byte	.LASF36
 1415 0102 01       		.byte	0x1
 1416 0103 5E       		.byte	0x5e
 1417 0104 00000000 		.4byte	.LFB2
 1418 0108 18020000 		.4byte	.LFE2-.LFB2
 1419 010c 01       		.uleb128 0x1
 1420 010d 9C       		.byte	0x9c
 1421 010e 4E010000 		.4byte	0x14e
 1422 0112 08       		.uleb128 0x8
 1423 0113 CA020000 		.4byte	.LASF21
 1424 0117 01       		.byte	0x1
 1425 0118 60       		.byte	0x60
 1426 0119 83000000 		.4byte	0x83
 1427 011d 02       		.uleb128 0x2
 1428 011e 91       		.byte	0x91
 1429 011f 74       		.sleb128 -12
 1430 0120 08       		.uleb128 0x8
 1431 0121 7F010000 		.4byte	.LASF22
 1432 0125 01       		.byte	0x1
 1433 0126 61       		.byte	0x61
 1434 0127 83000000 		.4byte	0x83
 1435 012b 02       		.uleb128 0x2
 1436 012c 91       		.byte	0x91
 1437 012d 6C       		.sleb128 -20
 1438 012e 08       		.uleb128 0x8
 1439 012f 0F000000 		.4byte	.LASF23
 1440 0133 01       		.byte	0x1
 1441 0134 62       		.byte	0x62
 1442 0135 9B000000 		.4byte	0x9b
 1443 0139 02       		.uleb128 0x2
 1444 013a 91       		.byte	0x91
 1445 013b 70       		.sleb128 -16
 1446 013c 08       		.uleb128 0x8
 1447 013d E2000000 		.4byte	.LASF24
 1448 0141 01       		.byte	0x1
 1449 0142 65       		.byte	0x65
 1450 0143 5E010000 		.4byte	0x15e
 1451 0147 05       		.uleb128 0x5
 1452 0148 03       		.byte	0x3
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 42


 1453 0149 10000000 		.4byte	ADC_SAR_SEQ_InputsPlacement.4852
 1454 014d 00       		.byte	0
 1455 014e 09       		.uleb128 0x9
 1456 014f 6B000000 		.4byte	0x6b
 1457 0153 5E010000 		.4byte	0x15e
 1458 0157 0A       		.uleb128 0xa
 1459 0158 E5000000 		.4byte	0xe5
 1460 015c 03       		.byte	0x3
 1461 015d 00       		.byte	0
 1462 015e 0B       		.uleb128 0xb
 1463 015f 4E010000 		.4byte	0x14e
 1464 0163 0C       		.uleb128 0xc
 1465 0164 1E020000 		.4byte	.LASF26
 1466 0168 01       		.byte	0x1
 1467 0169 4A01     		.2byte	0x14a
 1468 016b 00000000 		.4byte	.LFB3
 1469 016f 38000000 		.4byte	.LFE3-.LFB3
 1470 0173 01       		.uleb128 0x1
 1471 0174 9C       		.byte	0x9c
 1472 0175 0D       		.uleb128 0xd
 1473 0176 0D020000 		.4byte	.LASF27
 1474 017a 01       		.byte	0x1
 1475 017b 6D01     		.2byte	0x16d
 1476 017d 00000000 		.4byte	.LFB4
 1477 0181 18000000 		.4byte	.LFE4-.LFB4
 1478 0185 01       		.uleb128 0x1
 1479 0186 9C       		.byte	0x9c
 1480 0187 0D       		.uleb128 0xd
 1481 0188 B1020000 		.4byte	.LASF28
 1482 018c 01       		.byte	0x1
 1483 018d 8701     		.2byte	0x187
 1484 018f 00000000 		.4byte	.LFB5
 1485 0193 1C000000 		.4byte	.LFE5-.LFB5
 1486 0197 01       		.uleb128 0x1
 1487 0198 9C       		.byte	0x9c
 1488 0199 0D       		.uleb128 0xd
 1489 019a C3000000 		.4byte	.LASF29
 1490 019e 01       		.byte	0x1
 1491 019f A001     		.2byte	0x1a0
 1492 01a1 00000000 		.4byte	.LFB6
 1493 01a5 1C000000 		.4byte	.LFE6-.LFB6
 1494 01a9 01       		.uleb128 0x1
 1495 01aa 9C       		.byte	0x9c
 1496 01ab 0E       		.uleb128 0xe
 1497 01ac 72020000 		.4byte	.LASF31
 1498 01b0 01       		.byte	0x1
 1499 01b1 C201     		.2byte	0x1c2
 1500 01b3 83000000 		.4byte	0x83
 1501 01b7 00000000 		.4byte	.LFB7
 1502 01bb 48000000 		.4byte	.LFE7-.LFB7
 1503 01bf 01       		.uleb128 0x1
 1504 01c0 9C       		.byte	0x9c
 1505 01c1 E4010000 		.4byte	0x1e4
 1506 01c5 0F       		.uleb128 0xf
 1507 01c6 0A010000 		.4byte	.LASF33
 1508 01ca 01       		.byte	0x1
 1509 01cb C201     		.2byte	0x1c2
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 43


 1510 01cd 83000000 		.4byte	0x83
 1511 01d1 02       		.uleb128 0x2
 1512 01d2 91       		.byte	0x91
 1513 01d3 6C       		.sleb128 -20
 1514 01d4 10       		.uleb128 0x10
 1515 01d5 90030000 		.4byte	.LASF30
 1516 01d9 01       		.byte	0x1
 1517 01da C401     		.2byte	0x1c4
 1518 01dc 83000000 		.4byte	0x83
 1519 01e0 02       		.uleb128 0x2
 1520 01e1 91       		.byte	0x91
 1521 01e2 74       		.sleb128 -12
 1522 01e3 00       		.byte	0
 1523 01e4 11       		.uleb128 0x11
 1524 01e5 4E030000 		.4byte	.LASF32
 1525 01e9 01       		.byte	0x1
 1526 01ea F801     		.2byte	0x1f8
 1527 01ec 8F000000 		.4byte	0x8f
 1528 01f0 00000000 		.4byte	.LFB8
 1529 01f4 44000000 		.4byte	.LFE8-.LFB8
 1530 01f8 01       		.uleb128 0x1
 1531 01f9 9C       		.byte	0x9c
 1532 01fa 1D020000 		.4byte	0x21d
 1533 01fe 0F       		.uleb128 0xf
 1534 01ff FF020000 		.4byte	.LASF34
 1535 0203 01       		.byte	0x1
 1536 0204 F801     		.2byte	0x1f8
 1537 0206 83000000 		.4byte	0x83
 1538 020a 02       		.uleb128 0x2
 1539 020b 91       		.byte	0x91
 1540 020c 6C       		.sleb128 -20
 1541 020d 10       		.uleb128 0x10
 1542 020e 3C040000 		.4byte	.LASF35
 1543 0212 01       		.byte	0x1
 1544 0213 FA01     		.2byte	0x1fa
 1545 0215 83000000 		.4byte	0x83
 1546 0219 02       		.uleb128 0x2
 1547 021a 91       		.byte	0x91
 1548 021b 74       		.sleb128 -12
 1549 021c 00       		.byte	0
 1550 021d 12       		.uleb128 0x12
 1551 021e 7C000000 		.4byte	.LASF37
 1552 0222 01       		.byte	0x1
 1553 0223 2502     		.2byte	0x225
 1554 0225 00000000 		.4byte	.LFB9
 1555 0229 1C000000 		.4byte	.LFE9-.LFB9
 1556 022d 01       		.uleb128 0x1
 1557 022e 9C       		.byte	0x9c
 1558 022f 43020000 		.4byte	0x243
 1559 0233 0F       		.uleb128 0xf
 1560 0234 05010000 		.4byte	.LASF38
 1561 0238 01       		.byte	0x1
 1562 0239 2502     		.2byte	0x225
 1563 023b 83000000 		.4byte	0x83
 1564 023f 02       		.uleb128 0x2
 1565 0240 91       		.byte	0x91
 1566 0241 74       		.sleb128 -12
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 44


 1567 0242 00       		.byte	0
 1568 0243 12       		.uleb128 0x12
 1569 0244 B8010000 		.4byte	.LASF39
 1570 0248 01       		.byte	0x1
 1571 0249 5102     		.2byte	0x251
 1572 024b 00000000 		.4byte	.LFB10
 1573 024f 30000000 		.4byte	.LFE10-.LFB10
 1574 0253 01       		.uleb128 0x1
 1575 0254 9C       		.byte	0x9c
 1576 0255 69020000 		.4byte	0x269
 1577 0259 0F       		.uleb128 0xf
 1578 025a E7010000 		.4byte	.LASF40
 1579 025e 01       		.byte	0x1
 1580 025f 5102     		.2byte	0x251
 1581 0261 83000000 		.4byte	0x83
 1582 0265 02       		.uleb128 0x2
 1583 0266 91       		.byte	0x91
 1584 0267 74       		.sleb128 -12
 1585 0268 00       		.byte	0
 1586 0269 12       		.uleb128 0x12
 1587 026a 6D030000 		.4byte	.LASF41
 1588 026e 01       		.byte	0x1
 1589 026f 6602     		.2byte	0x266
 1590 0271 00000000 		.4byte	.LFB11
 1591 0275 2C000000 		.4byte	.LFE11-.LFB11
 1592 0279 01       		.uleb128 0x1
 1593 027a 9C       		.byte	0x9c
 1594 027b 8F020000 		.4byte	0x28f
 1595 027f 0F       		.uleb128 0xf
 1596 0280 37020000 		.4byte	.LASF42
 1597 0284 01       		.byte	0x1
 1598 0285 6602     		.2byte	0x266
 1599 0287 83000000 		.4byte	0x83
 1600 028b 02       		.uleb128 0x2
 1601 028c 91       		.byte	0x91
 1602 028d 74       		.sleb128 -12
 1603 028e 00       		.byte	0
 1604 028f 12       		.uleb128 0x12
 1605 0290 41020000 		.4byte	.LASF43
 1606 0294 01       		.byte	0x1
 1607 0295 7E02     		.2byte	0x27e
 1608 0297 00000000 		.4byte	.LFB12
 1609 029b 1C000000 		.4byte	.LFE12-.LFB12
 1610 029f 01       		.uleb128 0x1
 1611 02a0 9C       		.byte	0x9c
 1612 02a1 B5020000 		.4byte	0x2b5
 1613 02a5 0F       		.uleb128 0xf
 1614 02a6 05010000 		.4byte	.LASF38
 1615 02aa 01       		.byte	0x1
 1616 02ab 7E02     		.2byte	0x27e
 1617 02ad 83000000 		.4byte	0x83
 1618 02b1 02       		.uleb128 0x2
 1619 02b2 91       		.byte	0x91
 1620 02b3 74       		.sleb128 -12
 1621 02b4 00       		.byte	0
 1622 02b5 12       		.uleb128 0x12
 1623 02b6 F0010000 		.4byte	.LASF44
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 45


 1624 02ba 01       		.byte	0x1
 1625 02bb 9502     		.2byte	0x295
 1626 02bd 00000000 		.4byte	.LFB13
 1627 02c1 1C000000 		.4byte	.LFE13-.LFB13
 1628 02c5 01       		.uleb128 0x1
 1629 02c6 9C       		.byte	0x9c
 1630 02c7 DB020000 		.4byte	0x2db
 1631 02cb 0F       		.uleb128 0xf
 1632 02cc 05010000 		.4byte	.LASF38
 1633 02d0 01       		.byte	0x1
 1634 02d1 9502     		.2byte	0x295
 1635 02d3 83000000 		.4byte	0x83
 1636 02d7 02       		.uleb128 0x2
 1637 02d8 91       		.byte	0x91
 1638 02d9 74       		.sleb128 -12
 1639 02da 00       		.byte	0
 1640 02db 13       		.uleb128 0x13
 1641 02dc 2A000000 		.4byte	.LASF45
 1642 02e0 01       		.byte	0x1
 1643 02e1 B102     		.2byte	0x2b1
 1644 02e3 00000000 		.4byte	.LFB14
 1645 02e7 30000000 		.4byte	.LFE14-.LFB14
 1646 02eb 01       		.uleb128 0x1
 1647 02ec 9C       		.byte	0x9c
 1648 02ed 10030000 		.4byte	0x310
 1649 02f1 0F       		.uleb128 0xf
 1650 02f2 FF020000 		.4byte	.LASF34
 1651 02f6 01       		.byte	0x1
 1652 02f7 B102     		.2byte	0x2b1
 1653 02f9 83000000 		.4byte	0x83
 1654 02fd 02       		.uleb128 0x2
 1655 02fe 91       		.byte	0x91
 1656 02ff 74       		.sleb128 -12
 1657 0300 0F       		.uleb128 0xf
 1658 0301 66030000 		.4byte	.LASF46
 1659 0305 01       		.byte	0x1
 1660 0306 B102     		.2byte	0x2b1
 1661 0308 8F000000 		.4byte	0x8f
 1662 030c 02       		.uleb128 0x2
 1663 030d 91       		.byte	0x91
 1664 030e 72       		.sleb128 -14
 1665 030f 00       		.byte	0
 1666 0310 13       		.uleb128 0x13
 1667 0311 16000000 		.4byte	.LASF47
 1668 0315 01       		.byte	0x1
 1669 0316 D302     		.2byte	0x2d3
 1670 0318 00000000 		.4byte	.LFB15
 1671 031c 2C000000 		.4byte	.LFE15-.LFB15
 1672 0320 01       		.uleb128 0x1
 1673 0321 9C       		.byte	0x9c
 1674 0322 45030000 		.4byte	0x345
 1675 0326 0F       		.uleb128 0xf
 1676 0327 FF020000 		.4byte	.LASF34
 1677 032b 01       		.byte	0x1
 1678 032c D302     		.2byte	0x2d3
 1679 032e 83000000 		.4byte	0x83
 1680 0332 02       		.uleb128 0x2
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 46


 1681 0333 91       		.byte	0x91
 1682 0334 74       		.sleb128 -12
 1683 0335 0F       		.uleb128 0xf
 1684 0336 07000000 		.4byte	.LASF48
 1685 033a 01       		.byte	0x1
 1686 033b D302     		.2byte	0x2d3
 1687 033d 9B000000 		.4byte	0x9b
 1688 0341 02       		.uleb128 0x2
 1689 0342 91       		.byte	0x91
 1690 0343 70       		.sleb128 -16
 1691 0344 00       		.byte	0
 1692 0345 11       		.uleb128 0x11
 1693 0346 9C010000 		.4byte	.LASF49
 1694 034a 01       		.byte	0x1
 1695 034b F402     		.2byte	0x2f4
 1696 034d 8F000000 		.4byte	0x8f
 1697 0351 00000000 		.4byte	.LFB16
 1698 0355 A4000000 		.4byte	.LFE16-.LFB16
 1699 0359 01       		.uleb128 0x1
 1700 035a 9C       		.byte	0x9c
 1701 035b 8D030000 		.4byte	0x38d
 1702 035f 0F       		.uleb128 0xf
 1703 0360 FF020000 		.4byte	.LASF34
 1704 0364 01       		.byte	0x1
 1705 0365 F402     		.2byte	0x2f4
 1706 0367 83000000 		.4byte	0x83
 1707 036b 02       		.uleb128 0x2
 1708 036c 91       		.byte	0x91
 1709 036d 6C       		.sleb128 -20
 1710 036e 0F       		.uleb128 0xf
 1711 036f 86030000 		.4byte	.LASF50
 1712 0373 01       		.byte	0x1
 1713 0374 F402     		.2byte	0x2f4
 1714 0376 8F000000 		.4byte	0x8f
 1715 037a 02       		.uleb128 0x2
 1716 037b 91       		.byte	0x91
 1717 037c 6A       		.sleb128 -22
 1718 037d 10       		.uleb128 0x10
 1719 037e 8E020000 		.4byte	.LASF51
 1720 0382 01       		.byte	0x1
 1721 0383 F602     		.2byte	0x2f6
 1722 0385 8F000000 		.4byte	0x8f
 1723 0389 02       		.uleb128 0x2
 1724 038a 91       		.byte	0x91
 1725 038b 76       		.sleb128 -10
 1726 038c 00       		.byte	0
 1727 038d 11       		.uleb128 0x11
 1728 038e 44010000 		.4byte	.LASF52
 1729 0392 01       		.byte	0x1
 1730 0393 2A03     		.2byte	0x32a
 1731 0395 9B000000 		.4byte	0x9b
 1732 0399 00000000 		.4byte	.LFB17
 1733 039d 90000000 		.4byte	.LFE17-.LFB17
 1734 03a1 01       		.uleb128 0x1
 1735 03a2 9C       		.byte	0x9c
 1736 03a3 D5030000 		.4byte	0x3d5
 1737 03a7 0F       		.uleb128 0xf
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 47


 1738 03a8 FF020000 		.4byte	.LASF34
 1739 03ac 01       		.byte	0x1
 1740 03ad 2A03     		.2byte	0x32a
 1741 03af 83000000 		.4byte	0x83
 1742 03b3 02       		.uleb128 0x2
 1743 03b4 91       		.byte	0x91
 1744 03b5 64       		.sleb128 -28
 1745 03b6 0F       		.uleb128 0xf
 1746 03b7 86030000 		.4byte	.LASF50
 1747 03bb 01       		.byte	0x1
 1748 03bc 2A03     		.2byte	0x32a
 1749 03be 8F000000 		.4byte	0x8f
 1750 03c2 02       		.uleb128 0x2
 1751 03c3 91       		.byte	0x91
 1752 03c4 62       		.sleb128 -30
 1753 03c5 10       		.uleb128 0x10
 1754 03c6 60010000 		.4byte	.LASF53
 1755 03ca 01       		.byte	0x1
 1756 03cb 2C03     		.2byte	0x32c
 1757 03cd C1000000 		.4byte	0xc1
 1758 03d1 02       		.uleb128 0x2
 1759 03d2 91       		.byte	0x91
 1760 03d3 68       		.sleb128 -24
 1761 03d4 00       		.byte	0
 1762 03d5 11       		.uleb128 0x11
 1763 03d6 43040000 		.4byte	.LASF54
 1764 03da 01       		.byte	0x1
 1765 03db 5703     		.2byte	0x357
 1766 03dd A7000000 		.4byte	0xa7
 1767 03e1 00000000 		.4byte	.LFB18
 1768 03e5 80000000 		.4byte	.LFE18-.LFB18
 1769 03e9 01       		.uleb128 0x1
 1770 03ea 9C       		.byte	0x9c
 1771 03eb 1D040000 		.4byte	0x41d
 1772 03ef 0F       		.uleb128 0xf
 1773 03f0 FF020000 		.4byte	.LASF34
 1774 03f4 01       		.byte	0x1
 1775 03f5 5703     		.2byte	0x357
 1776 03f7 83000000 		.4byte	0x83
 1777 03fb 02       		.uleb128 0x2
 1778 03fc 91       		.byte	0x91
 1779 03fd 64       		.sleb128 -28
 1780 03fe 0F       		.uleb128 0xf
 1781 03ff 86030000 		.4byte	.LASF50
 1782 0403 01       		.byte	0x1
 1783 0404 5703     		.2byte	0x357
 1784 0406 8F000000 		.4byte	0x8f
 1785 040a 02       		.uleb128 0x2
 1786 040b 91       		.byte	0x91
 1787 040c 62       		.sleb128 -30
 1788 040d 10       		.uleb128 0x10
 1789 040e 79010000 		.4byte	.LASF55
 1790 0412 01       		.byte	0x1
 1791 0413 5903     		.2byte	0x359
 1792 0415 A7000000 		.4byte	0xa7
 1793 0419 02       		.uleb128 0x2
 1794 041a 91       		.byte	0x91
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 48


 1795 041b 6C       		.sleb128 -20
 1796 041c 00       		.byte	0
 1797 041d 09       		.uleb128 0x9
 1798 041e 83000000 		.4byte	0x83
 1799 0422 2D040000 		.4byte	0x42d
 1800 0426 0A       		.uleb128 0xa
 1801 0427 E5000000 		.4byte	0xe5
 1802 042b 03       		.byte	0x3
 1803 042c 00       		.byte	0
 1804 042d 08       		.uleb128 0x8
 1805 042e D0020000 		.4byte	.LASF56
 1806 0432 01       		.byte	0x1
 1807 0433 21       		.byte	0x21
 1808 0434 3E040000 		.4byte	0x43e
 1809 0438 05       		.uleb128 0x5
 1810 0439 03       		.byte	0x3
 1811 043a 00000000 		.4byte	ADC_SAR_SEQ_channelsConfig
 1812 043e 0B       		.uleb128 0xb
 1813 043f 1D040000 		.4byte	0x41d
 1814 0443 14       		.uleb128 0x14
 1815 0444 EB020000 		.4byte	.LASF57
 1816 0448 01       		.byte	0x1
 1817 0449 18       		.byte	0x18
 1818 044a 6B000000 		.4byte	0x6b
 1819 044e 05       		.uleb128 0x5
 1820 044f 03       		.byte	0x3
 1821 0450 00000000 		.4byte	ADC_SAR_SEQ_initVar
 1822 0454 09       		.uleb128 0x9
 1823 0455 8F000000 		.4byte	0x8f
 1824 0459 64040000 		.4byte	0x464
 1825 045d 0A       		.uleb128 0xa
 1826 045e E5000000 		.4byte	0xe5
 1827 0462 03       		.byte	0x3
 1828 0463 00       		.byte	0
 1829 0464 14       		.uleb128 0x14
 1830 0465 69000000 		.4byte	.LASF58
 1831 0469 01       		.byte	0x1
 1832 046a 19       		.byte	0x19
 1833 046b 75040000 		.4byte	0x475
 1834 046f 05       		.uleb128 0x5
 1835 0470 03       		.byte	0x3
 1836 0471 00000000 		.4byte	ADC_SAR_SEQ_offset
 1837 0475 05       		.uleb128 0x5
 1838 0476 54040000 		.4byte	0x454
 1839 047a 09       		.uleb128 0x9
 1840 047b 9B000000 		.4byte	0x9b
 1841 047f 8A040000 		.4byte	0x48a
 1842 0483 0A       		.uleb128 0xa
 1843 0484 E5000000 		.4byte	0xe5
 1844 0488 03       		.byte	0x3
 1845 0489 00       		.byte	0
 1846 048a 14       		.uleb128 0x14
 1847 048b 95020000 		.4byte	.LASF59
 1848 048f 01       		.byte	0x1
 1849 0490 1A       		.byte	0x1a
 1850 0491 9B040000 		.4byte	0x49b
 1851 0495 05       		.uleb128 0x5
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 49


 1852 0496 03       		.byte	0x3
 1853 0497 00000000 		.4byte	ADC_SAR_SEQ_countsPer10Volt
 1854 049b 05       		.uleb128 0x5
 1855 049c 7A040000 		.4byte	0x47a
 1856 04a0 00       		.byte	0
 1857              		.section	.debug_abbrev,"",%progbits
 1858              	.Ldebug_abbrev0:
 1859 0000 01       		.uleb128 0x1
 1860 0001 11       		.uleb128 0x11
 1861 0002 01       		.byte	0x1
 1862 0003 25       		.uleb128 0x25
 1863 0004 0E       		.uleb128 0xe
 1864 0005 13       		.uleb128 0x13
 1865 0006 0B       		.uleb128 0xb
 1866 0007 03       		.uleb128 0x3
 1867 0008 0E       		.uleb128 0xe
 1868 0009 1B       		.uleb128 0x1b
 1869 000a 0E       		.uleb128 0xe
 1870 000b 55       		.uleb128 0x55
 1871 000c 17       		.uleb128 0x17
 1872 000d 11       		.uleb128 0x11
 1873 000e 01       		.uleb128 0x1
 1874 000f 10       		.uleb128 0x10
 1875 0010 17       		.uleb128 0x17
 1876 0011 00       		.byte	0
 1877 0012 00       		.byte	0
 1878 0013 02       		.uleb128 0x2
 1879 0014 24       		.uleb128 0x24
 1880 0015 00       		.byte	0
 1881 0016 0B       		.uleb128 0xb
 1882 0017 0B       		.uleb128 0xb
 1883 0018 3E       		.uleb128 0x3e
 1884 0019 0B       		.uleb128 0xb
 1885 001a 03       		.uleb128 0x3
 1886 001b 0E       		.uleb128 0xe
 1887 001c 00       		.byte	0
 1888 001d 00       		.byte	0
 1889 001e 03       		.uleb128 0x3
 1890 001f 24       		.uleb128 0x24
 1891 0020 00       		.byte	0
 1892 0021 0B       		.uleb128 0xb
 1893 0022 0B       		.uleb128 0xb
 1894 0023 3E       		.uleb128 0x3e
 1895 0024 0B       		.uleb128 0xb
 1896 0025 03       		.uleb128 0x3
 1897 0026 08       		.uleb128 0x8
 1898 0027 00       		.byte	0
 1899 0028 00       		.byte	0
 1900 0029 04       		.uleb128 0x4
 1901 002a 16       		.uleb128 0x16
 1902 002b 00       		.byte	0
 1903 002c 03       		.uleb128 0x3
 1904 002d 0E       		.uleb128 0xe
 1905 002e 3A       		.uleb128 0x3a
 1906 002f 0B       		.uleb128 0xb
 1907 0030 3B       		.uleb128 0x3b
 1908 0031 05       		.uleb128 0x5
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 50


 1909 0032 49       		.uleb128 0x49
 1910 0033 13       		.uleb128 0x13
 1911 0034 00       		.byte	0
 1912 0035 00       		.byte	0
 1913 0036 05       		.uleb128 0x5
 1914 0037 35       		.uleb128 0x35
 1915 0038 00       		.byte	0
 1916 0039 49       		.uleb128 0x49
 1917 003a 13       		.uleb128 0x13
 1918 003b 00       		.byte	0
 1919 003c 00       		.byte	0
 1920 003d 06       		.uleb128 0x6
 1921 003e 2E       		.uleb128 0x2e
 1922 003f 00       		.byte	0
 1923 0040 3F       		.uleb128 0x3f
 1924 0041 19       		.uleb128 0x19
 1925 0042 03       		.uleb128 0x3
 1926 0043 0E       		.uleb128 0xe
 1927 0044 3A       		.uleb128 0x3a
 1928 0045 0B       		.uleb128 0xb
 1929 0046 3B       		.uleb128 0x3b
 1930 0047 0B       		.uleb128 0xb
 1931 0048 27       		.uleb128 0x27
 1932 0049 19       		.uleb128 0x19
 1933 004a 11       		.uleb128 0x11
 1934 004b 01       		.uleb128 0x1
 1935 004c 12       		.uleb128 0x12
 1936 004d 06       		.uleb128 0x6
 1937 004e 40       		.uleb128 0x40
 1938 004f 18       		.uleb128 0x18
 1939 0050 9642     		.uleb128 0x2116
 1940 0052 19       		.uleb128 0x19
 1941 0053 00       		.byte	0
 1942 0054 00       		.byte	0
 1943 0055 07       		.uleb128 0x7
 1944 0056 2E       		.uleb128 0x2e
 1945 0057 01       		.byte	0x1
 1946 0058 3F       		.uleb128 0x3f
 1947 0059 19       		.uleb128 0x19
 1948 005a 03       		.uleb128 0x3
 1949 005b 0E       		.uleb128 0xe
 1950 005c 3A       		.uleb128 0x3a
 1951 005d 0B       		.uleb128 0xb
 1952 005e 3B       		.uleb128 0x3b
 1953 005f 0B       		.uleb128 0xb
 1954 0060 27       		.uleb128 0x27
 1955 0061 19       		.uleb128 0x19
 1956 0062 11       		.uleb128 0x11
 1957 0063 01       		.uleb128 0x1
 1958 0064 12       		.uleb128 0x12
 1959 0065 06       		.uleb128 0x6
 1960 0066 40       		.uleb128 0x40
 1961 0067 18       		.uleb128 0x18
 1962 0068 9642     		.uleb128 0x2116
 1963 006a 19       		.uleb128 0x19
 1964 006b 01       		.uleb128 0x1
 1965 006c 13       		.uleb128 0x13
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 51


 1966 006d 00       		.byte	0
 1967 006e 00       		.byte	0
 1968 006f 08       		.uleb128 0x8
 1969 0070 34       		.uleb128 0x34
 1970 0071 00       		.byte	0
 1971 0072 03       		.uleb128 0x3
 1972 0073 0E       		.uleb128 0xe
 1973 0074 3A       		.uleb128 0x3a
 1974 0075 0B       		.uleb128 0xb
 1975 0076 3B       		.uleb128 0x3b
 1976 0077 0B       		.uleb128 0xb
 1977 0078 49       		.uleb128 0x49
 1978 0079 13       		.uleb128 0x13
 1979 007a 02       		.uleb128 0x2
 1980 007b 18       		.uleb128 0x18
 1981 007c 00       		.byte	0
 1982 007d 00       		.byte	0
 1983 007e 09       		.uleb128 0x9
 1984 007f 01       		.uleb128 0x1
 1985 0080 01       		.byte	0x1
 1986 0081 49       		.uleb128 0x49
 1987 0082 13       		.uleb128 0x13
 1988 0083 01       		.uleb128 0x1
 1989 0084 13       		.uleb128 0x13
 1990 0085 00       		.byte	0
 1991 0086 00       		.byte	0
 1992 0087 0A       		.uleb128 0xa
 1993 0088 21       		.uleb128 0x21
 1994 0089 00       		.byte	0
 1995 008a 49       		.uleb128 0x49
 1996 008b 13       		.uleb128 0x13
 1997 008c 2F       		.uleb128 0x2f
 1998 008d 0B       		.uleb128 0xb
 1999 008e 00       		.byte	0
 2000 008f 00       		.byte	0
 2001 0090 0B       		.uleb128 0xb
 2002 0091 26       		.uleb128 0x26
 2003 0092 00       		.byte	0
 2004 0093 49       		.uleb128 0x49
 2005 0094 13       		.uleb128 0x13
 2006 0095 00       		.byte	0
 2007 0096 00       		.byte	0
 2008 0097 0C       		.uleb128 0xc
 2009 0098 2E       		.uleb128 0x2e
 2010 0099 00       		.byte	0
 2011 009a 3F       		.uleb128 0x3f
 2012 009b 19       		.uleb128 0x19
 2013 009c 03       		.uleb128 0x3
 2014 009d 0E       		.uleb128 0xe
 2015 009e 3A       		.uleb128 0x3a
 2016 009f 0B       		.uleb128 0xb
 2017 00a0 3B       		.uleb128 0x3b
 2018 00a1 05       		.uleb128 0x5
 2019 00a2 27       		.uleb128 0x27
 2020 00a3 19       		.uleb128 0x19
 2021 00a4 11       		.uleb128 0x11
 2022 00a5 01       		.uleb128 0x1
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 52


 2023 00a6 12       		.uleb128 0x12
 2024 00a7 06       		.uleb128 0x6
 2025 00a8 40       		.uleb128 0x40
 2026 00a9 18       		.uleb128 0x18
 2027 00aa 9642     		.uleb128 0x2116
 2028 00ac 19       		.uleb128 0x19
 2029 00ad 00       		.byte	0
 2030 00ae 00       		.byte	0
 2031 00af 0D       		.uleb128 0xd
 2032 00b0 2E       		.uleb128 0x2e
 2033 00b1 00       		.byte	0
 2034 00b2 3F       		.uleb128 0x3f
 2035 00b3 19       		.uleb128 0x19
 2036 00b4 03       		.uleb128 0x3
 2037 00b5 0E       		.uleb128 0xe
 2038 00b6 3A       		.uleb128 0x3a
 2039 00b7 0B       		.uleb128 0xb
 2040 00b8 3B       		.uleb128 0x3b
 2041 00b9 05       		.uleb128 0x5
 2042 00ba 27       		.uleb128 0x27
 2043 00bb 19       		.uleb128 0x19
 2044 00bc 11       		.uleb128 0x11
 2045 00bd 01       		.uleb128 0x1
 2046 00be 12       		.uleb128 0x12
 2047 00bf 06       		.uleb128 0x6
 2048 00c0 40       		.uleb128 0x40
 2049 00c1 18       		.uleb128 0x18
 2050 00c2 9742     		.uleb128 0x2117
 2051 00c4 19       		.uleb128 0x19
 2052 00c5 00       		.byte	0
 2053 00c6 00       		.byte	0
 2054 00c7 0E       		.uleb128 0xe
 2055 00c8 2E       		.uleb128 0x2e
 2056 00c9 01       		.byte	0x1
 2057 00ca 3F       		.uleb128 0x3f
 2058 00cb 19       		.uleb128 0x19
 2059 00cc 03       		.uleb128 0x3
 2060 00cd 0E       		.uleb128 0xe
 2061 00ce 3A       		.uleb128 0x3a
 2062 00cf 0B       		.uleb128 0xb
 2063 00d0 3B       		.uleb128 0x3b
 2064 00d1 05       		.uleb128 0x5
 2065 00d2 27       		.uleb128 0x27
 2066 00d3 19       		.uleb128 0x19
 2067 00d4 49       		.uleb128 0x49
 2068 00d5 13       		.uleb128 0x13
 2069 00d6 11       		.uleb128 0x11
 2070 00d7 01       		.uleb128 0x1
 2071 00d8 12       		.uleb128 0x12
 2072 00d9 06       		.uleb128 0x6
 2073 00da 40       		.uleb128 0x40
 2074 00db 18       		.uleb128 0x18
 2075 00dc 9742     		.uleb128 0x2117
 2076 00de 19       		.uleb128 0x19
 2077 00df 01       		.uleb128 0x1
 2078 00e0 13       		.uleb128 0x13
 2079 00e1 00       		.byte	0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 53


 2080 00e2 00       		.byte	0
 2081 00e3 0F       		.uleb128 0xf
 2082 00e4 05       		.uleb128 0x5
 2083 00e5 00       		.byte	0
 2084 00e6 03       		.uleb128 0x3
 2085 00e7 0E       		.uleb128 0xe
 2086 00e8 3A       		.uleb128 0x3a
 2087 00e9 0B       		.uleb128 0xb
 2088 00ea 3B       		.uleb128 0x3b
 2089 00eb 05       		.uleb128 0x5
 2090 00ec 49       		.uleb128 0x49
 2091 00ed 13       		.uleb128 0x13
 2092 00ee 02       		.uleb128 0x2
 2093 00ef 18       		.uleb128 0x18
 2094 00f0 00       		.byte	0
 2095 00f1 00       		.byte	0
 2096 00f2 10       		.uleb128 0x10
 2097 00f3 34       		.uleb128 0x34
 2098 00f4 00       		.byte	0
 2099 00f5 03       		.uleb128 0x3
 2100 00f6 0E       		.uleb128 0xe
 2101 00f7 3A       		.uleb128 0x3a
 2102 00f8 0B       		.uleb128 0xb
 2103 00f9 3B       		.uleb128 0x3b
 2104 00fa 05       		.uleb128 0x5
 2105 00fb 49       		.uleb128 0x49
 2106 00fc 13       		.uleb128 0x13
 2107 00fd 02       		.uleb128 0x2
 2108 00fe 18       		.uleb128 0x18
 2109 00ff 00       		.byte	0
 2110 0100 00       		.byte	0
 2111 0101 11       		.uleb128 0x11
 2112 0102 2E       		.uleb128 0x2e
 2113 0103 01       		.byte	0x1
 2114 0104 3F       		.uleb128 0x3f
 2115 0105 19       		.uleb128 0x19
 2116 0106 03       		.uleb128 0x3
 2117 0107 0E       		.uleb128 0xe
 2118 0108 3A       		.uleb128 0x3a
 2119 0109 0B       		.uleb128 0xb
 2120 010a 3B       		.uleb128 0x3b
 2121 010b 05       		.uleb128 0x5
 2122 010c 27       		.uleb128 0x27
 2123 010d 19       		.uleb128 0x19
 2124 010e 49       		.uleb128 0x49
 2125 010f 13       		.uleb128 0x13
 2126 0110 11       		.uleb128 0x11
 2127 0111 01       		.uleb128 0x1
 2128 0112 12       		.uleb128 0x12
 2129 0113 06       		.uleb128 0x6
 2130 0114 40       		.uleb128 0x40
 2131 0115 18       		.uleb128 0x18
 2132 0116 9642     		.uleb128 0x2116
 2133 0118 19       		.uleb128 0x19
 2134 0119 01       		.uleb128 0x1
 2135 011a 13       		.uleb128 0x13
 2136 011b 00       		.byte	0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 54


 2137 011c 00       		.byte	0
 2138 011d 12       		.uleb128 0x12
 2139 011e 2E       		.uleb128 0x2e
 2140 011f 01       		.byte	0x1
 2141 0120 3F       		.uleb128 0x3f
 2142 0121 19       		.uleb128 0x19
 2143 0122 03       		.uleb128 0x3
 2144 0123 0E       		.uleb128 0xe
 2145 0124 3A       		.uleb128 0x3a
 2146 0125 0B       		.uleb128 0xb
 2147 0126 3B       		.uleb128 0x3b
 2148 0127 05       		.uleb128 0x5
 2149 0128 27       		.uleb128 0x27
 2150 0129 19       		.uleb128 0x19
 2151 012a 11       		.uleb128 0x11
 2152 012b 01       		.uleb128 0x1
 2153 012c 12       		.uleb128 0x12
 2154 012d 06       		.uleb128 0x6
 2155 012e 40       		.uleb128 0x40
 2156 012f 18       		.uleb128 0x18
 2157 0130 9742     		.uleb128 0x2117
 2158 0132 19       		.uleb128 0x19
 2159 0133 01       		.uleb128 0x1
 2160 0134 13       		.uleb128 0x13
 2161 0135 00       		.byte	0
 2162 0136 00       		.byte	0
 2163 0137 13       		.uleb128 0x13
 2164 0138 2E       		.uleb128 0x2e
 2165 0139 01       		.byte	0x1
 2166 013a 3F       		.uleb128 0x3f
 2167 013b 19       		.uleb128 0x19
 2168 013c 03       		.uleb128 0x3
 2169 013d 0E       		.uleb128 0xe
 2170 013e 3A       		.uleb128 0x3a
 2171 013f 0B       		.uleb128 0xb
 2172 0140 3B       		.uleb128 0x3b
 2173 0141 05       		.uleb128 0x5
 2174 0142 27       		.uleb128 0x27
 2175 0143 19       		.uleb128 0x19
 2176 0144 11       		.uleb128 0x11
 2177 0145 01       		.uleb128 0x1
 2178 0146 12       		.uleb128 0x12
 2179 0147 06       		.uleb128 0x6
 2180 0148 40       		.uleb128 0x40
 2181 0149 18       		.uleb128 0x18
 2182 014a 9642     		.uleb128 0x2116
 2183 014c 19       		.uleb128 0x19
 2184 014d 01       		.uleb128 0x1
 2185 014e 13       		.uleb128 0x13
 2186 014f 00       		.byte	0
 2187 0150 00       		.byte	0
 2188 0151 14       		.uleb128 0x14
 2189 0152 34       		.uleb128 0x34
 2190 0153 00       		.byte	0
 2191 0154 03       		.uleb128 0x3
 2192 0155 0E       		.uleb128 0xe
 2193 0156 3A       		.uleb128 0x3a
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 55


 2194 0157 0B       		.uleb128 0xb
 2195 0158 3B       		.uleb128 0x3b
 2196 0159 0B       		.uleb128 0xb
 2197 015a 49       		.uleb128 0x49
 2198 015b 13       		.uleb128 0x13
 2199 015c 3F       		.uleb128 0x3f
 2200 015d 19       		.uleb128 0x19
 2201 015e 02       		.uleb128 0x2
 2202 015f 18       		.uleb128 0x18
 2203 0160 00       		.byte	0
 2204 0161 00       		.byte	0
 2205 0162 00       		.byte	0
 2206              		.section	.debug_aranges,"",%progbits
 2207 0000 A4000000 		.4byte	0xa4
 2208 0004 0200     		.2byte	0x2
 2209 0006 00000000 		.4byte	.Ldebug_info0
 2210 000a 04       		.byte	0x4
 2211 000b 00       		.byte	0
 2212 000c 0000     		.2byte	0
 2213 000e 0000     		.2byte	0
 2214 0010 00000000 		.4byte	.LFB1
 2215 0014 24000000 		.4byte	.LFE1-.LFB1
 2216 0018 00000000 		.4byte	.LFB2
 2217 001c 18020000 		.4byte	.LFE2-.LFB2
 2218 0020 00000000 		.4byte	.LFB3
 2219 0024 38000000 		.4byte	.LFE3-.LFB3
 2220 0028 00000000 		.4byte	.LFB4
 2221 002c 18000000 		.4byte	.LFE4-.LFB4
 2222 0030 00000000 		.4byte	.LFB5
 2223 0034 1C000000 		.4byte	.LFE5-.LFB5
 2224 0038 00000000 		.4byte	.LFB6
 2225 003c 1C000000 		.4byte	.LFE6-.LFB6
 2226 0040 00000000 		.4byte	.LFB7
 2227 0044 48000000 		.4byte	.LFE7-.LFB7
 2228 0048 00000000 		.4byte	.LFB8
 2229 004c 44000000 		.4byte	.LFE8-.LFB8
 2230 0050 00000000 		.4byte	.LFB9
 2231 0054 1C000000 		.4byte	.LFE9-.LFB9
 2232 0058 00000000 		.4byte	.LFB10
 2233 005c 30000000 		.4byte	.LFE10-.LFB10
 2234 0060 00000000 		.4byte	.LFB11
 2235 0064 2C000000 		.4byte	.LFE11-.LFB11
 2236 0068 00000000 		.4byte	.LFB12
 2237 006c 1C000000 		.4byte	.LFE12-.LFB12
 2238 0070 00000000 		.4byte	.LFB13
 2239 0074 1C000000 		.4byte	.LFE13-.LFB13
 2240 0078 00000000 		.4byte	.LFB14
 2241 007c 30000000 		.4byte	.LFE14-.LFB14
 2242 0080 00000000 		.4byte	.LFB15
 2243 0084 2C000000 		.4byte	.LFE15-.LFB15
 2244 0088 00000000 		.4byte	.LFB16
 2245 008c A4000000 		.4byte	.LFE16-.LFB16
 2246 0090 00000000 		.4byte	.LFB17
 2247 0094 90000000 		.4byte	.LFE17-.LFB17
 2248 0098 00000000 		.4byte	.LFB18
 2249 009c 80000000 		.4byte	.LFE18-.LFB18
 2250 00a0 00000000 		.4byte	0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 56


 2251 00a4 00000000 		.4byte	0
 2252              		.section	.debug_ranges,"",%progbits
 2253              	.Ldebug_ranges0:
 2254 0000 00000000 		.4byte	.LFB1
 2255 0004 24000000 		.4byte	.LFE1
 2256 0008 00000000 		.4byte	.LFB2
 2257 000c 18020000 		.4byte	.LFE2
 2258 0010 00000000 		.4byte	.LFB3
 2259 0014 38000000 		.4byte	.LFE3
 2260 0018 00000000 		.4byte	.LFB4
 2261 001c 18000000 		.4byte	.LFE4
 2262 0020 00000000 		.4byte	.LFB5
 2263 0024 1C000000 		.4byte	.LFE5
 2264 0028 00000000 		.4byte	.LFB6
 2265 002c 1C000000 		.4byte	.LFE6
 2266 0030 00000000 		.4byte	.LFB7
 2267 0034 48000000 		.4byte	.LFE7
 2268 0038 00000000 		.4byte	.LFB8
 2269 003c 44000000 		.4byte	.LFE8
 2270 0040 00000000 		.4byte	.LFB9
 2271 0044 1C000000 		.4byte	.LFE9
 2272 0048 00000000 		.4byte	.LFB10
 2273 004c 30000000 		.4byte	.LFE10
 2274 0050 00000000 		.4byte	.LFB11
 2275 0054 2C000000 		.4byte	.LFE11
 2276 0058 00000000 		.4byte	.LFB12
 2277 005c 1C000000 		.4byte	.LFE12
 2278 0060 00000000 		.4byte	.LFB13
 2279 0064 1C000000 		.4byte	.LFE13
 2280 0068 00000000 		.4byte	.LFB14
 2281 006c 30000000 		.4byte	.LFE14
 2282 0070 00000000 		.4byte	.LFB15
 2283 0074 2C000000 		.4byte	.LFE15
 2284 0078 00000000 		.4byte	.LFB16
 2285 007c A4000000 		.4byte	.LFE16
 2286 0080 00000000 		.4byte	.LFB17
 2287 0084 90000000 		.4byte	.LFE17
 2288 0088 00000000 		.4byte	.LFB18
 2289 008c 80000000 		.4byte	.LFE18
 2290 0090 00000000 		.4byte	0
 2291 0094 00000000 		.4byte	0
 2292              		.section	.debug_line,"",%progbits
 2293              	.Ldebug_line0:
 2294 0000 A4020000 		.section	.debug_str,"MS",%progbits,1
 2294      02004800 
 2294      00000201 
 2294      FB0E0D00 
 2294      01010101 
 2295              	.LASF10:
 2296 0000 75696E74 		.ascii	"uint16\000"
 2296      313600
 2297              	.LASF48:
 2298 0007 61646347 		.ascii	"adcGain\000"
 2298      61696E00 
 2299              	.LASF23:
 2300 000f 636F756E 		.ascii	"counts\000"
 2300      747300
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 57


 2301              	.LASF47:
 2302 0016 4144435F 		.ascii	"ADC_SAR_SEQ_SetGain\000"
 2302      5341525F 
 2302      5345515F 
 2302      53657447 
 2302      61696E00 
 2303              	.LASF45:
 2304 002a 4144435F 		.ascii	"ADC_SAR_SEQ_SetOffset\000"
 2304      5341525F 
 2304      5345515F 
 2304      5365744F 
 2304      66667365 
 2305              	.LASF25:
 2306 0040 4144435F 		.ascii	"ADC_SAR_SEQ_Start\000"
 2306      5341525F 
 2306      5345515F 
 2306      53746172 
 2306      7400
 2307              	.LASF7:
 2308 0052 6C6F6E67 		.ascii	"long long unsigned int\000"
 2308      206C6F6E 
 2308      6720756E 
 2308      7369676E 
 2308      65642069 
 2309              	.LASF58:
 2310 0069 4144435F 		.ascii	"ADC_SAR_SEQ_offset\000"
 2310      5341525F 
 2310      5345515F 
 2310      6F666673 
 2310      657400
 2311              	.LASF37:
 2312 007c 4144435F 		.ascii	"ADC_SAR_SEQ_SetChanMask\000"
 2312      5341525F 
 2312      5345515F 
 2312      53657443 
 2312      68616E4D 
 2313              	.LASF6:
 2314 0094 6C6F6E67 		.ascii	"long long int\000"
 2314      206C6F6E 
 2314      6720696E 
 2314      7400
 2315              	.LASF0:
 2316 00a2 7369676E 		.ascii	"signed char\000"
 2316      65642063 
 2316      68617200 
 2317              	.LASF13:
 2318 00ae 696E7433 		.ascii	"int32\000"
 2318      3200
 2319              	.LASF4:
 2320 00b4 6C6F6E67 		.ascii	"long int\000"
 2320      20696E74 
 2320      00
 2321              	.LASF9:
 2322 00bd 75696E74 		.ascii	"uint8\000"
 2322      3800
 2323              	.LASF29:
 2324 00c3 4144435F 		.ascii	"ADC_SAR_SEQ_StopConvert\000"
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 58


 2324      5341525F 
 2324      5345515F 
 2324      53746F70 
 2324      436F6E76 
 2325              	.LASF16:
 2326 00db 646F7562 		.ascii	"double\000"
 2326      6C6500
 2327              	.LASF24:
 2328 00e2 4144435F 		.ascii	"ADC_SAR_SEQ_InputsPlacement\000"
 2328      5341525F 
 2328      5345515F 
 2328      496E7075 
 2328      7473506C 
 2329              	.LASF11:
 2330 00fe 75696E74 		.ascii	"uint32\000"
 2330      333200
 2331              	.LASF38:
 2332 0105 6D61736B 		.ascii	"mask\000"
 2332      00
 2333              	.LASF33:
 2334 010a 7265744D 		.ascii	"retMode\000"
 2334      6F646500 
 2335              	.LASF61:
 2336 0112 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_SAR_SEQ.c\000"
 2336      72617465 
 2336      645F536F 
 2336      75726365 
 2336      5C50536F 
 2337              	.LASF8:
 2338 0137 756E7369 		.ascii	"unsigned int\000"
 2338      676E6564 
 2338      20696E74 
 2338      00
 2339              	.LASF52:
 2340 0144 4144435F 		.ascii	"ADC_SAR_SEQ_CountsTo_uVolts\000"
 2340      5341525F 
 2340      5345515F 
 2340      436F756E 
 2340      7473546F 
 2341              	.LASF53:
 2342 0160 75566F6C 		.ascii	"uVolts\000"
 2342      747300
 2343              	.LASF5:
 2344 0167 6C6F6E67 		.ascii	"long unsigned int\000"
 2344      20756E73 
 2344      69676E65 
 2344      6420696E 
 2344      7400
 2345              	.LASF55:
 2346 0179 766F6C74 		.ascii	"volts\000"
 2346      7300
 2347              	.LASF22:
 2348 017f 746D7052 		.ascii	"tmpRegVal\000"
 2348      65675661 
 2348      6C00
 2349              	.LASF3:
 2350 0189 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 59


 2350      7420756E 
 2350      7369676E 
 2350      65642069 
 2350      6E7400
 2351              	.LASF49:
 2352 019c 4144435F 		.ascii	"ADC_SAR_SEQ_CountsTo_mVolts\000"
 2352      5341525F 
 2352      5345515F 
 2352      436F756E 
 2352      7473546F 
 2353              	.LASF39:
 2354 01b8 4144435F 		.ascii	"ADC_SAR_SEQ_SetLowLimit\000"
 2354      5341525F 
 2354      5345515F 
 2354      5365744C 
 2354      6F774C69 
 2355              	.LASF19:
 2356 01d0 72656733 		.ascii	"reg32\000"
 2356      3200
 2357              	.LASF14:
 2358 01d6 666C6F61 		.ascii	"float32\000"
 2358      74333200 
 2359              	.LASF20:
 2360 01de 73697A65 		.ascii	"sizetype\000"
 2360      74797065 
 2360      00
 2361              	.LASF40:
 2362 01e7 6C6F774C 		.ascii	"lowLimit\000"
 2362      696D6974 
 2362      00
 2363              	.LASF44:
 2364 01f0 4144435F 		.ascii	"ADC_SAR_SEQ_SetSatMask\000"
 2364      5341525F 
 2364      5345515F 
 2364      53657453 
 2364      61744D61 
 2365              	.LASF17:
 2366 0207 696E7436 		.ascii	"int64\000"
 2366      3400
 2367              	.LASF27:
 2368 020d 4144435F 		.ascii	"ADC_SAR_SEQ_Stop\000"
 2368      5341525F 
 2368      5345515F 
 2368      53746F70 
 2368      00
 2369              	.LASF26:
 2370 021e 4144435F 		.ascii	"ADC_SAR_SEQ_Enable\000"
 2370      5341525F 
 2370      5345515F 
 2370      456E6162 
 2370      6C6500
 2371              	.LASF15:
 2372 0231 666C6F61 		.ascii	"float\000"
 2372      7400
 2373              	.LASF42:
 2374 0237 68696768 		.ascii	"highLimit\000"
 2374      4C696D69 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 60


 2374      7400
 2375              	.LASF43:
 2376 0241 4144435F 		.ascii	"ADC_SAR_SEQ_SetLimitMask\000"
 2376      5341525F 
 2376      5345515F 
 2376      5365744C 
 2376      696D6974 
 2377              	.LASF1:
 2378 025a 756E7369 		.ascii	"unsigned char\000"
 2378      676E6564 
 2378      20636861 
 2378      7200
 2379              	.LASF2:
 2380 0268 73686F72 		.ascii	"short int\000"
 2380      7420696E 
 2380      7400
 2381              	.LASF31:
 2382 0272 4144435F 		.ascii	"ADC_SAR_SEQ_IsEndConversion\000"
 2382      5341525F 
 2382      5345515F 
 2382      4973456E 
 2382      64436F6E 
 2383              	.LASF51:
 2384 028e 6D566F6C 		.ascii	"mVolts\000"
 2384      747300
 2385              	.LASF59:
 2386 0295 4144435F 		.ascii	"ADC_SAR_SEQ_countsPer10Volt\000"
 2386      5341525F 
 2386      5345515F 
 2386      636F756E 
 2386      74735065 
 2387              	.LASF28:
 2388 02b1 4144435F 		.ascii	"ADC_SAR_SEQ_StartConvert\000"
 2388      5341525F 
 2388      5345515F 
 2388      53746172 
 2388      74436F6E 
 2389              	.LASF21:
 2390 02ca 63684E75 		.ascii	"chNum\000"
 2390      6D00
 2391              	.LASF56:
 2392 02d0 4144435F 		.ascii	"ADC_SAR_SEQ_channelsConfig\000"
 2392      5341525F 
 2392      5345515F 
 2392      6368616E 
 2392      6E656C73 
 2393              	.LASF57:
 2394 02eb 4144435F 		.ascii	"ADC_SAR_SEQ_initVar\000"
 2394      5341525F 
 2394      5345515F 
 2394      696E6974 
 2394      56617200 
 2395              	.LASF34:
 2396 02ff 6368616E 		.ascii	"chan\000"
 2396      00
 2397              	.LASF18:
 2398 0304 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 61


 2398      00
 2399              	.LASF62:
 2400 0309 443A5C44 		.ascii	"D:\\Dropbox\\IoT Development\\Cypress PSoC Developm"
 2400      726F7062 
 2400      6F785C49 
 2400      6F542044 
 2400      6576656C 
 2401 0339 656E745C 		.ascii	"ent\\RTD Design.cydsn\000"
 2401      52544420 
 2401      44657369 
 2401      676E2E63 
 2401      7964736E 
 2402              	.LASF32:
 2403 034e 4144435F 		.ascii	"ADC_SAR_SEQ_GetResult16\000"
 2403      5341525F 
 2403      5345515F 
 2403      47657452 
 2403      6573756C 
 2404              	.LASF46:
 2405 0366 6F666673 		.ascii	"offset\000"
 2405      657400
 2406              	.LASF41:
 2407 036d 4144435F 		.ascii	"ADC_SAR_SEQ_SetHighLimit\000"
 2407      5341525F 
 2407      5345515F 
 2407      53657448 
 2407      6967684C 
 2408              	.LASF50:
 2409 0386 61646343 		.ascii	"adcCounts\000"
 2409      6F756E74 
 2409      7300
 2410              	.LASF30:
 2411 0390 73746174 		.ascii	"status\000"
 2411      757300
 2412              	.LASF12:
 2413 0397 696E7431 		.ascii	"int16\000"
 2413      3600
 2414              	.LASF60:
 2415 039d 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2415      4320342E 
 2415      392E3320 
 2415      32303135 
 2415      30333033 
 2416 03d0 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2416      20726576 
 2416      6973696F 
 2416      6E203232 
 2416      31323230 
 2417 0403 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2417      66756E63 
 2417      74696F6E 
 2417      2D736563 
 2417      74696F6E 
 2418              	.LASF36:
 2419 042b 4144435F 		.ascii	"ADC_SAR_SEQ_Init\000"
 2419      5341525F 
 2419      5345515F 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccY5vsIC.s 			page 62


 2419      496E6974 
 2419      00
 2420              	.LASF35:
 2421 043c 72657375 		.ascii	"result\000"
 2421      6C7400
 2422              	.LASF54:
 2423 0443 4144435F 		.ascii	"ADC_SAR_SEQ_CountsTo_Volts\000"
 2423      5341525F 
 2423      5345515F 
 2423      436F756E 
 2423      7473546F 
 2424              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
