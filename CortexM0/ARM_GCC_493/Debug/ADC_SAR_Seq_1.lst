ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC_SAR_Seq_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	ADC_SAR_Seq_1_initVar
  18              		.bss
  19              		.type	ADC_SAR_Seq_1_initVar, %object
  20              		.size	ADC_SAR_Seq_1_initVar, 1
  21              	ADC_SAR_Seq_1_initVar:
  22 0000 00       		.space	1
  23              		.comm	ADC_SAR_Seq_1_offset,4,4
  24              		.comm	ADC_SAR_Seq_1_countsPer10Volt,8,4
  25              		.section	.rodata
  26              		.align	2
  27              		.type	ADC_SAR_Seq_1_channelsConfig, %object
  28              		.size	ADC_SAR_Seq_1_channelsConfig, 8
  29              	ADC_SAR_Seq_1_channelsConfig:
  30 0000 00010000 		.word	256
  31 0004 00010000 		.word	256
  32              		.section	.text.ADC_SAR_Seq_1_Start,"ax",%progbits
  33              		.align	2
  34              		.global	ADC_SAR_Seq_1_Start
  35              		.code	16
  36              		.thumb_func
  37              		.type	ADC_SAR_Seq_1_Start, %function
  38              	ADC_SAR_Seq_1_Start:
  39              	.LFB1:
  40              		.file 1 "Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c"
   1:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * File Name: ADC_SAR_Seq_1.c
   3:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Version 2.40
   4:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   5:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Description:
   6:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   9:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Note:
  10:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  11:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 2


  18:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #include "ADC_SAR_Seq_1.h"
  19:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  20:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  21:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  22:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint8 ADC_SAR_Seq_1_initVar = 0u;
  25:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int16 ADC_SAR_Seq_1_offset[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int32 ADC_SAR_Seq_1_countsPer10Volt[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];   /* Gain compensat
  27:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  28:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  29:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  30:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Local data allocation
  31:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** static const uint32 CYCODE ADC_SAR_Seq_1_channelsConfig[] = { 0x00000100u, 0x00000100u };
  34:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  35:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  36:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Start
  38:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  40:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  41:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  45:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  47:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  48:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  49:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  50:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  51:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  57:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  to zero before call of ADC_SAR_Seq_1_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Init() and ADC_SAR_Seq_1_Enable() as done in the
  60:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  61:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  62:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Start(void)
  64:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  41              		.loc 1 64 0
  42              		.cfi_startproc
  43 0000 80B5     		push	{r7, lr}
  44              		.cfi_def_cfa_offset 8
  45              		.cfi_offset 7, -8
  46              		.cfi_offset 14, -4
  47 0002 00AF     		add	r7, sp, #0
  48              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(ADC_SAR_Seq_1_initVar == 0u)
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 3


  49              		.loc 1 66 0
  50 0004 064B     		ldr	r3, .L3
  51 0006 1B78     		ldrb	r3, [r3]
  52 0008 002B     		cmp	r3, #0
  53 000a 04D1     		bne	.L2
  67:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
  68:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_Init();
  54              		.loc 1 68 0
  55 000c FFF7FEFF 		bl	ADC_SAR_Seq_1_Init
  69:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
  56              		.loc 1 69 0
  57 0010 034B     		ldr	r3, .L3
  58 0012 0122     		mov	r2, #1
  59 0014 1A70     		strb	r2, [r3]
  60              	.L2:
  70:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
  71:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_Enable();
  61              		.loc 1 71 0
  62 0016 FFF7FEFF 		bl	ADC_SAR_Seq_1_Enable
  72:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
  63              		.loc 1 72 0
  64 001a BD46     		mov	sp, r7
  65              		@ sp needed
  66 001c 80BD     		pop	{r7, pc}
  67              	.L4:
  68 001e C046     		.align	2
  69              	.L3:
  70 0020 00000000 		.word	ADC_SAR_Seq_1_initVar
  71              		.cfi_endproc
  72              	.LFE1:
  73              		.size	ADC_SAR_Seq_1_Start, .-ADC_SAR_Seq_1_Start
  74              		.section	.text.ADC_SAR_Seq_1_Init,"ax",%progbits
  75              		.align	2
  76              		.global	ADC_SAR_Seq_1_Init
  77              		.code	16
  78              		.thumb_func
  79              		.type	ADC_SAR_Seq_1_Init, %function
  80              	ADC_SAR_Seq_1_Init:
  81              	.LFB2:
  73:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  74:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  75:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Init
  77:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  79:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  80:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start().
  83:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  84:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  86:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  87:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  88:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  89:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  90:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 4


  91:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  93:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Init(void)
  95:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  82              		.loc 1 95 0
  83              		.cfi_startproc
  84 0000 80B5     		push	{r7, lr}
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 84B0     		sub	sp, sp, #16
  89              		.cfi_def_cfa_offset 24
  90 0004 00AF     		add	r7, sp, #0
  91              		.cfi_def_cfa_register 7
  96:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 100:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         static const uint8 CYCODE ADC_SAR_Seq_1_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 103:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PIN
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 5


 138:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         };
 168:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 170:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyIntSetPriority(ADC_SAR_Seq_1_INTC_NUMBER, ADC_SAR_Seq_1_INTC_PRIOR_NUMBER);
  92              		.loc 1 172 0
  93 0006 1120     		mov	r0, #17
  94 0008 0321     		mov	r1, #3
  95 000a FFF7FEFF 		bl	CyIntSetPriority
 173:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (void)CyIntSetVector(ADC_SAR_Seq_1_INTC_NUMBER, &ADC_SAR_Seq_1_ISR);
  96              		.loc 1 173 0
  97 000e 634B     		ldr	r3, .L17
  98 0010 1120     		mov	r0, #17
  99 0012 191C     		mov	r1, r3
 100 0014 FFF7FEFF 		bl	CyIntSetVector
 174:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif   /* End ADC_SAR_Seq_1_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 176:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = ADC_SAR_Seq_1_DEFAULT_EN_CHANNELS;
 101              		.loc 1 177 0
 102 0018 614B     		ldr	r3, .L17+4
 103 001a 0322     		mov	r2, #3
 104 001c 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (((ADC_SAR_Seq_1_PUMP_CTRL_REG & ADC_SAR_Seq_1_PUMP_CTRL_ENABLED) != 0u) ? 
 105              		.loc 1 180 0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 6


 106 001e 614B     		ldr	r3, .L17+8
 107 0020 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 108              		.loc 1 178 0
 109 0022 002B     		cmp	r3, #0
 110 0024 01DA     		bge	.L6
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 111              		.loc 1 178 0 is_stmt 0 discriminator 1
 112 0026 6049     		ldr	r1, .L17+12
 113 0028 00E0     		b	.L7
 114              	.L6:
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 115              		.loc 1 178 0 discriminator 2
 116 002a 6049     		ldr	r1, .L17+16
 117              	.L7:
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 118              		.loc 1 178 0 discriminator 4
 119 002c 604B     		ldr	r3, .L17+20
 120 002e 604A     		ldr	r2, .L17+20
 121 0030 1268     		ldr	r2, [r2]
 122 0032 0A43     		orr	r2, r1
 123 0034 1A60     		str	r2, [r3]
 181:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_CTRL_REG_CFG;
 124              		.loc 1 182 0 is_stmt 1 discriminator 4
 125 0036 5F4B     		ldr	r3, .L17+24
 126 0038 5F4A     		ldr	r2, .L17+28
 127 003a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
 128              		.loc 1 183 0 discriminator 4
 129 003c 5F4B     		ldr	r3, .L17+32
 130 003e 604A     		ldr	r2, .L17+36
 131 0040 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_COND_REG  = ADC_SAR_Seq_1_COMPARE_MODE;
 132              		.loc 1 184 0 discriminator 4
 133 0042 604B     		ldr	r3, .L17+40
 134 0044 0022     		mov	r2, #0
 135 0046 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
 136              		.loc 1 185 0 discriminator 4
 137 0048 5F4B     		ldr	r3, .L17+44
 138 004a 604A     		ldr	r2, .L17+48
 139 004c 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
 140              		.loc 1 186 0 discriminator 4
 141 004e 604B     		ldr	r3, .L17+52
 142 0050 5E4A     		ldr	r2, .L17+48
 143 0052 1A60     		str	r2, [r3]
 187:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 188:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_MUX_SWITCH0_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
 144              		.loc 1 190 0 discriminator 4
 145 0054 5F4B     		ldr	r3, .L17+56
 146 0056 5F4A     		ldr	r2, .L17+56
 147 0058 1268     		ldr	r2, [r2]
 148 005a 8021     		mov	r1, #128
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 7


 149 005c 4902     		lsl	r1, r1, #9
 150 005e 0A43     		orr	r2, r1
 151 0060 1A60     		str	r2, [r3]
 191:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
 152              		.loc 1 193 0 discriminator 4
 153 0062 5D4B     		ldr	r3, .L17+60
 154 0064 5C4A     		ldr	r2, .L17+60
 155 0066 1268     		ldr	r2, [r2]
 156 0068 8021     		mov	r1, #128
 157 006a 4902     		lsl	r1, r1, #9
 158 006c 0A43     		orr	r2, r1
 159 006e 1A60     		str	r2, [r3]
 194:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /*ADC_SAR_Seq_1_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 197:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = 0u;
 160              		.loc 1 197 0 discriminator 4
 161 0070 5A4B     		ldr	r3, .L17+64
 162 0072 0022     		mov	r2, #0
 163 0074 1A60     		str	r2, [r3]
 198:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = 0u;
 164              		.loc 1 198 0 discriminator 4
 165 0076 5A4B     		ldr	r3, .L17+68
 166 0078 0022     		mov	r2, #0
 167 007a 1A60     		str	r2, [r3]
 199:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_INTR_MASK_REG = ADC_SAR_Seq_1_SAR_INTR_MASK;
 168              		.loc 1 199 0 discriminator 4
 169 007c 594B     		ldr	r3, .L17+72
 170 007e 0122     		mov	r2, #1
 171 0080 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 201:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_ANA_TRIM_REG = ADC_SAR_Seq_1_TRIM_COEF;
 203:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 205:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal = ADC_SAR_Seq_1_SAR_DFT_CTRL_REG;
 172              		.loc 1 206 0 discriminator 4
 173 0082 594B     		ldr	r3, .L17+76
 174 0084 1B68     		ldr	r3, [r3]
 175 0086 7B60     		str	r3, [r7, #4]
 207:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DCEN;
 176              		.loc 1 207 0 discriminator 4
 177 0088 7B68     		ldr	r3, [r7, #4]
 178 008a 584A     		ldr	r2, .L17+80
 179 008c 1340     		and	r3, r2
 180 008e 7B60     		str	r3, [r7, #4]
 208:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 209:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_NOMINAL_CLOCK_FREQ > (ADC_SAR_Seq_1_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 214:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 8


 216:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 219:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 220:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DCEN;
 181              		.loc 1 220 0 discriminator 4
 182 0090 7B68     		ldr	r3, [r7, #4]
 183 0092 8022     		mov	r2, #128
 184 0094 9205     		lsl	r2, r2, #22
 185 0096 1343     		orr	r3, r2
 186 0098 7B60     		str	r3, [r7, #4]
 221:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DLY_INC;
 187              		.loc 1 221 0 discriminator 4
 188 009a 7B68     		ldr	r3, [r7, #4]
 189 009c 0122     		mov	r2, #1
 190 009e 9343     		bic	r3, r2
 191 00a0 7B60     		str	r3, [r7, #4]
 222:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 226:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_DFT_CTRL_REG = tmpRegVal;
 192              		.loc 1 226 0 discriminator 4
 193 00a2 514B     		ldr	r3, .L17+76
 194 00a4 7A68     		ldr	r2, [r7, #4]
 195 00a6 1A60     		str	r2, [r3]
 227:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 228:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_WOUNDING_REG = ADC_SAR_Seq_1_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 196              		.loc 1 232 0 discriminator 4
 197 00a8 0023     		mov	r3, #0
 198 00aa FB60     		str	r3, [r7, #12]
 199 00ac 70E0     		b	.L8
 200              	.L16:
 233:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 234:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         tmpRegVal = (ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_CHANNEL_CONFIG_MASK);
 201              		.loc 1 234 0
 202 00ae 504B     		ldr	r3, .L17+84
 203 00b0 FA68     		ldr	r2, [r7, #12]
 204 00b2 9200     		lsl	r2, r2, #2
 205 00b4 D258     		ldr	r2, [r2, r3]
 206 00b6 DC23     		mov	r3, #220
 207 00b8 9B01     		lsl	r3, r3, #6
 208 00ba 1340     		and	r3, r2
 209 00bc 7B60     		str	r3, [r7, #4]
 235:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_InputsPlacement[chNum];
 210              		.loc 1 236 0
 211 00be 4D4A     		ldr	r2, .L17+88
 212 00c0 FB68     		ldr	r3, [r7, #12]
 213 00c2 D318     		add	r3, r2, r3
 214 00c4 1B78     		ldrb	r3, [r3]
 215 00c6 1A1C     		mov	r2, r3
 216 00c8 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 9


 217 00ca 1343     		orr	r3, r2
 218 00cc 7B60     		str	r3, [r7, #4]
 237:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 239:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 240:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         */
 244:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if((ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (ADC_SAR_Seq_1_ALT_WOUNDING == ADC_SAR_Seq_1_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)(~ADC_SAR_Seq_1_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 249:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(chNum < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 253:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRe
 219              		.loc 1 253 0
 220 00ce FB68     		ldr	r3, [r7, #12]
 221 00d0 9B00     		lsl	r3, r3, #2
 222 00d2 494A     		ldr	r2, .L17+92
 223 00d4 9446     		mov	ip, r2
 224 00d6 6344     		add	r3, r3, ip
 225 00d8 7A68     		ldr	r2, [r7, #4]
 226 00da 1A60     		str	r2, [r3]
 254:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 255:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 227              		.loc 1 255 0
 228 00dc 444B     		ldr	r3, .L17+84
 229 00de FA68     		ldr	r2, [r7, #12]
 230 00e0 9200     		lsl	r2, r2, #2
 231 00e2 D358     		ldr	r3, [r2, r3]
 232 00e4 0122     		mov	r2, #1
 233 00e6 1340     		and	r3, r2
 234 00e8 09D0     		beq	.L9
 256:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 257:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 235              		.loc 1 257 0
 236 00ea 3C4B     		ldr	r3, .L17+64
 237 00ec 3B4A     		ldr	r2, .L17+64
 238 00ee 1268     		ldr	r2, [r2]
 239 00f0 F968     		ldr	r1, [r7, #12]
 240 00f2 0120     		mov	r0, #1
 241 00f4 8840     		lsl	r0, r0, r1
 242 00f6 011C     		mov	r1, r0
 243 00f8 89B2     		uxth	r1, r1
 244 00fa 0A43     		orr	r2, r1
 245 00fc 1A60     		str	r2, [r3]
 246              	.L9:
 258:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 259:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 260:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0u)
 247              		.loc 1 260 0
 248 00fe 3C4B     		ldr	r3, .L17+84
 249 0100 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 10


 250 0102 9200     		lsl	r2, r2, #2
 251 0104 D358     		ldr	r3, [r2, r3]
 252 0106 0222     		mov	r2, #2
 253 0108 1340     		and	r3, r2
 254 010a 09D0     		beq	.L10
 261:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 262:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 255              		.loc 1 262 0
 256 010c 344B     		ldr	r3, .L17+68
 257 010e 344A     		ldr	r2, .L17+68
 258 0110 1268     		ldr	r2, [r2]
 259 0112 F968     		ldr	r1, [r7, #12]
 260 0114 0120     		mov	r0, #1
 261 0116 8840     		lsl	r0, r0, r1
 262 0118 011C     		mov	r1, r0
 263 011a 89B2     		uxth	r1, r1
 264 011c 0A43     		orr	r2, r1
 265 011e 1A60     		str	r2, [r3]
 266              	.L10:
 263:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 264:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 265:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             else
 267:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 268:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 CY_SET_REG32(ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_Seq_1_INJ_T
 269:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 270:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 272:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 274:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 275:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0
 276:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 277:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 279:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 280:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 282:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_ALT_RESOLUTION_ON) != 0u)
 267              		.loc 1 282 0
 268 0120 334B     		ldr	r3, .L17+84
 269 0122 FA68     		ldr	r2, [r7, #12]
 270 0124 9200     		lsl	r2, r2, #2
 271 0126 D258     		ldr	r2, [r2, r3]
 272 0128 8023     		mov	r3, #128
 273 012a 9B00     		lsl	r3, r3, #2
 274 012c 1340     		and	r3, r2
 275 012e 03D0     		beq	.L11
 283:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 284:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_DEFAULT_MAX_WRK_ALT;
 276              		.loc 1 284 0
 277 0130 8023     		mov	r3, #128
 278 0132 5B00     		lsl	r3, r3, #1
 279 0134 BB60     		str	r3, [r7, #8]
 280 0136 02E0     		b	.L12
 281              	.L11:
 285:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 11


 286:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else
 287:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 288:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_SAR_WRK_MAX_12BIT;
 282              		.loc 1 288 0
 283 0138 8023     		mov	r3, #128
 284 013a 5B01     		lsl	r3, r3, #5
 285 013c BB60     		str	r3, [r7, #8]
 286              	.L12:
 289:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 290:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 291:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_DIFFERENTIAL_EN) == 0u)
 287              		.loc 1 291 0
 288 013e 2C4B     		ldr	r3, .L17+84
 289 0140 FA68     		ldr	r2, [r7, #12]
 290 0142 9200     		lsl	r2, r2, #2
 291 0144 D258     		ldr	r2, [r2, r3]
 292 0146 8023     		mov	r3, #128
 293 0148 5B00     		lsl	r3, r3, #1
 294 014a 1340     		and	r3, r2
 295 014c 05D1     		bne	.L13
 292:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 293:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if((ADC_SAR_Seq_1_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 (ADC_SAR_Seq_1_DEFAULT_NEG_INPUT_SEL == ADC_SAR_Seq_1__VREF))
 295:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 298:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 296              		.loc 1 298 0
 297 014e 2B4B     		ldr	r3, .L17+96
 298 0150 FA68     		ldr	r2, [r7, #12]
 299 0152 5200     		lsl	r2, r2, #1
 300 0154 0021     		mov	r1, #0
 301 0156 D152     		strh	r1, [r2, r3]
 302 0158 04E0     		b	.L14
 303              	.L13:
 299:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED */
 300:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 301:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 303:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 307:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 304              		.loc 1 307 0
 305 015a 284B     		ldr	r3, .L17+96
 306 015c FA68     		ldr	r2, [r7, #12]
 307 015e 5200     		lsl	r2, r2, #1
 308 0160 0021     		mov	r1, #0
 309 0162 D152     		strh	r1, [r2, r3]
 310              	.L14:
 308:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED 
 309:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 310:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_1_10MV_COUNTS) +
 311              		.loc 1 311 0 discriminator 2
 312 0164 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 12


 313 0166 264A     		ldr	r2, .L17+100
 314 0168 5343     		mul	r3, r2
 315 016a 8022     		mov	r2, #128
 316 016c D200     		lsl	r2, r2, #3
 317 016e 9446     		mov	ip, r2
 318 0170 6344     		add	r3, r3, ip
 312:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 319              		.loc 1 312 0 discriminator 2
 320 0172 002B     		cmp	r3, #0
 321 0174 02DA     		bge	.L15
 322 0176 234A     		ldr	r2, .L17+104
 323 0178 9446     		mov	ip, r2
 324 017a 6344     		add	r3, r3, ip
 325              	.L15:
 326 017c DB12     		asr	r3, r3, #11
 311:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 327              		.loc 1 311 0 discriminator 2
 328 017e 9BB2     		uxth	r3, r3
 329 0180 19B2     		sxth	r1, r3
 330 0182 214B     		ldr	r3, .L17+108
 331 0184 FA68     		ldr	r2, [r7, #12]
 332 0186 9200     		lsl	r2, r2, #2
 333 0188 D150     		str	r1, [r2, r3]
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 334              		.loc 1 232 0 discriminator 2
 335 018a FB68     		ldr	r3, [r7, #12]
 336 018c 0133     		add	r3, r3, #1
 337 018e FB60     		str	r3, [r7, #12]
 338              	.L8:
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 339              		.loc 1 232 0 is_stmt 0 discriminator 1
 340 0190 FB68     		ldr	r3, [r7, #12]
 341 0192 012B     		cmp	r3, #1
 342 0194 8BD9     		bls	.L16
 313:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 314:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 343              		.loc 1 314 0 is_stmt 1
 344 0196 BD46     		mov	sp, r7
 345 0198 04B0     		add	sp, sp, #16
 346              		@ sp needed
 347 019a 80BD     		pop	{r7, pc}
 348              	.L18:
 349              		.align	2
 350              	.L17:
 351 019c 00000000 		.word	ADC_SAR_Seq_1_ISR
 352 01a0 20003A40 		.word	1077542944
 353 01a4 80033A40 		.word	1077543808
 354 01a8 C0201010 		.word	269492416
 355 01ac C0200010 		.word	268443840
 356 01b0 00003A40 		.word	1077542912
 357 01b4 04003A40 		.word	1077542916
 358 01b8 8C000080 		.word	-2147483508
 359 01bc 18003A40 		.word	1077542936
 360 01c0 0000FF07 		.word	134152192
 361 01c4 1C003A40 		.word	1077542940
 362 01c8 10003A40 		.word	1077542928
 363 01cc 04000400 		.word	262148
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 13


 364 01d0 14003A40 		.word	1077542932
 365 01d4 00033A40 		.word	1077543680
 366 01d8 40033A40 		.word	1077543744
 367 01dc 28023A40 		.word	1077543464
 368 01e0 38023A40 		.word	1077543480
 369 01e4 18023A40 		.word	1077543448
 370 01e8 30003A40 		.word	1077542960
 371 01ec FFFFFFDF 		.word	-536870913
 372 01f0 00000000 		.word	ADC_SAR_Seq_1_channelsConfig
 373 01f4 08000000 		.word	ADC_SAR_Seq_1_InputsPlacement.4852
 374 01f8 80003A40 		.word	1077543040
 375 01fc 00000000 		.word	ADC_SAR_Seq_1_offset
 376 0200 10270000 		.word	10000
 377 0204 FF070000 		.word	2047
 378 0208 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 379              		.cfi_endproc
 380              	.LFE2:
 381              		.size	ADC_SAR_Seq_1_Init, .-ADC_SAR_Seq_1_Init
 382              		.section	.text.ADC_SAR_Seq_1_Enable,"ax",%progbits
 383              		.align	2
 384              		.global	ADC_SAR_Seq_1_Enable
 385              		.code	16
 386              		.thumb_func
 387              		.type	ADC_SAR_Seq_1_Enable, %function
 388              	ADC_SAR_Seq_1_Enable:
 389              	.LFB3:
 315:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 316:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 320:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 321:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 323:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 325:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 326:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 327:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 328:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 329:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Enable(void)
 331:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 390              		.loc 1 331 0
 391              		.cfi_startproc
 392 0000 80B5     		push	{r7, lr}
 393              		.cfi_def_cfa_offset 8
 394              		.cfi_offset 7, -8
 395              		.cfi_offset 14, -4
 396 0002 00AF     		add	r7, sp, #0
 397              		.cfi_def_cfa_register 7
 332:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if (0u == (ADC_SAR_Seq_1_SAR_CTRL_REG & ADC_SAR_Seq_1_ENABLE))
 398              		.loc 1 332 0
 399 0004 0A4B     		ldr	r3, .L22
 400 0006 1B68     		ldr	r3, [r3]
 401 0008 002B     		cmp	r3, #0
 402 000a 0EDB     		blt	.L19
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 14


 333:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 334:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 336:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             while (0u != (ADC_SAR_Seq_1_SAR_STATUS_REG & ADC_SAR_Seq_1_STATUS_BUSY))
 403              		.loc 1 336 0
 404 000c C046     		mov	r8, r8
 405              	.L21:
 406              		.loc 1 336 0 is_stmt 0 discriminator 1
 407 000e 094B     		ldr	r3, .L22+4
 408 0010 1B68     		ldr	r3, [r3]
 409 0012 002B     		cmp	r3, #0
 410 0014 FBDB     		blt	.L21
 337:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 338:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 340:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 342:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_ENABLE;
 411              		.loc 1 342 0 is_stmt 1
 412 0016 064B     		ldr	r3, .L22
 413 0018 054A     		ldr	r2, .L22
 414 001a 1268     		ldr	r2, [r2]
 415 001c 8021     		mov	r1, #128
 416 001e 0906     		lsl	r1, r1, #24
 417 0020 0A43     		orr	r2, r1
 418 0022 1A60     		str	r2, [r3]
 343:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 344:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyDelayUs(ADC_SAR_Seq_1_10US_DELAY);         
 419              		.loc 1 345 0
 420 0024 0A20     		mov	r0, #10
 421 0026 FFF7FEFF 		bl	CyDelayUs
 422              	.L19:
 346:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 347:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 423              		.loc 1 347 0
 424 002a BD46     		mov	sp, r7
 425              		@ sp needed
 426 002c 80BD     		pop	{r7, pc}
 427              	.L23:
 428 002e C046     		.align	2
 429              	.L22:
 430 0030 00003A40 		.word	1077542912
 431 0034 08023A40 		.word	1077543432
 432              		.cfi_endproc
 433              	.LFE3:
 434              		.size	ADC_SAR_Seq_1_Enable, .-ADC_SAR_Seq_1_Enable
 435              		.section	.text.ADC_SAR_Seq_1_Stop,"ax",%progbits
 436              		.align	2
 437              		.global	ADC_SAR_Seq_1_Stop
 438              		.code	16
 439              		.thumb_func
 440              		.type	ADC_SAR_Seq_1_Stop, %function
 441              	ADC_SAR_Seq_1_Stop:
 442              	.LFB4:
 348:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 349:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 15


 350:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Stop
 352:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 354:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 355:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mode.
 357:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 358:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 360:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 361:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 362:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 363:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 364:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Stop(void)
 366:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 443              		.loc 1 366 0
 444              		.cfi_startproc
 445 0000 80B5     		push	{r7, lr}
 446              		.cfi_def_cfa_offset 8
 447              		.cfi_offset 7, -8
 448              		.cfi_offset 14, -4
 449 0002 00AF     		add	r7, sp, #0
 450              		.cfi_def_cfa_register 7
 367:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_1_ENABLE;
 451              		.loc 1 367 0
 452 0004 034B     		ldr	r3, .L25
 453 0006 034A     		ldr	r2, .L25
 454 0008 1268     		ldr	r2, [r2]
 455 000a 5200     		lsl	r2, r2, #1
 456 000c 5208     		lsr	r2, r2, #1
 457 000e 1A60     		str	r2, [r3]
 368:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 458              		.loc 1 368 0
 459 0010 BD46     		mov	sp, r7
 460              		@ sp needed
 461 0012 80BD     		pop	{r7, pc}
 462              	.L26:
 463              		.align	2
 464              	.L25:
 465 0014 00003A40 		.word	1077542912
 466              		.cfi_endproc
 467              	.LFE4:
 468              		.size	ADC_SAR_Seq_1_Stop, .-ADC_SAR_Seq_1_Stop
 469              		.section	.text.ADC_SAR_Seq_1_StartConvert,"ax",%progbits
 470              		.align	2
 471              		.global	ADC_SAR_Seq_1_StartConvert
 472              		.code	16
 473              		.thumb_func
 474              		.type	ADC_SAR_Seq_1_StartConvert, %function
 475              	ADC_SAR_Seq_1_StartConvert:
 476              	.LFB5:
 369:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 370:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 371:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StartConvert
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 16


 373:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 375:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 376:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description:
 377:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 380:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 384:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 386:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 387:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 388:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 389:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 390:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StartConvert(void)
 392:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 477              		.loc 1 392 0
 478              		.cfi_startproc
 479 0000 80B5     		push	{r7, lr}
 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 7, -8
 482              		.cfi_offset 14, -4
 483 0002 00AF     		add	r7, sp, #0
 484              		.cfi_def_cfa_register 7
 393:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 394:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG |= ADC_SAR_Seq_1_CONTINUOUS_EN;
 485              		.loc 1 394 0
 486 0004 044B     		ldr	r3, .L28
 487 0006 044A     		ldr	r2, .L28
 488 0008 1268     		ldr	r2, [r2]
 489 000a 8021     		mov	r1, #128
 490 000c 4902     		lsl	r1, r1, #9
 491 000e 0A43     		orr	r2, r1
 492 0010 1A60     		str	r2, [r3]
 395:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_START_CTRL_REG = ADC_SAR_Seq_1_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 398:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 399:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 493              		.loc 1 399 0
 494 0012 BD46     		mov	sp, r7
 495              		@ sp needed
 496 0014 80BD     		pop	{r7, pc}
 497              	.L29:
 498 0016 C046     		.align	2
 499              	.L28:
 500 0018 04003A40 		.word	1077542916
 501              		.cfi_endproc
 502              	.LFE5:
 503              		.size	ADC_SAR_Seq_1_StartConvert, .-ADC_SAR_Seq_1_StartConvert
 504              		.section	.text.ADC_SAR_Seq_1_StopConvert,"ax",%progbits
 505              		.align	2
 506              		.global	ADC_SAR_Seq_1_StopConvert
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 17


 507              		.code	16
 508              		.thumb_func
 509              		.type	ADC_SAR_Seq_1_StopConvert, %function
 510              	ADC_SAR_Seq_1_StopConvert:
 511              	.LFB6:
 400:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 401:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 402:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StopConvert
 404:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 406:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 407:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 409:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 411:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 412:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 413:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 414:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 415:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StopConvert(void)
 417:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 512              		.loc 1 417 0
 513              		.cfi_startproc
 514 0000 80B5     		push	{r7, lr}
 515              		.cfi_def_cfa_offset 8
 516              		.cfi_offset 7, -8
 517              		.cfi_offset 14, -4
 518 0002 00AF     		add	r7, sp, #0
 519              		.cfi_def_cfa_register 7
 418:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 419:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_Seq_1_CONTINUOUS_EN);
 520              		.loc 1 419 0
 521 0004 034B     		ldr	r3, .L31
 522 0006 034A     		ldr	r2, .L31
 523 0008 1268     		ldr	r2, [r2]
 524 000a 0349     		ldr	r1, .L31+4
 525 000c 0A40     		and	r2, r1
 526 000e 1A60     		str	r2, [r3]
 420:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 421:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 527              		.loc 1 421 0
 528 0010 BD46     		mov	sp, r7
 529              		@ sp needed
 530 0012 80BD     		pop	{r7, pc}
 531              	.L32:
 532              		.align	2
 533              	.L31:
 534 0014 04003A40 		.word	1077542916
 535 0018 FFFFFEFF 		.word	-65537
 536              		.cfi_endproc
 537              	.LFE6:
 538              		.size	ADC_SAR_Seq_1_StopConvert, .-ADC_SAR_Seq_1_StopConvert
 539              		.section	.text.ADC_SAR_Seq_1_IsEndConversion,"ax",%progbits
 540              		.align	2
 541              		.global	ADC_SAR_Seq_1_IsEndConversion
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 18


 542              		.code	16
 543              		.thumb_func
 544              		.type	ADC_SAR_Seq_1_IsEndConversion, %function
 545              	ADC_SAR_Seq_1_IsEndConversion:
 546              	.LFB7:
 422:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 423:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 424:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_IsEndConversion
 426:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 428:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 429:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  completed.
 436:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 437:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 445:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 446:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 449:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint32 ADC_SAR_Seq_1_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 547              		.loc 1 451 0
 548              		.cfi_startproc
 549 0000 80B5     		push	{r7, lr}
 550              		.cfi_def_cfa_offset 8
 551              		.cfi_offset 7, -8
 552              		.cfi_offset 14, -4
 553 0002 84B0     		sub	sp, sp, #16
 554              		.cfi_def_cfa_offset 24
 555 0004 00AF     		add	r7, sp, #0
 556              		.cfi_def_cfa_register 7
 557 0006 7860     		str	r0, [r7, #4]
 452:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 status = 0u;
 558              		.loc 1 452 0
 559 0008 0023     		mov	r3, #0
 560 000a FB60     		str	r3, [r7, #12]
 453:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 454:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS | ADC_SAR_Seq_1_WAIT_FOR_RESULT)) != 0u)
 561              		.loc 1 454 0
 562 000c 7B68     		ldr	r3, [r7, #4]
 563 000e 0322     		mov	r2, #3
 564 0010 1340     		and	r3, r2
 565 0012 11D0     		beq	.L34
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 19


 566              	.L36:
 455:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 456:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         do
 457:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 458:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             status = ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_EOS_MASK;
 567              		.loc 1 458 0 discriminator 2
 568 0014 0B4B     		ldr	r3, .L38
 569 0016 1B68     		ldr	r3, [r3]
 570 0018 0122     		mov	r2, #1
 571 001a 1340     		and	r3, r2
 572 001c FB60     		str	r3, [r7, #12]
 459:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }while((status == 0u) && ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT) != 0u));
 573              		.loc 1 459 0 discriminator 2
 574 001e FB68     		ldr	r3, [r7, #12]
 575 0020 002B     		cmp	r3, #0
 576 0022 03D1     		bne	.L35
 577              		.loc 1 459 0 is_stmt 0 discriminator 1
 578 0024 7B68     		ldr	r3, [r7, #4]
 579 0026 0222     		mov	r2, #2
 580 0028 1340     		and	r3, r2
 581 002a F3D1     		bne	.L36
 582              	.L35:
 460:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 461:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(status != 0u)
 583              		.loc 1 461 0 is_stmt 1
 584 002c FB68     		ldr	r3, [r7, #12]
 585 002e 002B     		cmp	r3, #0
 586 0030 02D0     		beq	.L34
 462:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 463:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_EOS_MASK;
 587              		.loc 1 464 0
 588 0032 044B     		ldr	r3, .L38
 589 0034 0122     		mov	r2, #1
 590 0036 1A60     		str	r2, [r3]
 591              	.L34:
 465:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 466:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 467:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 468:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS_INJ | ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 471:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             do
 472:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 473:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 status |= ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }while(((status & ADC_SAR_Seq_1_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 477:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((status & ADC_SAR_Seq_1_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 479:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 482:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 483:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 485:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return (status);
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 20


 592              		.loc 1 485 0
 593 0038 FB68     		ldr	r3, [r7, #12]
 486:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 594              		.loc 1 486 0
 595 003a 181C     		mov	r0, r3
 596 003c BD46     		mov	sp, r7
 597 003e 04B0     		add	sp, sp, #16
 598              		@ sp needed
 599 0040 80BD     		pop	{r7, pc}
 600              	.L39:
 601 0042 C046     		.align	2
 602              	.L38:
 603 0044 10023A40 		.word	1077543440
 604              		.cfi_endproc
 605              	.LFE7:
 606              		.size	ADC_SAR_Seq_1_IsEndConversion, .-ADC_SAR_Seq_1_IsEndConversion
 607              		.section	.text.ADC_SAR_Seq_1_GetResult16,"ax",%progbits
 608              		.align	2
 609              		.global	ADC_SAR_Seq_1_GetResult16
 610              		.code	16
 611              		.thumb_func
 612              		.type	ADC_SAR_Seq_1_GetResult16, %function
 613              	ADC_SAR_Seq_1_GetResult16:
 614              	.LFB8:
 487:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 488:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 489:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_GetResult16
 491:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 493:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 494:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 496:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 500:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 501:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 503:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** int16 ADC_SAR_Seq_1_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 615              		.loc 1 505 0
 616              		.cfi_startproc
 617 0000 80B5     		push	{r7, lr}
 618              		.cfi_def_cfa_offset 8
 619              		.cfi_offset 7, -8
 620              		.cfi_offset 14, -4
 621 0002 84B0     		sub	sp, sp, #16
 622              		.cfi_def_cfa_offset 24
 623 0004 00AF     		add	r7, sp, #0
 624              		.cfi_def_cfa_register 7
 625 0006 7860     		str	r0, [r7, #4]
 506:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 508:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 21


 509:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 626              		.loc 1 509 0
 627 0008 7B68     		ldr	r3, [r7, #4]
 628 000a 012B     		cmp	r3, #1
 629 000c 02D9     		bls	.L41
 630              		.loc 1 509 0 is_stmt 0 discriminator 1
 631 000e 0020     		mov	r0, #0
 632 0010 FFF7FEFF 		bl	CyHalt
 633              	.L41:
 510:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 511:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(chan < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 634              		.loc 1 511 0 is_stmt 1
 635 0014 7B68     		ldr	r3, [r7, #4]
 636 0016 012B     		cmp	r3, #1
 637 0018 09D8     		bhi	.L42
 512:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 513:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) 
 638              		.loc 1 513 0
 639 001a 7B68     		ldr	r3, [r7, #4]
 640 001c 9B00     		lsl	r3, r3, #2
 641 001e 084A     		ldr	r2, .L45
 642 0020 9446     		mov	ip, r2
 643 0022 6344     		add	r3, r3, ip
 644 0024 1B68     		ldr	r3, [r3]
 645 0026 1B04     		lsl	r3, r3, #16
 646 0028 1B0C     		lsr	r3, r3, #16
 647 002a FB60     		str	r3, [r7, #12]
 648 002c 01E0     		b	.L43
 649              	.L42:
 514:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 516:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     else
 517:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 518:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = ADC_SAR_Seq_1_SAR_INJ_RESULT_REG & ADC_SAR_Seq_1_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 521:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = 0u;
 650              		.loc 1 521 0
 651 002e 0023     		mov	r3, #0
 652 0030 FB60     		str	r3, [r7, #12]
 653              	.L43:
 522:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 524:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 525:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return ( (int16)result );
 654              		.loc 1 525 0
 655 0032 FB68     		ldr	r3, [r7, #12]
 656 0034 9BB2     		uxth	r3, r3
 657 0036 1BB2     		sxth	r3, r3
 526:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 658              		.loc 1 526 0
 659 0038 181C     		mov	r0, r3
 660 003a BD46     		mov	sp, r7
 661 003c 04B0     		add	sp, sp, #16
 662              		@ sp needed
 663 003e 80BD     		pop	{r7, pc}
 664              	.L46:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 22


 665              		.align	2
 666              	.L45:
 667 0040 80013A40 		.word	1077543296
 668              		.cfi_endproc
 669              	.LFE8:
 670              		.size	ADC_SAR_Seq_1_GetResult16, .-ADC_SAR_Seq_1_GetResult16
 671              		.section	.text.ADC_SAR_Seq_1_SetChanMask,"ax",%progbits
 672              		.align	2
 673              		.global	ADC_SAR_Seq_1_SetChanMask
 674              		.code	16
 675              		.thumb_func
 676              		.type	ADC_SAR_Seq_1_SetChanMask, %function
 677              	ADC_SAR_Seq_1_SetChanMask:
 678              	.LFB9:
 527:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 528:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 529:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetChanMask
 531:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 533:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 534:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 536:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 545:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 546:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 547:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 548:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 679              		.loc 1 550 0
 680              		.cfi_startproc
 681 0000 80B5     		push	{r7, lr}
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 7, -8
 684              		.cfi_offset 14, -4
 685 0002 82B0     		sub	sp, sp, #8
 686              		.cfi_def_cfa_offset 16
 687 0004 00AF     		add	r7, sp, #0
 688              		.cfi_def_cfa_register 7
 689 0006 7860     		str	r0, [r7, #4]
 551:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 690              		.loc 1 551 0
 691 0008 034B     		ldr	r3, .L48
 692 000a 7A68     		ldr	r2, [r7, #4]
 693 000c 0321     		mov	r1, #3
 694 000e 0A40     		and	r2, r1
 695 0010 1A60     		str	r2, [r3]
 552:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 23


 696              		.loc 1 552 0
 697 0012 BD46     		mov	sp, r7
 698 0014 02B0     		add	sp, sp, #8
 699              		@ sp needed
 700 0016 80BD     		pop	{r7, pc}
 701              	.L49:
 702              		.align	2
 703              	.L48:
 704 0018 20003A40 		.word	1077542944
 705              		.cfi_endproc
 706              	.LFE9:
 707              		.size	ADC_SAR_Seq_1_SetChanMask, .-ADC_SAR_Seq_1_SetChanMask
 708              		.section	.text.ADC_SAR_Seq_1_SetLowLimit,"ax",%progbits
 709              		.align	2
 710              		.global	ADC_SAR_Seq_1_SetLowLimit
 711              		.code	16
 712              		.thumb_func
 713              		.type	ADC_SAR_Seq_1_SetLowLimit, %function
 714              	ADC_SAR_Seq_1_SetLowLimit:
 715              	.LFB10:
 553:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 554:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 556:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 557:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_EnableInjection
 559:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 561:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 564:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 566:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 567:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 568:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 569:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 570:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     void ADC_SAR_Seq_1_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 573:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_Seq_1_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 575:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 576:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 578:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 579:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLowLimit
 581:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 583:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 584:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 586:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 589:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 24


 590:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 591:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 592:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 716              		.loc 1 594 0
 717              		.cfi_startproc
 718 0000 80B5     		push	{r7, lr}
 719              		.cfi_def_cfa_offset 8
 720              		.cfi_offset 7, -8
 721              		.cfi_offset 14, -4
 722 0002 82B0     		sub	sp, sp, #8
 723              		.cfi_def_cfa_offset 16
 724 0004 00AF     		add	r7, sp, #0
 725              		.cfi_def_cfa_register 7
 726 0006 7860     		str	r0, [r7, #4]
 595:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 727              		.loc 1 595 0
 728 0008 084B     		ldr	r3, .L51
 729 000a 084A     		ldr	r2, .L51
 730 000c 1268     		ldr	r2, [r2]
 731 000e 120C     		lsr	r2, r2, #16
 732 0010 1204     		lsl	r2, r2, #16
 733 0012 1A60     		str	r2, [r3]
 596:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_1_RANGE_LOW_MASK;
 734              		.loc 1 596 0
 735 0014 054B     		ldr	r3, .L51
 736 0016 054A     		ldr	r2, .L51
 737 0018 1168     		ldr	r1, [r2]
 738 001a 7A68     		ldr	r2, [r7, #4]
 739 001c 1204     		lsl	r2, r2, #16
 740 001e 120C     		lsr	r2, r2, #16
 741 0020 0A43     		orr	r2, r1
 742 0022 1A60     		str	r2, [r3]
 597:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 743              		.loc 1 597 0
 744 0024 BD46     		mov	sp, r7
 745 0026 02B0     		add	sp, sp, #8
 746              		@ sp needed
 747 0028 80BD     		pop	{r7, pc}
 748              	.L52:
 749 002a C046     		.align	2
 750              	.L51:
 751 002c 18003A40 		.word	1077542936
 752              		.cfi_endproc
 753              	.LFE10:
 754              		.size	ADC_SAR_Seq_1_SetLowLimit, .-ADC_SAR_Seq_1_SetLowLimit
 755              		.section	.text.ADC_SAR_Seq_1_SetHighLimit,"ax",%progbits
 756              		.align	2
 757              		.global	ADC_SAR_Seq_1_SetHighLimit
 758              		.code	16
 759              		.thumb_func
 760              		.type	ADC_SAR_Seq_1_SetHighLimit, %function
 761              	ADC_SAR_Seq_1_SetHighLimit:
 762              	.LFB11:
 598:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 599:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 25


 600:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetHighLimit
 602:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 604:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 605:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 607:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 610:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 611:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 612:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 613:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 763              		.loc 1 615 0
 764              		.cfi_startproc
 765 0000 80B5     		push	{r7, lr}
 766              		.cfi_def_cfa_offset 8
 767              		.cfi_offset 7, -8
 768              		.cfi_offset 14, -4
 769 0002 82B0     		sub	sp, sp, #8
 770              		.cfi_def_cfa_offset 16
 771 0004 00AF     		add	r7, sp, #0
 772              		.cfi_def_cfa_register 7
 773 0006 7860     		str	r0, [r7, #4]
 616:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 774              		.loc 1 616 0
 775 0008 074B     		ldr	r3, .L54
 776 000a 074A     		ldr	r2, .L54
 777 000c 1268     		ldr	r2, [r2]
 778 000e 1204     		lsl	r2, r2, #16
 779 0010 120C     		lsr	r2, r2, #16
 780 0012 1A60     		str	r2, [r3]
 617:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_1_RANGE_HIGH_OFFSET);
 781              		.loc 1 617 0
 782 0014 044B     		ldr	r3, .L54
 783 0016 044A     		ldr	r2, .L54
 784 0018 1168     		ldr	r1, [r2]
 785 001a 7A68     		ldr	r2, [r7, #4]
 786 001c 1204     		lsl	r2, r2, #16
 787 001e 0A43     		orr	r2, r1
 788 0020 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 789              		.loc 1 618 0
 790 0022 BD46     		mov	sp, r7
 791 0024 02B0     		add	sp, sp, #8
 792              		@ sp needed
 793 0026 80BD     		pop	{r7, pc}
 794              	.L55:
 795              		.align	2
 796              	.L54:
 797 0028 18003A40 		.word	1077542936
 798              		.cfi_endproc
 799              	.LFE11:
 800              		.size	ADC_SAR_Seq_1_SetHighLimit, .-ADC_SAR_Seq_1_SetHighLimit
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 26


 801              		.section	.text.ADC_SAR_Seq_1_SetLimitMask,"ax",%progbits
 802              		.align	2
 803              		.global	ADC_SAR_Seq_1_SetLimitMask
 804              		.code	16
 805              		.thumb_func
 806              		.type	ADC_SAR_Seq_1_SetLimitMask, %function
 807              	ADC_SAR_Seq_1_SetLimitMask:
 808              	.LFB12:
 619:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 620:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 621:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLimitMask
 623:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 625:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 626:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 628:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 634:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 635:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 636:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 637:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 809              		.loc 1 639 0
 810              		.cfi_startproc
 811 0000 80B5     		push	{r7, lr}
 812              		.cfi_def_cfa_offset 8
 813              		.cfi_offset 7, -8
 814              		.cfi_offset 14, -4
 815 0002 82B0     		sub	sp, sp, #8
 816              		.cfi_def_cfa_offset 16
 817 0004 00AF     		add	r7, sp, #0
 818              		.cfi_def_cfa_register 7
 819 0006 7860     		str	r0, [r7, #4]
 640:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 820              		.loc 1 640 0
 821 0008 034B     		ldr	r3, .L57
 822 000a 7A68     		ldr	r2, [r7, #4]
 823 000c 0321     		mov	r1, #3
 824 000e 0A40     		and	r2, r1
 825 0010 1A60     		str	r2, [r3]
 641:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 826              		.loc 1 641 0
 827 0012 BD46     		mov	sp, r7
 828 0014 02B0     		add	sp, sp, #8
 829              		@ sp needed
 830 0016 80BD     		pop	{r7, pc}
 831              	.L58:
 832              		.align	2
 833              	.L57:
 834 0018 38023A40 		.word	1077543480
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 27


 835              		.cfi_endproc
 836              	.LFE12:
 837              		.size	ADC_SAR_Seq_1_SetLimitMask, .-ADC_SAR_Seq_1_SetLimitMask
 838              		.section	.text.ADC_SAR_Seq_1_SetSatMask,"ax",%progbits
 839              		.align	2
 840              		.global	ADC_SAR_Seq_1_SetSatMask
 841              		.code	16
 842              		.thumb_func
 843              		.type	ADC_SAR_Seq_1_SetSatMask, %function
 844              	ADC_SAR_Seq_1_SetSatMask:
 845              	.LFB13:
 642:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 643:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 644:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetSatMask
 646:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 648:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 649:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 651:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 657:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 658:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 659:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 660:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 846              		.loc 1 662 0
 847              		.cfi_startproc
 848 0000 80B5     		push	{r7, lr}
 849              		.cfi_def_cfa_offset 8
 850              		.cfi_offset 7, -8
 851              		.cfi_offset 14, -4
 852 0002 82B0     		sub	sp, sp, #8
 853              		.cfi_def_cfa_offset 16
 854 0004 00AF     		add	r7, sp, #0
 855              		.cfi_def_cfa_register 7
 856 0006 7860     		str	r0, [r7, #4]
 663:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 857              		.loc 1 663 0
 858 0008 034B     		ldr	r3, .L60
 859 000a 7A68     		ldr	r2, [r7, #4]
 860 000c 0321     		mov	r1, #3
 861 000e 0A40     		and	r2, r1
 862 0010 1A60     		str	r2, [r3]
 664:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 863              		.loc 1 664 0
 864 0012 BD46     		mov	sp, r7
 865 0014 02B0     		add	sp, sp, #8
 866              		@ sp needed
 867 0016 80BD     		pop	{r7, pc}
 868              	.L61:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 28


 869              		.align	2
 870              	.L60:
 871 0018 28023A40 		.word	1077543464
 872              		.cfi_endproc
 873              	.LFE13:
 874              		.size	ADC_SAR_Seq_1_SetSatMask, .-ADC_SAR_Seq_1_SetSatMask
 875              		.section	.text.ADC_SAR_Seq_1_SetOffset,"ax",%progbits
 876              		.align	2
 877              		.global	ADC_SAR_Seq_1_SetOffset
 878              		.code	16
 879              		.thumb_func
 880              		.type	ADC_SAR_Seq_1_SetOffset, %function
 881              	ADC_SAR_Seq_1_SetOffset:
 882              	.LFB14:
 665:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 666:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 667:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetOffset
 669:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 671:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 672:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 677:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 682:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 683:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 684:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 685:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 688:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 883              		.loc 1 690 0
 884              		.cfi_startproc
 885 0000 80B5     		push	{r7, lr}
 886              		.cfi_def_cfa_offset 8
 887              		.cfi_offset 7, -8
 888              		.cfi_offset 14, -4
 889 0002 82B0     		sub	sp, sp, #8
 890              		.cfi_def_cfa_offset 16
 891 0004 00AF     		add	r7, sp, #0
 892              		.cfi_def_cfa_register 7
 893 0006 7860     		str	r0, [r7, #4]
 894 0008 0A1C     		mov	r2, r1
 895 000a BB1C     		add	r3, r7, #2
 896 000c 1A80     		strh	r2, [r3]
 691:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 897              		.loc 1 692 0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 29


 898 000e 7B68     		ldr	r3, [r7, #4]
 899 0010 012B     		cmp	r3, #1
 900 0012 02D9     		bls	.L63
 901              		.loc 1 692 0 is_stmt 0 discriminator 1
 902 0014 0020     		mov	r0, #0
 903 0016 FFF7FEFF 		bl	CyHalt
 904              	.L63:
 693:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 694:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_offset[chan] = offset;
 905              		.loc 1 694 0 is_stmt 1
 906 001a 044B     		ldr	r3, .L64
 907 001c 7A68     		ldr	r2, [r7, #4]
 908 001e 5200     		lsl	r2, r2, #1
 909 0020 B91C     		add	r1, r7, #2
 910 0022 0988     		ldrh	r1, [r1]
 911 0024 D152     		strh	r1, [r2, r3]
 695:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 912              		.loc 1 695 0
 913 0026 BD46     		mov	sp, r7
 914 0028 02B0     		add	sp, sp, #8
 915              		@ sp needed
 916 002a 80BD     		pop	{r7, pc}
 917              	.L65:
 918              		.align	2
 919              	.L64:
 920 002c 00000000 		.word	ADC_SAR_Seq_1_offset
 921              		.cfi_endproc
 922              	.LFE14:
 923              		.size	ADC_SAR_Seq_1_SetOffset, .-ADC_SAR_Seq_1_SetOffset
 924              		.section	.text.ADC_SAR_Seq_1_SetGain,"ax",%progbits
 925              		.align	2
 926              		.global	ADC_SAR_Seq_1_SetGain
 927              		.code	16
 928              		.thumb_func
 929              		.type	ADC_SAR_Seq_1_SetGain, %function
 930              	ADC_SAR_Seq_1_SetGain:
 931              	.LFB15:
 696:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 697:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 698:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetGain
 700:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 702:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 703:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 711:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 715:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 30


 716:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 717:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 718:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 722:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 932              		.loc 1 724 0
 933              		.cfi_startproc
 934 0000 80B5     		push	{r7, lr}
 935              		.cfi_def_cfa_offset 8
 936              		.cfi_offset 7, -8
 937              		.cfi_offset 14, -4
 938 0002 82B0     		sub	sp, sp, #8
 939              		.cfi_def_cfa_offset 16
 940 0004 00AF     		add	r7, sp, #0
 941              		.cfi_def_cfa_register 7
 942 0006 7860     		str	r0, [r7, #4]
 943 0008 3960     		str	r1, [r7]
 725:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 944              		.loc 1 726 0
 945 000a 7B68     		ldr	r3, [r7, #4]
 946 000c 012B     		cmp	r3, #1
 947 000e 02D9     		bls	.L67
 948              		.loc 1 726 0 is_stmt 0 discriminator 1
 949 0010 0020     		mov	r0, #0
 950 0012 FFF7FEFF 		bl	CyHalt
 951              	.L67:
 727:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 728:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_countsPer10Volt[chan] = adcGain;
 952              		.loc 1 728 0 is_stmt 1
 953 0016 044B     		ldr	r3, .L68
 954 0018 7A68     		ldr	r2, [r7, #4]
 955 001a 9200     		lsl	r2, r2, #2
 956 001c 3968     		ldr	r1, [r7]
 957 001e D150     		str	r1, [r2, r3]
 729:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 958              		.loc 1 729 0
 959 0020 BD46     		mov	sp, r7
 960 0022 02B0     		add	sp, sp, #8
 961              		@ sp needed
 962 0024 80BD     		pop	{r7, pc}
 963              	.L69:
 964 0026 C046     		.align	2
 965              	.L68:
 966 0028 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 967              		.cfi_endproc
 968              	.LFE15:
 969              		.size	ADC_SAR_Seq_1_SetGain, .-ADC_SAR_Seq_1_SetGain
 970              		.global	__aeabi_idiv
 971              		.section	.text.ADC_SAR_Seq_1_CountsTo_mVolts,"ax",%progbits
 972              		.align	2
 973              		.global	ADC_SAR_Seq_1_CountsTo_mVolts
 974              		.code	16
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 31


 975              		.thumb_func
 976              		.type	ADC_SAR_Seq_1_CountsTo_mVolts, %function
 977              	ADC_SAR_Seq_1_CountsTo_mVolts:
 978              	.LFB16:
 730:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 731:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 732:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_Seq_1__RIGHT)
 733:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 734:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 735:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 739:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 743:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 747:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 748:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 750:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 755:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int16 ADC_SAR_Seq_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 979              		.loc 1 757 0
 980              		.cfi_startproc
 981 0000 80B5     		push	{r7, lr}
 982              		.cfi_def_cfa_offset 8
 983              		.cfi_offset 7, -8
 984              		.cfi_offset 14, -4
 985 0002 84B0     		sub	sp, sp, #16
 986              		.cfi_def_cfa_offset 24
 987 0004 00AF     		add	r7, sp, #0
 988              		.cfi_def_cfa_register 7
 989 0006 7860     		str	r0, [r7, #4]
 990 0008 0A1C     		mov	r2, r1
 991 000a BB1C     		add	r3, r7, #2
 992 000c 1A80     		strh	r2, [r3]
 758:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 760:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 993              		.loc 1 761 0
 994 000e 7B68     		ldr	r3, [r7, #4]
 995 0010 012B     		cmp	r3, #1
 996 0012 02D9     		bls	.L71
 997              		.loc 1 761 0 is_stmt 0 discriminator 1
 998 0014 0020     		mov	r0, #0
 999 0016 FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 32


 1000              	.L71:
 762:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 763:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 767:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 769:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 771:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 1001              		.loc 1 772 0 is_stmt 1
 1002 001a 1F4B     		ldr	r3, .L77
 1003 001c 7A68     		ldr	r2, [r7, #4]
 1004 001e 5200     		lsl	r2, r2, #1
 1005 0020 D35A     		ldrh	r3, [r2, r3]
 1006 0022 99B2     		uxth	r1, r3
 1007 0024 BB1C     		add	r3, r7, #2
 1008 0026 1A88     		ldrh	r2, [r3]
 1009 0028 8BB2     		uxth	r3, r1
 1010 002a D31A     		sub	r3, r2, r3
 1011 002c 9AB2     		uxth	r2, r3
 1012 002e BB1C     		add	r3, r7, #2
 1013 0030 1A80     		strh	r2, [r3]
 773:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 1014              		.loc 1 774 0
 1015 0032 BB1C     		add	r3, r7, #2
 1016 0034 0022     		mov	r2, #0
 1017 0036 9B5E     		ldrsh	r3, [r3, r2]
 1018 0038 184A     		ldr	r2, .L77+4
 1019 003a 5A43     		mul	r2, r3
 775:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 1020              		.loc 1 775 0
 1021 003c BB1C     		add	r3, r7, #2
 1022 003e 0021     		mov	r1, #0
 1023 0040 5B5E     		ldrsh	r3, [r3, r1]
 1024 0042 002B     		cmp	r3, #0
 1025 0044 08DD     		ble	.L72
 1026              		.loc 1 775 0 is_stmt 0 discriminator 1
 1027 0046 164B     		ldr	r3, .L77+8
 1028 0048 7968     		ldr	r1, [r7, #4]
 1029 004a 8900     		lsl	r1, r1, #2
 1030 004c CB58     		ldr	r3, [r1, r3]
 1031 004e 002B     		cmp	r3, #0
 1032 0050 00DA     		bge	.L73
 1033 0052 0133     		add	r3, r3, #1
 1034              	.L73:
 1035 0054 5B10     		asr	r3, r3, #1
 1036 0056 08E0     		b	.L74
 1037              	.L72:
 1038              		.loc 1 775 0 discriminator 2
 1039 0058 114B     		ldr	r3, .L77+8
 1040 005a 7968     		ldr	r1, [r7, #4]
 1041 005c 8900     		lsl	r1, r1, #2
 1042 005e CB58     		ldr	r3, [r1, r3]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 33


 1043 0060 002B     		cmp	r3, #0
 1044 0062 00DA     		bge	.L75
 1045 0064 0133     		add	r3, r3, #1
 1046              	.L75:
 1047 0066 5B10     		asr	r3, r3, #1
 1048 0068 5B42     		neg	r3, r3
 1049              	.L74:
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 1050              		.loc 1 774 0 is_stmt 1
 1051 006a D118     		add	r1, r2, r3
 776:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  / ADC_SAR_Seq_1_countsPer10Volt[chan]);
 1052              		.loc 1 776 0
 1053 006c 0C4B     		ldr	r3, .L77+8
 1054 006e 7A68     		ldr	r2, [r7, #4]
 1055 0070 9200     		lsl	r2, r2, #2
 1056 0072 D358     		ldr	r3, [r2, r3]
 1057 0074 081C     		mov	r0, r1
 1058 0076 191C     		mov	r1, r3
 1059 0078 FFF7FEFF 		bl	__aeabi_idiv
 1060 007c 031C     		mov	r3, r0
 1061 007e 1A1C     		mov	r2, r3
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 1062              		.loc 1 774 0
 1063 0080 0E23     		mov	r3, #14
 1064 0082 FB18     		add	r3, r7, r3
 1065 0084 1A80     		strh	r2, [r3]
 777:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 778:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( mVolts );
 1066              		.loc 1 778 0
 1067 0086 0E23     		mov	r3, #14
 1068 0088 FB18     		add	r3, r7, r3
 1069 008a 1B88     		ldrh	r3, [r3]
 1070 008c 1BB2     		sxth	r3, r3
 779:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 1071              		.loc 1 779 0
 1072 008e 181C     		mov	r0, r3
 1073 0090 BD46     		mov	sp, r7
 1074 0092 04B0     		add	sp, sp, #16
 1075              		@ sp needed
 1076 0094 80BD     		pop	{r7, pc}
 1077              	.L78:
 1078 0096 C046     		.align	2
 1079              	.L77:
 1080 0098 00000000 		.word	ADC_SAR_Seq_1_offset
 1081 009c 10270000 		.word	10000
 1082 00a0 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 1083              		.cfi_endproc
 1084              	.LFE16:
 1085              		.size	ADC_SAR_Seq_1_CountsTo_mVolts, .-ADC_SAR_Seq_1_CountsTo_mVolts
 1086              		.global	__aeabi_lmul
 1087              		.global	__aeabi_ldivmod
 1088              		.section	.text.ADC_SAR_Seq_1_CountsTo_uVolts,"ax",%progbits
 1089              		.align	2
 1090              		.global	ADC_SAR_Seq_1_CountsTo_uVolts
 1091              		.code	16
 1092              		.thumb_func
 1093              		.type	ADC_SAR_Seq_1_CountsTo_uVolts, %function
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 34


 1094              	ADC_SAR_Seq_1_CountsTo_uVolts:
 1095              	.LFB17:
 780:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 781:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 782:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 786:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 790:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 794:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 795:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 797:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 802:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 809:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 ADC_SAR_Seq_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 1096              		.loc 1 811 0
 1097              		.cfi_startproc
 1098 0000 B0B5     		push	{r4, r5, r7, lr}
 1099              		.cfi_def_cfa_offset 16
 1100              		.cfi_offset 4, -16
 1101              		.cfi_offset 5, -12
 1102              		.cfi_offset 7, -8
 1103              		.cfi_offset 14, -4
 1104 0002 86B0     		sub	sp, sp, #24
 1105              		.cfi_def_cfa_offset 40
 1106 0004 00AF     		add	r7, sp, #0
 1107              		.cfi_def_cfa_register 7
 1108 0006 F860     		str	r0, [r7, #12]
 1109 0008 0A1C     		mov	r2, r1
 1110 000a 0A23     		mov	r3, #10
 1111 000c FB18     		add	r3, r7, r3
 1112 000e 1A80     		strh	r2, [r3]
 812:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 814:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 1113              		.loc 1 815 0
 1114 0010 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 35


 1115 0012 012B     		cmp	r3, #1
 1116 0014 02D9     		bls	.L80
 1117              		.loc 1 815 0 is_stmt 0 discriminator 1
 1118 0016 0020     		mov	r0, #0
 1119 0018 FFF7FEFF 		bl	CyHalt
 1120              	.L80:
 816:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 817:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 821:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 823:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 825:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 1121              		.loc 1 826 0 is_stmt 1
 1122 001c 194B     		ldr	r3, .L82
 1123 001e FA68     		ldr	r2, [r7, #12]
 1124 0020 5200     		lsl	r2, r2, #1
 1125 0022 D35A     		ldrh	r3, [r2, r3]
 1126 0024 99B2     		uxth	r1, r3
 1127 0026 0A23     		mov	r3, #10
 1128 0028 FB18     		add	r3, r7, r3
 1129 002a 1A88     		ldrh	r2, [r3]
 1130 002c 8BB2     		uxth	r3, r1
 1131 002e D31A     		sub	r3, r2, r3
 1132 0030 9AB2     		uxth	r2, r3
 1133 0032 0A23     		mov	r3, #10
 1134 0034 FB18     		add	r3, r7, r3
 1135 0036 1A80     		strh	r2, [r3]
 827:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 828:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         uVolts = ((int64)adcCounts * ADC_SAR_Seq_1_10UV_COUNTS) / ADC_SAR_Seq_1_countsPer10Volt[cha
 1136              		.loc 1 828 0
 1137 0038 0A23     		mov	r3, #10
 1138 003a FB18     		add	r3, r7, r3
 1139 003c 1B88     		ldrh	r3, [r3]
 1140 003e 1BB2     		sxth	r3, r3
 1141 0040 3B60     		str	r3, [r7]
 1142 0042 DB17     		asr	r3, r3, #31
 1143 0044 7B60     		str	r3, [r7, #4]
 1144 0046 3868     		ldr	r0, [r7]
 1145 0048 7968     		ldr	r1, [r7, #4]
 1146 004a 0F4A     		ldr	r2, .L82+4
 1147 004c 0023     		mov	r3, #0
 1148 004e FFF7FEFF 		bl	__aeabi_lmul
 1149 0052 021C     		mov	r2, r0
 1150 0054 0B1C     		mov	r3, r1
 1151 0056 101C     		mov	r0, r2
 1152 0058 191C     		mov	r1, r3
 1153 005a 0C4B     		ldr	r3, .L82+8
 1154 005c FA68     		ldr	r2, [r7, #12]
 1155 005e 9200     		lsl	r2, r2, #2
 1156 0060 D358     		ldr	r3, [r2, r3]
 1157 0062 1C1C     		mov	r4, r3
 1158 0064 DB17     		asr	r3, r3, #31
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 36


 1159 0066 1D1C     		mov	r5, r3
 1160 0068 221C     		mov	r2, r4
 1161 006a 2B1C     		mov	r3, r5
 1162 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1163 0070 031C     		mov	r3, r0
 1164 0072 0C1C     		mov	r4, r1
 1165 0074 3B61     		str	r3, [r7, #16]
 1166 0076 7C61     		str	r4, [r7, #20]
 829:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 830:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( (int32)uVolts );
 1167              		.loc 1 830 0
 1168 0078 3B69     		ldr	r3, [r7, #16]
 831:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 1169              		.loc 1 831 0
 1170 007a 181C     		mov	r0, r3
 1171 007c BD46     		mov	sp, r7
 1172 007e 06B0     		add	sp, sp, #24
 1173              		@ sp needed
 1174 0080 B0BD     		pop	{r4, r5, r7, pc}
 1175              	.L83:
 1176 0082 C046     		.align	2
 1177              	.L82:
 1178 0084 00000000 		.word	ADC_SAR_Seq_1_offset
 1179 0088 80969800 		.word	10000000
 1180 008c 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 1181              		.cfi_endproc
 1182              	.LFE17:
 1183              		.size	ADC_SAR_Seq_1_CountsTo_uVolts, .-ADC_SAR_Seq_1_CountsTo_uVolts
 1184              		.global	__aeabi_i2f
 1185              		.global	__aeabi_fmul
 1186              		.global	__aeabi_fdiv
 1187              		.section	.text.ADC_SAR_Seq_1_CountsTo_Volts,"ax",%progbits
 1188              		.align	2
 1189              		.global	ADC_SAR_Seq_1_CountsTo_Volts
 1190              		.code	16
 1191              		.thumb_func
 1192              		.type	ADC_SAR_Seq_1_CountsTo_Volts, %function
 1193              	ADC_SAR_Seq_1_CountsTo_Volts:
 1194              	.LFB18:
 832:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 833:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 834:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 838:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 842:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 846:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 847:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 849:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 37


 850:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 854:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     float32 ADC_SAR_Seq_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 1195              		.loc 1 856 0
 1196              		.cfi_startproc
 1197 0000 90B5     		push	{r4, r7, lr}
 1198              		.cfi_def_cfa_offset 12
 1199              		.cfi_offset 4, -12
 1200              		.cfi_offset 7, -8
 1201              		.cfi_offset 14, -4
 1202 0002 85B0     		sub	sp, sp, #20
 1203              		.cfi_def_cfa_offset 32
 1204 0004 00AF     		add	r7, sp, #0
 1205              		.cfi_def_cfa_register 7
 1206 0006 7860     		str	r0, [r7, #4]
 1207 0008 0A1C     		mov	r2, r1
 1208 000a BB1C     		add	r3, r7, #2
 1209 000c 1A80     		strh	r2, [r3]
 857:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 859:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 1210              		.loc 1 860 0
 1211 000e 7B68     		ldr	r3, [r7, #4]
 1212 0010 012B     		cmp	r3, #1
 1213 0012 02D9     		bls	.L85
 1214              		.loc 1 860 0 is_stmt 0 discriminator 1
 1215 0014 0020     		mov	r0, #0
 1216 0016 FFF7FEFF 		bl	CyHalt
 1217              	.L85:
 861:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 862:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 866:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 868:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 870:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 1218              		.loc 1 871 0 is_stmt 1
 1219 001a 164B     		ldr	r3, .L87
 1220 001c 7A68     		ldr	r2, [r7, #4]
 1221 001e 5200     		lsl	r2, r2, #1
 1222 0020 D35A     		ldrh	r3, [r2, r3]
 1223 0022 99B2     		uxth	r1, r3
 1224 0024 BB1C     		add	r3, r7, #2
 1225 0026 1A88     		ldrh	r2, [r3]
 1226 0028 8BB2     		uxth	r3, r1
 1227 002a D31A     		sub	r3, r2, r3
 1228 002c 9AB2     		uxth	r2, r3
 1229 002e BB1C     		add	r3, r7, #2
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 38


 1230 0030 1A80     		strh	r2, [r3]
 872:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 873:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         volts = ((float32)adcCounts * ADC_SAR_Seq_1_10V_COUNTS) / (float32)ADC_SAR_Seq_1_countsPer1
 1231              		.loc 1 873 0
 1232 0032 BB1C     		add	r3, r7, #2
 1233 0034 0022     		mov	r2, #0
 1234 0036 9B5E     		ldrsh	r3, [r3, r2]
 1235 0038 181C     		mov	r0, r3
 1236 003a FFF7FEFF 		bl	__aeabi_i2f
 1237 003e 031C     		add	r3, r0, #0
 1238 0040 181C     		add	r0, r3, #0
 1239 0042 0D49     		ldr	r1, .L87+4
 1240 0044 FFF7FEFF 		bl	__aeabi_fmul
 1241 0048 031C     		add	r3, r0, #0
 1242 004a 1C1C     		add	r4, r3, #0
 1243 004c 0B4B     		ldr	r3, .L87+8
 1244 004e 7A68     		ldr	r2, [r7, #4]
 1245 0050 9200     		lsl	r2, r2, #2
 1246 0052 D358     		ldr	r3, [r2, r3]
 1247 0054 181C     		mov	r0, r3
 1248 0056 FFF7FEFF 		bl	__aeabi_i2f
 1249 005a 031C     		add	r3, r0, #0
 1250 005c 201C     		add	r0, r4, #0
 1251 005e 191C     		add	r1, r3, #0
 1252 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1253 0064 031C     		add	r3, r0, #0
 1254 0066 FB60     		str	r3, [r7, #12]
 874:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 875:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( volts );
 1255              		.loc 1 875 0
 1256 0068 FB68     		ldr	r3, [r7, #12]
 876:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 1257              		.loc 1 876 0
 1258 006a 181C     		add	r0, r3, #0
 1259 006c BD46     		mov	sp, r7
 1260 006e 05B0     		add	sp, sp, #20
 1261              		@ sp needed
 1262 0070 90BD     		pop	{r4, r7, pc}
 1263              	.L88:
 1264 0072 C046     		.align	2
 1265              	.L87:
 1266 0074 00000000 		.word	ADC_SAR_Seq_1_offset
 1267 0078 00002041 		.word	1092616192
 1268 007c 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 1269              		.cfi_endproc
 1270              	.LFE18:
 1271              		.size	ADC_SAR_Seq_1_CountsTo_Volts, .-ADC_SAR_Seq_1_CountsTo_Volts
 1272              		.section	.rodata
 1273              		.align	2
 1274              		.type	ADC_SAR_Seq_1_InputsPlacement.4852, %object
 1275              		.size	ADC_SAR_Seq_1_InputsPlacement.4852, 2
 1276              	ADC_SAR_Seq_1_InputsPlacement.4852:
 1277 0008 04       		.byte	4
 1278 0009 06       		.byte	6
 1279 000a 0000     		.text
 1280              	.Letext0:
 1281              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 39


 1282              		.section	.debug_info,"",%progbits
 1283              	.Ldebug_info0:
 1284 0000 9D040000 		.4byte	0x49d
 1285 0004 0400     		.2byte	0x4
 1286 0006 00000000 		.4byte	.Ldebug_abbrev0
 1287 000a 04       		.byte	0x4
 1288 000b 01       		.uleb128 0x1
 1289 000c FC030000 		.4byte	.LASF60
 1290 0010 01       		.byte	0x1
 1291 0011 6C020000 		.4byte	.LASF61
 1292 0015 45030000 		.4byte	.LASF62
 1293 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1294 001d 00000000 		.4byte	0
 1295 0021 00000000 		.4byte	.Ldebug_line0
 1296 0025 02       		.uleb128 0x2
 1297 0026 01       		.byte	0x1
 1298 0027 06       		.byte	0x6
 1299 0028 F8000000 		.4byte	.LASF0
 1300 002c 02       		.uleb128 0x2
 1301 002d 01       		.byte	0x1
 1302 002e 08       		.byte	0x8
 1303 002f CC020000 		.4byte	.LASF1
 1304 0033 02       		.uleb128 0x2
 1305 0034 02       		.byte	0x2
 1306 0035 05       		.byte	0x5
 1307 0036 DA020000 		.4byte	.LASF2
 1308 003a 02       		.uleb128 0x2
 1309 003b 02       		.byte	0x2
 1310 003c 07       		.byte	0x7
 1311 003d D7010000 		.4byte	.LASF3
 1312 0041 02       		.uleb128 0x2
 1313 0042 04       		.byte	0x4
 1314 0043 05       		.byte	0x5
 1315 0044 43010000 		.4byte	.LASF4
 1316 0048 02       		.uleb128 0x2
 1317 0049 04       		.byte	0x4
 1318 004a 07       		.byte	0x7
 1319 004b B5010000 		.4byte	.LASF5
 1320 004f 02       		.uleb128 0x2
 1321 0050 08       		.byte	0x8
 1322 0051 05       		.byte	0x5
 1323 0052 EA000000 		.4byte	.LASF6
 1324 0056 02       		.uleb128 0x2
 1325 0057 08       		.byte	0x8
 1326 0058 07       		.byte	0x7
 1327 0059 86000000 		.4byte	.LASF7
 1328 005d 03       		.uleb128 0x3
 1329 005e 04       		.byte	0x4
 1330 005f 05       		.byte	0x5
 1331 0060 696E7400 		.ascii	"int\000"
 1332 0064 02       		.uleb128 0x2
 1333 0065 04       		.byte	0x4
 1334 0066 07       		.byte	0x7
 1335 0067 A1010000 		.4byte	.LASF8
 1336 006b 04       		.uleb128 0x4
 1337 006c 4C010000 		.4byte	.LASF9
 1338 0070 02       		.byte	0x2
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 40


 1339 0071 B901     		.2byte	0x1b9
 1340 0073 2C000000 		.4byte	0x2c
 1341 0077 04       		.uleb128 0x4
 1342 0078 15000000 		.4byte	.LASF10
 1343 007c 02       		.byte	0x2
 1344 007d BA01     		.2byte	0x1ba
 1345 007f 3A000000 		.4byte	0x3a
 1346 0083 04       		.uleb128 0x4
 1347 0084 59010000 		.4byte	.LASF11
 1348 0088 02       		.byte	0x2
 1349 0089 BB01     		.2byte	0x1bb
 1350 008b 48000000 		.4byte	0x48
 1351 008f 04       		.uleb128 0x4
 1352 0090 F6030000 		.4byte	.LASF12
 1353 0094 02       		.byte	0x2
 1354 0095 BD01     		.2byte	0x1bd
 1355 0097 33000000 		.4byte	0x33
 1356 009b 04       		.uleb128 0x4
 1357 009c 1F010000 		.4byte	.LASF13
 1358 00a0 02       		.byte	0x2
 1359 00a1 BE01     		.2byte	0x1be
 1360 00a3 41000000 		.4byte	0x41
 1361 00a7 04       		.uleb128 0x4
 1362 00a8 14020000 		.4byte	.LASF14
 1363 00ac 02       		.byte	0x2
 1364 00ad BF01     		.2byte	0x1bf
 1365 00af B3000000 		.4byte	0xb3
 1366 00b3 02       		.uleb128 0x2
 1367 00b4 04       		.byte	0x4
 1368 00b5 04       		.byte	0x4
 1369 00b6 93020000 		.4byte	.LASF15
 1370 00ba 02       		.uleb128 0x2
 1371 00bb 08       		.byte	0x8
 1372 00bc 04       		.byte	0x4
 1373 00bd 52010000 		.4byte	.LASF16
 1374 00c1 04       		.uleb128 0x4
 1375 00c2 66020000 		.4byte	.LASF17
 1376 00c6 02       		.byte	0x2
 1377 00c7 C401     		.2byte	0x1c4
 1378 00c9 4F000000 		.4byte	0x4f
 1379 00cd 02       		.uleb128 0x2
 1380 00ce 01       		.byte	0x1
 1381 00cf 08       		.byte	0x8
 1382 00d0 26030000 		.4byte	.LASF18
 1383 00d4 04       		.uleb128 0x4
 1384 00d5 0E020000 		.4byte	.LASF19
 1385 00d9 02       		.byte	0x2
 1386 00da 6502     		.2byte	0x265
 1387 00dc E0000000 		.4byte	0xe0
 1388 00e0 05       		.uleb128 0x5
 1389 00e1 83000000 		.4byte	0x83
 1390 00e5 02       		.uleb128 0x2
 1391 00e6 04       		.byte	0x4
 1392 00e7 07       		.byte	0x7
 1393 00e8 1C020000 		.4byte	.LASF20
 1394 00ec 06       		.uleb128 0x6
 1395 00ed 72000000 		.4byte	.LASF25
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 41


 1396 00f1 01       		.byte	0x1
 1397 00f2 3F       		.byte	0x3f
 1398 00f3 00000000 		.4byte	.LFB1
 1399 00f7 24000000 		.4byte	.LFE1-.LFB1
 1400 00fb 01       		.uleb128 0x1
 1401 00fc 9C       		.byte	0x9c
 1402 00fd 07       		.uleb128 0x7
 1403 00fe 1C000000 		.4byte	.LASF36
 1404 0102 01       		.byte	0x1
 1405 0103 5E       		.byte	0x5e
 1406 0104 00000000 		.4byte	.LFB2
 1407 0108 0C020000 		.4byte	.LFE2-.LFB2
 1408 010c 01       		.uleb128 0x1
 1409 010d 9C       		.byte	0x9c
 1410 010e 4E010000 		.4byte	0x14e
 1411 0112 08       		.uleb128 0x8
 1412 0113 1B030000 		.4byte	.LASF21
 1413 0117 01       		.byte	0x1
 1414 0118 60       		.byte	0x60
 1415 0119 83000000 		.4byte	0x83
 1416 011d 02       		.uleb128 0x2
 1417 011e 91       		.byte	0x91
 1418 011f 74       		.sleb128 -12
 1419 0120 08       		.uleb128 0x8
 1420 0121 CD010000 		.4byte	.LASF22
 1421 0125 01       		.byte	0x1
 1422 0126 61       		.byte	0x61
 1423 0127 83000000 		.4byte	0x83
 1424 012b 02       		.uleb128 0x2
 1425 012c 91       		.byte	0x91
 1426 012d 6C       		.sleb128 -20
 1427 012e 08       		.uleb128 0x8
 1428 012f 37000000 		.4byte	.LASF23
 1429 0133 01       		.byte	0x1
 1430 0134 62       		.byte	0x62
 1431 0135 9B000000 		.4byte	0x9b
 1432 0139 02       		.uleb128 0x2
 1433 013a 91       		.byte	0x91
 1434 013b 70       		.sleb128 -16
 1435 013c 08       		.uleb128 0x8
 1436 013d B2000000 		.4byte	.LASF24
 1437 0141 01       		.byte	0x1
 1438 0142 65       		.byte	0x65
 1439 0143 5E010000 		.4byte	0x15e
 1440 0147 05       		.uleb128 0x5
 1441 0148 03       		.byte	0x3
 1442 0149 08000000 		.4byte	ADC_SAR_Seq_1_InputsPlacement.4852
 1443 014d 00       		.byte	0
 1444 014e 09       		.uleb128 0x9
 1445 014f 6B000000 		.4byte	0x6b
 1446 0153 5E010000 		.4byte	0x15e
 1447 0157 0A       		.uleb128 0xa
 1448 0158 E5000000 		.4byte	0xe5
 1449 015c 01       		.byte	0x1
 1450 015d 00       		.byte	0
 1451 015e 0B       		.uleb128 0xb
 1452 015f 4E010000 		.4byte	0x14e
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 42


 1453 0163 0C       		.uleb128 0xc
 1454 0164 9D000000 		.4byte	.LASF26
 1455 0168 01       		.byte	0x1
 1456 0169 4A01     		.2byte	0x14a
 1457 016b 00000000 		.4byte	.LFB3
 1458 016f 38000000 		.4byte	.LFE3-.LFB3
 1459 0173 01       		.uleb128 0x1
 1460 0174 9C       		.byte	0x9c
 1461 0175 0D       		.uleb128 0xd
 1462 0176 AF020000 		.4byte	.LASF27
 1463 017a 01       		.byte	0x1
 1464 017b 6D01     		.2byte	0x16d
 1465 017d 00000000 		.4byte	.LFB4
 1466 0181 18000000 		.4byte	.LFE4-.LFB4
 1467 0185 01       		.uleb128 0x1
 1468 0186 9C       		.byte	0x9c
 1469 0187 0D       		.uleb128 0xd
 1470 0188 3E000000 		.4byte	.LASF28
 1471 018c 01       		.byte	0x1
 1472 018d 8701     		.2byte	0x187
 1473 018f 00000000 		.4byte	.LFB5
 1474 0193 1C000000 		.4byte	.LFE5-.LFB5
 1475 0197 01       		.uleb128 0x1
 1476 0198 9C       		.byte	0x9c
 1477 0199 0D       		.uleb128 0xd
 1478 019a 4C020000 		.4byte	.LASF29
 1479 019e 01       		.byte	0x1
 1480 019f A001     		.2byte	0x1a0
 1481 01a1 00000000 		.4byte	.LFB6
 1482 01a5 1C000000 		.4byte	.LFE6-.LFB6
 1483 01a9 01       		.uleb128 0x1
 1484 01aa 9C       		.byte	0x9c
 1485 01ab 0E       		.uleb128 0xe
 1486 01ac 2E020000 		.4byte	.LASF31
 1487 01b0 01       		.byte	0x1
 1488 01b1 C201     		.2byte	0x1c2
 1489 01b3 83000000 		.4byte	0x83
 1490 01b7 00000000 		.4byte	.LFB7
 1491 01bb 48000000 		.4byte	.LFE7-.LFB7
 1492 01bf 01       		.uleb128 0x1
 1493 01c0 9C       		.byte	0x9c
 1494 01c1 E4010000 		.4byte	0x1e4
 1495 01c5 0F       		.uleb128 0xf
 1496 01c6 83010000 		.4byte	.LASF33
 1497 01ca 01       		.byte	0x1
 1498 01cb C201     		.2byte	0x1c2
 1499 01cd 83000000 		.4byte	0x83
 1500 01d1 02       		.uleb128 0x2
 1501 01d2 91       		.byte	0x91
 1502 01d3 6C       		.sleb128 -20
 1503 01d4 10       		.uleb128 0x10
 1504 01d5 D7030000 		.4byte	.LASF30
 1505 01d9 01       		.byte	0x1
 1506 01da C401     		.2byte	0x1c4
 1507 01dc 83000000 		.4byte	0x83
 1508 01e0 02       		.uleb128 0x2
 1509 01e1 91       		.byte	0x91
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 43


 1510 01e2 74       		.sleb128 -12
 1511 01e3 00       		.byte	0
 1512 01e4 11       		.uleb128 0x11
 1513 01e5 D0000000 		.4byte	.LASF32
 1514 01e9 01       		.byte	0x1
 1515 01ea F801     		.2byte	0x1f8
 1516 01ec 8F000000 		.4byte	0x8f
 1517 01f0 00000000 		.4byte	.LFB8
 1518 01f4 44000000 		.4byte	.LFE8-.LFB8
 1519 01f8 01       		.uleb128 0x1
 1520 01f9 9C       		.byte	0x9c
 1521 01fa 1D020000 		.4byte	0x21d
 1522 01fe 0F       		.uleb128 0xf
 1523 01ff 21030000 		.4byte	.LASF34
 1524 0203 01       		.byte	0x1
 1525 0204 F801     		.2byte	0x1f8
 1526 0206 83000000 		.4byte	0x83
 1527 020a 02       		.uleb128 0x2
 1528 020b 91       		.byte	0x91
 1529 020c 6C       		.sleb128 -20
 1530 020d 10       		.uleb128 0x10
 1531 020e A5040000 		.4byte	.LASF35
 1532 0212 01       		.byte	0x1
 1533 0213 FA01     		.2byte	0x1fa
 1534 0215 83000000 		.4byte	0x83
 1535 0219 02       		.uleb128 0x2
 1536 021a 91       		.byte	0x91
 1537 021b 74       		.sleb128 -12
 1538 021c 00       		.byte	0
 1539 021d 12       		.uleb128 0x12
 1540 021e 01030000 		.4byte	.LASF37
 1541 0222 01       		.byte	0x1
 1542 0223 2502     		.2byte	0x225
 1543 0225 00000000 		.4byte	.LFB9
 1544 0229 1C000000 		.4byte	.LFE9-.LFB9
 1545 022d 01       		.uleb128 0x1
 1546 022e 9C       		.byte	0x9c
 1547 022f 43020000 		.4byte	0x243
 1548 0233 0F       		.uleb128 0xf
 1549 0234 60010000 		.4byte	.LASF38
 1550 0238 01       		.byte	0x1
 1551 0239 2502     		.2byte	0x225
 1552 023b 83000000 		.4byte	0x83
 1553 023f 02       		.uleb128 0x2
 1554 0240 91       		.byte	0x91
 1555 0241 74       		.sleb128 -12
 1556 0242 00       		.byte	0
 1557 0243 12       		.uleb128 0x12
 1558 0244 2B030000 		.4byte	.LASF39
 1559 0248 01       		.byte	0x1
 1560 0249 5102     		.2byte	0x251
 1561 024b 00000000 		.4byte	.LFB10
 1562 024f 30000000 		.4byte	.LFE10-.LFB10
 1563 0253 01       		.uleb128 0x1
 1564 0254 9C       		.byte	0x9c
 1565 0255 69020000 		.4byte	0x269
 1566 0259 0F       		.uleb128 0xf
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 44


 1567 025a 25020000 		.4byte	.LASF40
 1568 025e 01       		.byte	0x1
 1569 025f 5102     		.2byte	0x251
 1570 0261 83000000 		.4byte	0x83
 1571 0265 02       		.uleb128 0x2
 1572 0266 91       		.byte	0x91
 1573 0267 74       		.sleb128 -12
 1574 0268 00       		.byte	0
 1575 0269 12       		.uleb128 0x12
 1576 026a 04010000 		.4byte	.LASF41
 1577 026e 01       		.byte	0x1
 1578 026f 6602     		.2byte	0x266
 1579 0271 00000000 		.4byte	.LFB11
 1580 0275 2C000000 		.4byte	.LFE11-.LFB11
 1581 0279 01       		.uleb128 0x1
 1582 027a 9C       		.byte	0x9c
 1583 027b 8F020000 		.4byte	0x28f
 1584 027f 0F       		.uleb128 0xf
 1585 0280 C2020000 		.4byte	.LASF42
 1586 0284 01       		.byte	0x1
 1587 0285 6602     		.2byte	0x266
 1588 0287 83000000 		.4byte	0x83
 1589 028b 02       		.uleb128 0x2
 1590 028c 91       		.byte	0x91
 1591 028d 74       		.sleb128 -12
 1592 028e 00       		.byte	0
 1593 028f 12       		.uleb128 0x12
 1594 0290 8A040000 		.4byte	.LASF43
 1595 0294 01       		.byte	0x1
 1596 0295 7E02     		.2byte	0x27e
 1597 0297 00000000 		.4byte	.LFB12
 1598 029b 1C000000 		.4byte	.LFE12-.LFB12
 1599 029f 01       		.uleb128 0x1
 1600 02a0 9C       		.byte	0x9c
 1601 02a1 B5020000 		.4byte	0x2b5
 1602 02a5 0F       		.uleb128 0xf
 1603 02a6 60010000 		.4byte	.LASF38
 1604 02aa 01       		.byte	0x1
 1605 02ab 7E02     		.2byte	0x27e
 1606 02ad 83000000 		.4byte	0x83
 1607 02b1 02       		.uleb128 0x2
 1608 02b2 91       		.byte	0x91
 1609 02b3 74       		.sleb128 -12
 1610 02b4 00       		.byte	0
 1611 02b5 12       		.uleb128 0x12
 1612 02b6 59000000 		.4byte	.LASF44
 1613 02ba 01       		.byte	0x1
 1614 02bb 9502     		.2byte	0x295
 1615 02bd 00000000 		.4byte	.LFB13
 1616 02c1 1C000000 		.4byte	.LFE13-.LFB13
 1617 02c5 01       		.uleb128 0x1
 1618 02c6 9C       		.byte	0x9c
 1619 02c7 DB020000 		.4byte	0x2db
 1620 02cb 0F       		.uleb128 0xf
 1621 02cc 60010000 		.4byte	.LASF38
 1622 02d0 01       		.byte	0x1
 1623 02d1 9502     		.2byte	0x295
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 45


 1624 02d3 83000000 		.4byte	0x83
 1625 02d7 02       		.uleb128 0x2
 1626 02d8 91       		.byte	0x91
 1627 02d9 74       		.sleb128 -12
 1628 02da 00       		.byte	0
 1629 02db 13       		.uleb128 0x13
 1630 02dc DE030000 		.4byte	.LASF45
 1631 02e0 01       		.byte	0x1
 1632 02e1 B102     		.2byte	0x2b1
 1633 02e3 00000000 		.4byte	.LFB14
 1634 02e7 30000000 		.4byte	.LFE14-.LFB14
 1635 02eb 01       		.uleb128 0x1
 1636 02ec 9C       		.byte	0x9c
 1637 02ed 10030000 		.4byte	0x310
 1638 02f1 0F       		.uleb128 0xf
 1639 02f2 21030000 		.4byte	.LASF34
 1640 02f6 01       		.byte	0x1
 1641 02f7 B102     		.2byte	0x2b1
 1642 02f9 83000000 		.4byte	0x83
 1643 02fd 02       		.uleb128 0x2
 1644 02fe 91       		.byte	0x91
 1645 02ff 74       		.sleb128 -12
 1646 0300 0F       		.uleb128 0xf
 1647 0301 A8030000 		.4byte	.LASF46
 1648 0305 01       		.byte	0x1
 1649 0306 B102     		.2byte	0x2b1
 1650 0308 8F000000 		.4byte	0x8f
 1651 030c 02       		.uleb128 0x2
 1652 030d 91       		.byte	0x91
 1653 030e 72       		.sleb128 -14
 1654 030f 00       		.byte	0
 1655 0310 13       		.uleb128 0x13
 1656 0311 99020000 		.4byte	.LASF47
 1657 0315 01       		.byte	0x1
 1658 0316 D302     		.2byte	0x2d3
 1659 0318 00000000 		.4byte	.LFB15
 1660 031c 2C000000 		.4byte	.LFE15-.LFB15
 1661 0320 01       		.uleb128 0x1
 1662 0321 9C       		.byte	0x9c
 1663 0322 45030000 		.4byte	0x345
 1664 0326 0F       		.uleb128 0xf
 1665 0327 21030000 		.4byte	.LASF34
 1666 032b 01       		.byte	0x1
 1667 032c D302     		.2byte	0x2d3
 1668 032e 83000000 		.4byte	0x83
 1669 0332 02       		.uleb128 0x2
 1670 0333 91       		.byte	0x91
 1671 0334 74       		.sleb128 -12
 1672 0335 0F       		.uleb128 0xf
 1673 0336 2F000000 		.4byte	.LASF48
 1674 033a 01       		.byte	0x1
 1675 033b D302     		.2byte	0x2d3
 1676 033d 9B000000 		.4byte	0x9b
 1677 0341 02       		.uleb128 0x2
 1678 0342 91       		.byte	0x91
 1679 0343 70       		.sleb128 -16
 1680 0344 00       		.byte	0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 46


 1681 0345 11       		.uleb128 0x11
 1682 0346 65010000 		.4byte	.LASF49
 1683 034a 01       		.byte	0x1
 1684 034b F402     		.2byte	0x2f4
 1685 034d 8F000000 		.4byte	0x8f
 1686 0351 00000000 		.4byte	.LFB16
 1687 0355 A4000000 		.4byte	.LFE16-.LFB16
 1688 0359 01       		.uleb128 0x1
 1689 035a 9C       		.byte	0x9c
 1690 035b 8D030000 		.4byte	0x38d
 1691 035f 0F       		.uleb128 0xf
 1692 0360 21030000 		.4byte	.LASF34
 1693 0364 01       		.byte	0x1
 1694 0365 F402     		.2byte	0x2f4
 1695 0367 83000000 		.4byte	0x83
 1696 036b 02       		.uleb128 0x2
 1697 036c 91       		.byte	0x91
 1698 036d 6C       		.sleb128 -20
 1699 036e 0F       		.uleb128 0xf
 1700 036f AF030000 		.4byte	.LASF50
 1701 0373 01       		.byte	0x1
 1702 0374 F402     		.2byte	0x2f4
 1703 0376 8F000000 		.4byte	0x8f
 1704 037a 02       		.uleb128 0x2
 1705 037b 91       		.byte	0x91
 1706 037c 6A       		.sleb128 -22
 1707 037d 10       		.uleb128 0x10
 1708 037e 07020000 		.4byte	.LASF51
 1709 0382 01       		.byte	0x1
 1710 0383 F602     		.2byte	0x2f6
 1711 0385 8F000000 		.4byte	0x8f
 1712 0389 02       		.uleb128 0x2
 1713 038a 91       		.byte	0x91
 1714 038b 76       		.sleb128 -10
 1715 038c 00       		.byte	0
 1716 038d 11       		.uleb128 0x11
 1717 038e 25010000 		.4byte	.LASF52
 1718 0392 01       		.byte	0x1
 1719 0393 2A03     		.2byte	0x32a
 1720 0395 9B000000 		.4byte	0x9b
 1721 0399 00000000 		.4byte	.LFB17
 1722 039d 90000000 		.4byte	.LFE17-.LFB17
 1723 03a1 01       		.uleb128 0x1
 1724 03a2 9C       		.byte	0x9c
 1725 03a3 D5030000 		.4byte	0x3d5
 1726 03a7 0F       		.uleb128 0xf
 1727 03a8 21030000 		.4byte	.LASF34
 1728 03ac 01       		.byte	0x1
 1729 03ad 2A03     		.2byte	0x32a
 1730 03af 83000000 		.4byte	0x83
 1731 03b3 02       		.uleb128 0x2
 1732 03b4 91       		.byte	0x91
 1733 03b5 64       		.sleb128 -28
 1734 03b6 0F       		.uleb128 0xf
 1735 03b7 AF030000 		.4byte	.LASF50
 1736 03bb 01       		.byte	0x1
 1737 03bc 2A03     		.2byte	0x32a
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 47


 1738 03be 8F000000 		.4byte	0x8f
 1739 03c2 02       		.uleb128 0x2
 1740 03c3 91       		.byte	0x91
 1741 03c4 62       		.sleb128 -30
 1742 03c5 10       		.uleb128 0x10
 1743 03c6 AE010000 		.4byte	.LASF53
 1744 03ca 01       		.byte	0x1
 1745 03cb 2C03     		.2byte	0x32c
 1746 03cd C1000000 		.4byte	0xc1
 1747 03d1 02       		.uleb128 0x2
 1748 03d2 91       		.byte	0x91
 1749 03d3 68       		.sleb128 -24
 1750 03d4 00       		.byte	0
 1751 03d5 11       		.uleb128 0x11
 1752 03d6 E4020000 		.4byte	.LASF54
 1753 03da 01       		.byte	0x1
 1754 03db 5703     		.2byte	0x357
 1755 03dd A7000000 		.4byte	0xa7
 1756 03e1 00000000 		.4byte	.LFB18
 1757 03e5 80000000 		.4byte	.LFE18-.LFB18
 1758 03e9 01       		.uleb128 0x1
 1759 03ea 9C       		.byte	0x9c
 1760 03eb 1D040000 		.4byte	0x41d
 1761 03ef 0F       		.uleb128 0xf
 1762 03f0 21030000 		.4byte	.LASF34
 1763 03f4 01       		.byte	0x1
 1764 03f5 5703     		.2byte	0x357
 1765 03f7 83000000 		.4byte	0x83
 1766 03fb 02       		.uleb128 0x2
 1767 03fc 91       		.byte	0x91
 1768 03fd 64       		.sleb128 -28
 1769 03fe 0F       		.uleb128 0xf
 1770 03ff AF030000 		.4byte	.LASF50
 1771 0403 01       		.byte	0x1
 1772 0404 5703     		.2byte	0x357
 1773 0406 8F000000 		.4byte	0x8f
 1774 040a 02       		.uleb128 0x2
 1775 040b 91       		.byte	0x91
 1776 040c 62       		.sleb128 -30
 1777 040d 10       		.uleb128 0x10
 1778 040e C7010000 		.4byte	.LASF55
 1779 0412 01       		.byte	0x1
 1780 0413 5903     		.2byte	0x359
 1781 0415 A7000000 		.4byte	0xa7
 1782 0419 02       		.uleb128 0x2
 1783 041a 91       		.byte	0x91
 1784 041b 6C       		.sleb128 -20
 1785 041c 00       		.byte	0
 1786 041d 09       		.uleb128 0x9
 1787 041e 83000000 		.4byte	0x83
 1788 0422 2D040000 		.4byte	0x42d
 1789 0426 0A       		.uleb128 0xa
 1790 0427 E5000000 		.4byte	0xe5
 1791 042b 01       		.byte	0x1
 1792 042c 00       		.byte	0
 1793 042d 08       		.uleb128 0x8
 1794 042e EA010000 		.4byte	.LASF56
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 48


 1795 0432 01       		.byte	0x1
 1796 0433 21       		.byte	0x21
 1797 0434 3E040000 		.4byte	0x43e
 1798 0438 05       		.uleb128 0x5
 1799 0439 03       		.byte	0x3
 1800 043a 00000000 		.4byte	ADC_SAR_Seq_1_channelsConfig
 1801 043e 0B       		.uleb128 0xb
 1802 043f 1D040000 		.4byte	0x41d
 1803 0443 14       		.uleb128 0x14
 1804 0444 8B010000 		.4byte	.LASF57
 1805 0448 01       		.byte	0x1
 1806 0449 18       		.byte	0x18
 1807 044a 6B000000 		.4byte	0x6b
 1808 044e 05       		.uleb128 0x5
 1809 044f 03       		.byte	0x3
 1810 0450 00000000 		.4byte	ADC_SAR_Seq_1_initVar
 1811 0454 09       		.uleb128 0x9
 1812 0455 8F000000 		.4byte	0x8f
 1813 0459 64040000 		.4byte	0x464
 1814 045d 0A       		.uleb128 0xa
 1815 045e E5000000 		.4byte	0xe5
 1816 0462 01       		.byte	0x1
 1817 0463 00       		.byte	0
 1818 0464 14       		.uleb128 0x14
 1819 0465 00000000 		.4byte	.LASF58
 1820 0469 01       		.byte	0x1
 1821 046a 19       		.byte	0x19
 1822 046b 75040000 		.4byte	0x475
 1823 046f 05       		.uleb128 0x5
 1824 0470 03       		.byte	0x3
 1825 0471 00000000 		.4byte	ADC_SAR_Seq_1_offset
 1826 0475 05       		.uleb128 0x5
 1827 0476 54040000 		.4byte	0x454
 1828 047a 09       		.uleb128 0x9
 1829 047b 9B000000 		.4byte	0x9b
 1830 047f 8A040000 		.4byte	0x48a
 1831 0483 0A       		.uleb128 0xa
 1832 0484 E5000000 		.4byte	0xe5
 1833 0488 01       		.byte	0x1
 1834 0489 00       		.byte	0
 1835 048a 14       		.uleb128 0x14
 1836 048b B9030000 		.4byte	.LASF59
 1837 048f 01       		.byte	0x1
 1838 0490 1A       		.byte	0x1a
 1839 0491 9B040000 		.4byte	0x49b
 1840 0495 05       		.uleb128 0x5
 1841 0496 03       		.byte	0x3
 1842 0497 00000000 		.4byte	ADC_SAR_Seq_1_countsPer10Volt
 1843 049b 05       		.uleb128 0x5
 1844 049c 7A040000 		.4byte	0x47a
 1845 04a0 00       		.byte	0
 1846              		.section	.debug_abbrev,"",%progbits
 1847              	.Ldebug_abbrev0:
 1848 0000 01       		.uleb128 0x1
 1849 0001 11       		.uleb128 0x11
 1850 0002 01       		.byte	0x1
 1851 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 49


 1852 0004 0E       		.uleb128 0xe
 1853 0005 13       		.uleb128 0x13
 1854 0006 0B       		.uleb128 0xb
 1855 0007 03       		.uleb128 0x3
 1856 0008 0E       		.uleb128 0xe
 1857 0009 1B       		.uleb128 0x1b
 1858 000a 0E       		.uleb128 0xe
 1859 000b 55       		.uleb128 0x55
 1860 000c 17       		.uleb128 0x17
 1861 000d 11       		.uleb128 0x11
 1862 000e 01       		.uleb128 0x1
 1863 000f 10       		.uleb128 0x10
 1864 0010 17       		.uleb128 0x17
 1865 0011 00       		.byte	0
 1866 0012 00       		.byte	0
 1867 0013 02       		.uleb128 0x2
 1868 0014 24       		.uleb128 0x24
 1869 0015 00       		.byte	0
 1870 0016 0B       		.uleb128 0xb
 1871 0017 0B       		.uleb128 0xb
 1872 0018 3E       		.uleb128 0x3e
 1873 0019 0B       		.uleb128 0xb
 1874 001a 03       		.uleb128 0x3
 1875 001b 0E       		.uleb128 0xe
 1876 001c 00       		.byte	0
 1877 001d 00       		.byte	0
 1878 001e 03       		.uleb128 0x3
 1879 001f 24       		.uleb128 0x24
 1880 0020 00       		.byte	0
 1881 0021 0B       		.uleb128 0xb
 1882 0022 0B       		.uleb128 0xb
 1883 0023 3E       		.uleb128 0x3e
 1884 0024 0B       		.uleb128 0xb
 1885 0025 03       		.uleb128 0x3
 1886 0026 08       		.uleb128 0x8
 1887 0027 00       		.byte	0
 1888 0028 00       		.byte	0
 1889 0029 04       		.uleb128 0x4
 1890 002a 16       		.uleb128 0x16
 1891 002b 00       		.byte	0
 1892 002c 03       		.uleb128 0x3
 1893 002d 0E       		.uleb128 0xe
 1894 002e 3A       		.uleb128 0x3a
 1895 002f 0B       		.uleb128 0xb
 1896 0030 3B       		.uleb128 0x3b
 1897 0031 05       		.uleb128 0x5
 1898 0032 49       		.uleb128 0x49
 1899 0033 13       		.uleb128 0x13
 1900 0034 00       		.byte	0
 1901 0035 00       		.byte	0
 1902 0036 05       		.uleb128 0x5
 1903 0037 35       		.uleb128 0x35
 1904 0038 00       		.byte	0
 1905 0039 49       		.uleb128 0x49
 1906 003a 13       		.uleb128 0x13
 1907 003b 00       		.byte	0
 1908 003c 00       		.byte	0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 50


 1909 003d 06       		.uleb128 0x6
 1910 003e 2E       		.uleb128 0x2e
 1911 003f 00       		.byte	0
 1912 0040 3F       		.uleb128 0x3f
 1913 0041 19       		.uleb128 0x19
 1914 0042 03       		.uleb128 0x3
 1915 0043 0E       		.uleb128 0xe
 1916 0044 3A       		.uleb128 0x3a
 1917 0045 0B       		.uleb128 0xb
 1918 0046 3B       		.uleb128 0x3b
 1919 0047 0B       		.uleb128 0xb
 1920 0048 27       		.uleb128 0x27
 1921 0049 19       		.uleb128 0x19
 1922 004a 11       		.uleb128 0x11
 1923 004b 01       		.uleb128 0x1
 1924 004c 12       		.uleb128 0x12
 1925 004d 06       		.uleb128 0x6
 1926 004e 40       		.uleb128 0x40
 1927 004f 18       		.uleb128 0x18
 1928 0050 9642     		.uleb128 0x2116
 1929 0052 19       		.uleb128 0x19
 1930 0053 00       		.byte	0
 1931 0054 00       		.byte	0
 1932 0055 07       		.uleb128 0x7
 1933 0056 2E       		.uleb128 0x2e
 1934 0057 01       		.byte	0x1
 1935 0058 3F       		.uleb128 0x3f
 1936 0059 19       		.uleb128 0x19
 1937 005a 03       		.uleb128 0x3
 1938 005b 0E       		.uleb128 0xe
 1939 005c 3A       		.uleb128 0x3a
 1940 005d 0B       		.uleb128 0xb
 1941 005e 3B       		.uleb128 0x3b
 1942 005f 0B       		.uleb128 0xb
 1943 0060 27       		.uleb128 0x27
 1944 0061 19       		.uleb128 0x19
 1945 0062 11       		.uleb128 0x11
 1946 0063 01       		.uleb128 0x1
 1947 0064 12       		.uleb128 0x12
 1948 0065 06       		.uleb128 0x6
 1949 0066 40       		.uleb128 0x40
 1950 0067 18       		.uleb128 0x18
 1951 0068 9642     		.uleb128 0x2116
 1952 006a 19       		.uleb128 0x19
 1953 006b 01       		.uleb128 0x1
 1954 006c 13       		.uleb128 0x13
 1955 006d 00       		.byte	0
 1956 006e 00       		.byte	0
 1957 006f 08       		.uleb128 0x8
 1958 0070 34       		.uleb128 0x34
 1959 0071 00       		.byte	0
 1960 0072 03       		.uleb128 0x3
 1961 0073 0E       		.uleb128 0xe
 1962 0074 3A       		.uleb128 0x3a
 1963 0075 0B       		.uleb128 0xb
 1964 0076 3B       		.uleb128 0x3b
 1965 0077 0B       		.uleb128 0xb
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 51


 1966 0078 49       		.uleb128 0x49
 1967 0079 13       		.uleb128 0x13
 1968 007a 02       		.uleb128 0x2
 1969 007b 18       		.uleb128 0x18
 1970 007c 00       		.byte	0
 1971 007d 00       		.byte	0
 1972 007e 09       		.uleb128 0x9
 1973 007f 01       		.uleb128 0x1
 1974 0080 01       		.byte	0x1
 1975 0081 49       		.uleb128 0x49
 1976 0082 13       		.uleb128 0x13
 1977 0083 01       		.uleb128 0x1
 1978 0084 13       		.uleb128 0x13
 1979 0085 00       		.byte	0
 1980 0086 00       		.byte	0
 1981 0087 0A       		.uleb128 0xa
 1982 0088 21       		.uleb128 0x21
 1983 0089 00       		.byte	0
 1984 008a 49       		.uleb128 0x49
 1985 008b 13       		.uleb128 0x13
 1986 008c 2F       		.uleb128 0x2f
 1987 008d 0B       		.uleb128 0xb
 1988 008e 00       		.byte	0
 1989 008f 00       		.byte	0
 1990 0090 0B       		.uleb128 0xb
 1991 0091 26       		.uleb128 0x26
 1992 0092 00       		.byte	0
 1993 0093 49       		.uleb128 0x49
 1994 0094 13       		.uleb128 0x13
 1995 0095 00       		.byte	0
 1996 0096 00       		.byte	0
 1997 0097 0C       		.uleb128 0xc
 1998 0098 2E       		.uleb128 0x2e
 1999 0099 00       		.byte	0
 2000 009a 3F       		.uleb128 0x3f
 2001 009b 19       		.uleb128 0x19
 2002 009c 03       		.uleb128 0x3
 2003 009d 0E       		.uleb128 0xe
 2004 009e 3A       		.uleb128 0x3a
 2005 009f 0B       		.uleb128 0xb
 2006 00a0 3B       		.uleb128 0x3b
 2007 00a1 05       		.uleb128 0x5
 2008 00a2 27       		.uleb128 0x27
 2009 00a3 19       		.uleb128 0x19
 2010 00a4 11       		.uleb128 0x11
 2011 00a5 01       		.uleb128 0x1
 2012 00a6 12       		.uleb128 0x12
 2013 00a7 06       		.uleb128 0x6
 2014 00a8 40       		.uleb128 0x40
 2015 00a9 18       		.uleb128 0x18
 2016 00aa 9642     		.uleb128 0x2116
 2017 00ac 19       		.uleb128 0x19
 2018 00ad 00       		.byte	0
 2019 00ae 00       		.byte	0
 2020 00af 0D       		.uleb128 0xd
 2021 00b0 2E       		.uleb128 0x2e
 2022 00b1 00       		.byte	0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 52


 2023 00b2 3F       		.uleb128 0x3f
 2024 00b3 19       		.uleb128 0x19
 2025 00b4 03       		.uleb128 0x3
 2026 00b5 0E       		.uleb128 0xe
 2027 00b6 3A       		.uleb128 0x3a
 2028 00b7 0B       		.uleb128 0xb
 2029 00b8 3B       		.uleb128 0x3b
 2030 00b9 05       		.uleb128 0x5
 2031 00ba 27       		.uleb128 0x27
 2032 00bb 19       		.uleb128 0x19
 2033 00bc 11       		.uleb128 0x11
 2034 00bd 01       		.uleb128 0x1
 2035 00be 12       		.uleb128 0x12
 2036 00bf 06       		.uleb128 0x6
 2037 00c0 40       		.uleb128 0x40
 2038 00c1 18       		.uleb128 0x18
 2039 00c2 9742     		.uleb128 0x2117
 2040 00c4 19       		.uleb128 0x19
 2041 00c5 00       		.byte	0
 2042 00c6 00       		.byte	0
 2043 00c7 0E       		.uleb128 0xe
 2044 00c8 2E       		.uleb128 0x2e
 2045 00c9 01       		.byte	0x1
 2046 00ca 3F       		.uleb128 0x3f
 2047 00cb 19       		.uleb128 0x19
 2048 00cc 03       		.uleb128 0x3
 2049 00cd 0E       		.uleb128 0xe
 2050 00ce 3A       		.uleb128 0x3a
 2051 00cf 0B       		.uleb128 0xb
 2052 00d0 3B       		.uleb128 0x3b
 2053 00d1 05       		.uleb128 0x5
 2054 00d2 27       		.uleb128 0x27
 2055 00d3 19       		.uleb128 0x19
 2056 00d4 49       		.uleb128 0x49
 2057 00d5 13       		.uleb128 0x13
 2058 00d6 11       		.uleb128 0x11
 2059 00d7 01       		.uleb128 0x1
 2060 00d8 12       		.uleb128 0x12
 2061 00d9 06       		.uleb128 0x6
 2062 00da 40       		.uleb128 0x40
 2063 00db 18       		.uleb128 0x18
 2064 00dc 9742     		.uleb128 0x2117
 2065 00de 19       		.uleb128 0x19
 2066 00df 01       		.uleb128 0x1
 2067 00e0 13       		.uleb128 0x13
 2068 00e1 00       		.byte	0
 2069 00e2 00       		.byte	0
 2070 00e3 0F       		.uleb128 0xf
 2071 00e4 05       		.uleb128 0x5
 2072 00e5 00       		.byte	0
 2073 00e6 03       		.uleb128 0x3
 2074 00e7 0E       		.uleb128 0xe
 2075 00e8 3A       		.uleb128 0x3a
 2076 00e9 0B       		.uleb128 0xb
 2077 00ea 3B       		.uleb128 0x3b
 2078 00eb 05       		.uleb128 0x5
 2079 00ec 49       		.uleb128 0x49
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 53


 2080 00ed 13       		.uleb128 0x13
 2081 00ee 02       		.uleb128 0x2
 2082 00ef 18       		.uleb128 0x18
 2083 00f0 00       		.byte	0
 2084 00f1 00       		.byte	0
 2085 00f2 10       		.uleb128 0x10
 2086 00f3 34       		.uleb128 0x34
 2087 00f4 00       		.byte	0
 2088 00f5 03       		.uleb128 0x3
 2089 00f6 0E       		.uleb128 0xe
 2090 00f7 3A       		.uleb128 0x3a
 2091 00f8 0B       		.uleb128 0xb
 2092 00f9 3B       		.uleb128 0x3b
 2093 00fa 05       		.uleb128 0x5
 2094 00fb 49       		.uleb128 0x49
 2095 00fc 13       		.uleb128 0x13
 2096 00fd 02       		.uleb128 0x2
 2097 00fe 18       		.uleb128 0x18
 2098 00ff 00       		.byte	0
 2099 0100 00       		.byte	0
 2100 0101 11       		.uleb128 0x11
 2101 0102 2E       		.uleb128 0x2e
 2102 0103 01       		.byte	0x1
 2103 0104 3F       		.uleb128 0x3f
 2104 0105 19       		.uleb128 0x19
 2105 0106 03       		.uleb128 0x3
 2106 0107 0E       		.uleb128 0xe
 2107 0108 3A       		.uleb128 0x3a
 2108 0109 0B       		.uleb128 0xb
 2109 010a 3B       		.uleb128 0x3b
 2110 010b 05       		.uleb128 0x5
 2111 010c 27       		.uleb128 0x27
 2112 010d 19       		.uleb128 0x19
 2113 010e 49       		.uleb128 0x49
 2114 010f 13       		.uleb128 0x13
 2115 0110 11       		.uleb128 0x11
 2116 0111 01       		.uleb128 0x1
 2117 0112 12       		.uleb128 0x12
 2118 0113 06       		.uleb128 0x6
 2119 0114 40       		.uleb128 0x40
 2120 0115 18       		.uleb128 0x18
 2121 0116 9642     		.uleb128 0x2116
 2122 0118 19       		.uleb128 0x19
 2123 0119 01       		.uleb128 0x1
 2124 011a 13       		.uleb128 0x13
 2125 011b 00       		.byte	0
 2126 011c 00       		.byte	0
 2127 011d 12       		.uleb128 0x12
 2128 011e 2E       		.uleb128 0x2e
 2129 011f 01       		.byte	0x1
 2130 0120 3F       		.uleb128 0x3f
 2131 0121 19       		.uleb128 0x19
 2132 0122 03       		.uleb128 0x3
 2133 0123 0E       		.uleb128 0xe
 2134 0124 3A       		.uleb128 0x3a
 2135 0125 0B       		.uleb128 0xb
 2136 0126 3B       		.uleb128 0x3b
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 54


 2137 0127 05       		.uleb128 0x5
 2138 0128 27       		.uleb128 0x27
 2139 0129 19       		.uleb128 0x19
 2140 012a 11       		.uleb128 0x11
 2141 012b 01       		.uleb128 0x1
 2142 012c 12       		.uleb128 0x12
 2143 012d 06       		.uleb128 0x6
 2144 012e 40       		.uleb128 0x40
 2145 012f 18       		.uleb128 0x18
 2146 0130 9742     		.uleb128 0x2117
 2147 0132 19       		.uleb128 0x19
 2148 0133 01       		.uleb128 0x1
 2149 0134 13       		.uleb128 0x13
 2150 0135 00       		.byte	0
 2151 0136 00       		.byte	0
 2152 0137 13       		.uleb128 0x13
 2153 0138 2E       		.uleb128 0x2e
 2154 0139 01       		.byte	0x1
 2155 013a 3F       		.uleb128 0x3f
 2156 013b 19       		.uleb128 0x19
 2157 013c 03       		.uleb128 0x3
 2158 013d 0E       		.uleb128 0xe
 2159 013e 3A       		.uleb128 0x3a
 2160 013f 0B       		.uleb128 0xb
 2161 0140 3B       		.uleb128 0x3b
 2162 0141 05       		.uleb128 0x5
 2163 0142 27       		.uleb128 0x27
 2164 0143 19       		.uleb128 0x19
 2165 0144 11       		.uleb128 0x11
 2166 0145 01       		.uleb128 0x1
 2167 0146 12       		.uleb128 0x12
 2168 0147 06       		.uleb128 0x6
 2169 0148 40       		.uleb128 0x40
 2170 0149 18       		.uleb128 0x18
 2171 014a 9642     		.uleb128 0x2116
 2172 014c 19       		.uleb128 0x19
 2173 014d 01       		.uleb128 0x1
 2174 014e 13       		.uleb128 0x13
 2175 014f 00       		.byte	0
 2176 0150 00       		.byte	0
 2177 0151 14       		.uleb128 0x14
 2178 0152 34       		.uleb128 0x34
 2179 0153 00       		.byte	0
 2180 0154 03       		.uleb128 0x3
 2181 0155 0E       		.uleb128 0xe
 2182 0156 3A       		.uleb128 0x3a
 2183 0157 0B       		.uleb128 0xb
 2184 0158 3B       		.uleb128 0x3b
 2185 0159 0B       		.uleb128 0xb
 2186 015a 49       		.uleb128 0x49
 2187 015b 13       		.uleb128 0x13
 2188 015c 3F       		.uleb128 0x3f
 2189 015d 19       		.uleb128 0x19
 2190 015e 02       		.uleb128 0x2
 2191 015f 18       		.uleb128 0x18
 2192 0160 00       		.byte	0
 2193 0161 00       		.byte	0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 55


 2194 0162 00       		.byte	0
 2195              		.section	.debug_aranges,"",%progbits
 2196 0000 A4000000 		.4byte	0xa4
 2197 0004 0200     		.2byte	0x2
 2198 0006 00000000 		.4byte	.Ldebug_info0
 2199 000a 04       		.byte	0x4
 2200 000b 00       		.byte	0
 2201 000c 0000     		.2byte	0
 2202 000e 0000     		.2byte	0
 2203 0010 00000000 		.4byte	.LFB1
 2204 0014 24000000 		.4byte	.LFE1-.LFB1
 2205 0018 00000000 		.4byte	.LFB2
 2206 001c 0C020000 		.4byte	.LFE2-.LFB2
 2207 0020 00000000 		.4byte	.LFB3
 2208 0024 38000000 		.4byte	.LFE3-.LFB3
 2209 0028 00000000 		.4byte	.LFB4
 2210 002c 18000000 		.4byte	.LFE4-.LFB4
 2211 0030 00000000 		.4byte	.LFB5
 2212 0034 1C000000 		.4byte	.LFE5-.LFB5
 2213 0038 00000000 		.4byte	.LFB6
 2214 003c 1C000000 		.4byte	.LFE6-.LFB6
 2215 0040 00000000 		.4byte	.LFB7
 2216 0044 48000000 		.4byte	.LFE7-.LFB7
 2217 0048 00000000 		.4byte	.LFB8
 2218 004c 44000000 		.4byte	.LFE8-.LFB8
 2219 0050 00000000 		.4byte	.LFB9
 2220 0054 1C000000 		.4byte	.LFE9-.LFB9
 2221 0058 00000000 		.4byte	.LFB10
 2222 005c 30000000 		.4byte	.LFE10-.LFB10
 2223 0060 00000000 		.4byte	.LFB11
 2224 0064 2C000000 		.4byte	.LFE11-.LFB11
 2225 0068 00000000 		.4byte	.LFB12
 2226 006c 1C000000 		.4byte	.LFE12-.LFB12
 2227 0070 00000000 		.4byte	.LFB13
 2228 0074 1C000000 		.4byte	.LFE13-.LFB13
 2229 0078 00000000 		.4byte	.LFB14
 2230 007c 30000000 		.4byte	.LFE14-.LFB14
 2231 0080 00000000 		.4byte	.LFB15
 2232 0084 2C000000 		.4byte	.LFE15-.LFB15
 2233 0088 00000000 		.4byte	.LFB16
 2234 008c A4000000 		.4byte	.LFE16-.LFB16
 2235 0090 00000000 		.4byte	.LFB17
 2236 0094 90000000 		.4byte	.LFE17-.LFB17
 2237 0098 00000000 		.4byte	.LFB18
 2238 009c 80000000 		.4byte	.LFE18-.LFB18
 2239 00a0 00000000 		.4byte	0
 2240 00a4 00000000 		.4byte	0
 2241              		.section	.debug_ranges,"",%progbits
 2242              	.Ldebug_ranges0:
 2243 0000 00000000 		.4byte	.LFB1
 2244 0004 24000000 		.4byte	.LFE1
 2245 0008 00000000 		.4byte	.LFB2
 2246 000c 0C020000 		.4byte	.LFE2
 2247 0010 00000000 		.4byte	.LFB3
 2248 0014 38000000 		.4byte	.LFE3
 2249 0018 00000000 		.4byte	.LFB4
 2250 001c 18000000 		.4byte	.LFE4
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 56


 2251 0020 00000000 		.4byte	.LFB5
 2252 0024 1C000000 		.4byte	.LFE5
 2253 0028 00000000 		.4byte	.LFB6
 2254 002c 1C000000 		.4byte	.LFE6
 2255 0030 00000000 		.4byte	.LFB7
 2256 0034 48000000 		.4byte	.LFE7
 2257 0038 00000000 		.4byte	.LFB8
 2258 003c 44000000 		.4byte	.LFE8
 2259 0040 00000000 		.4byte	.LFB9
 2260 0044 1C000000 		.4byte	.LFE9
 2261 0048 00000000 		.4byte	.LFB10
 2262 004c 30000000 		.4byte	.LFE10
 2263 0050 00000000 		.4byte	.LFB11
 2264 0054 2C000000 		.4byte	.LFE11
 2265 0058 00000000 		.4byte	.LFB12
 2266 005c 1C000000 		.4byte	.LFE12
 2267 0060 00000000 		.4byte	.LFB13
 2268 0064 1C000000 		.4byte	.LFE13
 2269 0068 00000000 		.4byte	.LFB14
 2270 006c 30000000 		.4byte	.LFE14
 2271 0070 00000000 		.4byte	.LFB15
 2272 0074 2C000000 		.4byte	.LFE15
 2273 0078 00000000 		.4byte	.LFB16
 2274 007c A4000000 		.4byte	.LFE16
 2275 0080 00000000 		.4byte	.LFB17
 2276 0084 90000000 		.4byte	.LFE17
 2277 0088 00000000 		.4byte	.LFB18
 2278 008c 80000000 		.4byte	.LFE18
 2279 0090 00000000 		.4byte	0
 2280 0094 00000000 		.4byte	0
 2281              		.section	.debug_line,"",%progbits
 2282              	.Ldebug_line0:
 2283 0000 A8020000 		.section	.debug_str,"MS",%progbits,1
 2283      02004A00 
 2283      00000201 
 2283      FB0E0D00 
 2283      01010101 
 2284              	.LASF58:
 2285 0000 4144435F 		.ascii	"ADC_SAR_Seq_1_offset\000"
 2285      5341525F 
 2285      5365715F 
 2285      315F6F66 
 2285      66736574 
 2286              	.LASF10:
 2287 0015 75696E74 		.ascii	"uint16\000"
 2287      313600
 2288              	.LASF36:
 2289 001c 4144435F 		.ascii	"ADC_SAR_Seq_1_Init\000"
 2289      5341525F 
 2289      5365715F 
 2289      315F496E 
 2289      697400
 2290              	.LASF48:
 2291 002f 61646347 		.ascii	"adcGain\000"
 2291      61696E00 
 2292              	.LASF23:
 2293 0037 636F756E 		.ascii	"counts\000"
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 57


 2293      747300
 2294              	.LASF28:
 2295 003e 4144435F 		.ascii	"ADC_SAR_Seq_1_StartConvert\000"
 2295      5341525F 
 2295      5365715F 
 2295      315F5374 
 2295      61727443 
 2296              	.LASF44:
 2297 0059 4144435F 		.ascii	"ADC_SAR_Seq_1_SetSatMask\000"
 2297      5341525F 
 2297      5365715F 
 2297      315F5365 
 2297      74536174 
 2298              	.LASF25:
 2299 0072 4144435F 		.ascii	"ADC_SAR_Seq_1_Start\000"
 2299      5341525F 
 2299      5365715F 
 2299      315F5374 
 2299      61727400 
 2300              	.LASF7:
 2301 0086 6C6F6E67 		.ascii	"long long unsigned int\000"
 2301      206C6F6E 
 2301      6720756E 
 2301      7369676E 
 2301      65642069 
 2302              	.LASF26:
 2303 009d 4144435F 		.ascii	"ADC_SAR_Seq_1_Enable\000"
 2303      5341525F 
 2303      5365715F 
 2303      315F456E 
 2303      61626C65 
 2304              	.LASF24:
 2305 00b2 4144435F 		.ascii	"ADC_SAR_Seq_1_InputsPlacement\000"
 2305      5341525F 
 2305      5365715F 
 2305      315F496E 
 2305      70757473 
 2306              	.LASF32:
 2307 00d0 4144435F 		.ascii	"ADC_SAR_Seq_1_GetResult16\000"
 2307      5341525F 
 2307      5365715F 
 2307      315F4765 
 2307      74526573 
 2308              	.LASF6:
 2309 00ea 6C6F6E67 		.ascii	"long long int\000"
 2309      206C6F6E 
 2309      6720696E 
 2309      7400
 2310              	.LASF0:
 2311 00f8 7369676E 		.ascii	"signed char\000"
 2311      65642063 
 2311      68617200 
 2312              	.LASF41:
 2313 0104 4144435F 		.ascii	"ADC_SAR_Seq_1_SetHighLimit\000"
 2313      5341525F 
 2313      5365715F 
 2313      315F5365 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 58


 2313      74486967 
 2314              	.LASF13:
 2315 011f 696E7433 		.ascii	"int32\000"
 2315      3200
 2316              	.LASF52:
 2317 0125 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_uVolts\000"
 2317      5341525F 
 2317      5365715F 
 2317      315F436F 
 2317      756E7473 
 2318              	.LASF4:
 2319 0143 6C6F6E67 		.ascii	"long int\000"
 2319      20696E74 
 2319      00
 2320              	.LASF9:
 2321 014c 75696E74 		.ascii	"uint8\000"
 2321      3800
 2322              	.LASF16:
 2323 0152 646F7562 		.ascii	"double\000"
 2323      6C6500
 2324              	.LASF11:
 2325 0159 75696E74 		.ascii	"uint32\000"
 2325      333200
 2326              	.LASF38:
 2327 0160 6D61736B 		.ascii	"mask\000"
 2327      00
 2328              	.LASF49:
 2329 0165 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_mVolts\000"
 2329      5341525F 
 2329      5365715F 
 2329      315F436F 
 2329      756E7473 
 2330              	.LASF33:
 2331 0183 7265744D 		.ascii	"retMode\000"
 2331      6F646500 
 2332              	.LASF57:
 2333 018b 4144435F 		.ascii	"ADC_SAR_Seq_1_initVar\000"
 2333      5341525F 
 2333      5365715F 
 2333      315F696E 
 2333      69745661 
 2334              	.LASF8:
 2335 01a1 756E7369 		.ascii	"unsigned int\000"
 2335      676E6564 
 2335      20696E74 
 2335      00
 2336              	.LASF53:
 2337 01ae 75566F6C 		.ascii	"uVolts\000"
 2337      747300
 2338              	.LASF5:
 2339 01b5 6C6F6E67 		.ascii	"long unsigned int\000"
 2339      20756E73 
 2339      69676E65 
 2339      6420696E 
 2339      7400
 2340              	.LASF55:
 2341 01c7 766F6C74 		.ascii	"volts\000"
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 59


 2341      7300
 2342              	.LASF22:
 2343 01cd 746D7052 		.ascii	"tmpRegVal\000"
 2343      65675661 
 2343      6C00
 2344              	.LASF3:
 2345 01d7 73686F72 		.ascii	"short unsigned int\000"
 2345      7420756E 
 2345      7369676E 
 2345      65642069 
 2345      6E7400
 2346              	.LASF56:
 2347 01ea 4144435F 		.ascii	"ADC_SAR_Seq_1_channelsConfig\000"
 2347      5341525F 
 2347      5365715F 
 2347      315F6368 
 2347      616E6E65 
 2348              	.LASF51:
 2349 0207 6D566F6C 		.ascii	"mVolts\000"
 2349      747300
 2350              	.LASF19:
 2351 020e 72656733 		.ascii	"reg32\000"
 2351      3200
 2352              	.LASF14:
 2353 0214 666C6F61 		.ascii	"float32\000"
 2353      74333200 
 2354              	.LASF20:
 2355 021c 73697A65 		.ascii	"sizetype\000"
 2355      74797065 
 2355      00
 2356              	.LASF40:
 2357 0225 6C6F774C 		.ascii	"lowLimit\000"
 2357      696D6974 
 2357      00
 2358              	.LASF31:
 2359 022e 4144435F 		.ascii	"ADC_SAR_Seq_1_IsEndConversion\000"
 2359      5341525F 
 2359      5365715F 
 2359      315F4973 
 2359      456E6443 
 2360              	.LASF29:
 2361 024c 4144435F 		.ascii	"ADC_SAR_Seq_1_StopConvert\000"
 2361      5341525F 
 2361      5365715F 
 2361      315F5374 
 2361      6F70436F 
 2362              	.LASF17:
 2363 0266 696E7436 		.ascii	"int64\000"
 2363      3400
 2364              	.LASF61:
 2365 026c 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c\000"
 2365      72617465 
 2365      645F536F 
 2365      75726365 
 2365      5C50536F 
 2366              	.LASF15:
 2367 0293 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 60


 2367      7400
 2368              	.LASF47:
 2369 0299 4144435F 		.ascii	"ADC_SAR_Seq_1_SetGain\000"
 2369      5341525F 
 2369      5365715F 
 2369      315F5365 
 2369      74476169 
 2370              	.LASF27:
 2371 02af 4144435F 		.ascii	"ADC_SAR_Seq_1_Stop\000"
 2371      5341525F 
 2371      5365715F 
 2371      315F5374 
 2371      6F7000
 2372              	.LASF42:
 2373 02c2 68696768 		.ascii	"highLimit\000"
 2373      4C696D69 
 2373      7400
 2374              	.LASF1:
 2375 02cc 756E7369 		.ascii	"unsigned char\000"
 2375      676E6564 
 2375      20636861 
 2375      7200
 2376              	.LASF2:
 2377 02da 73686F72 		.ascii	"short int\000"
 2377      7420696E 
 2377      7400
 2378              	.LASF54:
 2379 02e4 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_Volts\000"
 2379      5341525F 
 2379      5365715F 
 2379      315F436F 
 2379      756E7473 
 2380              	.LASF37:
 2381 0301 4144435F 		.ascii	"ADC_SAR_Seq_1_SetChanMask\000"
 2381      5341525F 
 2381      5365715F 
 2381      315F5365 
 2381      74436861 
 2382              	.LASF21:
 2383 031b 63684E75 		.ascii	"chNum\000"
 2383      6D00
 2384              	.LASF34:
 2385 0321 6368616E 		.ascii	"chan\000"
 2385      00
 2386              	.LASF18:
 2387 0326 63686172 		.ascii	"char\000"
 2387      00
 2388              	.LASF39:
 2389 032b 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLowLimit\000"
 2389      5341525F 
 2389      5365715F 
 2389      315F5365 
 2389      744C6F77 
 2390              	.LASF62:
 2391 0345 443A5C44 		.ascii	"D:\\Dropbox\\IoT Development\\Cypress PSoC Developm"
 2391      726F7062 
 2391      6F785C49 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 61


 2391      6F542044 
 2391      6576656C 
 2392 0375 656E745C 		.ascii	"ent\\ISMART-CY8CKIT-046-04\\SCB_SpiCommSlave01.cyds"
 2392      49534D41 
 2392      52542D43 
 2392      5938434B 
 2392      49542D30 
 2393 03a6 6E00     		.ascii	"n\000"
 2394              	.LASF46:
 2395 03a8 6F666673 		.ascii	"offset\000"
 2395      657400
 2396              	.LASF50:
 2397 03af 61646343 		.ascii	"adcCounts\000"
 2397      6F756E74 
 2397      7300
 2398              	.LASF59:
 2399 03b9 4144435F 		.ascii	"ADC_SAR_Seq_1_countsPer10Volt\000"
 2399      5341525F 
 2399      5365715F 
 2399      315F636F 
 2399      756E7473 
 2400              	.LASF30:
 2401 03d7 73746174 		.ascii	"status\000"
 2401      757300
 2402              	.LASF45:
 2403 03de 4144435F 		.ascii	"ADC_SAR_Seq_1_SetOffset\000"
 2403      5341525F 
 2403      5365715F 
 2403      315F5365 
 2403      744F6666 
 2404              	.LASF12:
 2405 03f6 696E7431 		.ascii	"int16\000"
 2405      3600
 2406              	.LASF60:
 2407 03fc 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2407      4320342E 
 2407      392E3320 
 2407      32303135 
 2407      30333033 
 2408 042f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2408      20726576 
 2408      6973696F 
 2408      6E203232 
 2408      31323230 
 2409 0462 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2409      66756E63 
 2409      74696F6E 
 2409      2D736563 
 2409      74696F6E 
 2410              	.LASF43:
 2411 048a 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLimitMask\000"
 2411      5341525F 
 2411      5365715F 
 2411      315F5365 
 2411      744C696D 
 2412              	.LASF35:
 2413 04a5 72657375 		.ascii	"result\000"
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cce7Q4Hg.s 			page 62


 2413      6C7400
 2414              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
