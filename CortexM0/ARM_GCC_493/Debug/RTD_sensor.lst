ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"RTD_sensor.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global _printf_float
  18              		.code	16
  19              		.comm	ref_voltage,4,4
  20              		.global	rtdCalVoltage
  21              		.bss
  22              		.align	2
  23              		.type	rtdCalVoltage, %object
  24              		.size	rtdCalVoltage, 4
  25              	rtdCalVoltage:
  26 0000 00000000 		.space	4
  27              		.global	rtdRes
  28              		.align	2
  29              		.type	rtdRes, %object
  30              		.size	rtdRes, 4
  31              	rtdRes:
  32 0004 00000000 		.space	4
  33              		.global	rtdVoltage
  34              		.align	2
  35              		.type	rtdVoltage, %object
  36              		.size	rtdVoltage, 4
  37              	rtdVoltage:
  38 0008 00000000 		.space	4
  39              		.global	rtdTemp
  40              		.align	2
  41              		.type	rtdTemp, %object
  42              		.size	rtdTemp, 4
  43              	rtdTemp:
  44 000c 00000000 		.space	4
  45              		.global	zeroCurrentOffset
  46              		.align	2
  47              		.type	zeroCurrentOffset, %object
  48              		.size	zeroCurrentOffset, 4
  49              	zeroCurrentOffset:
  50 0010 00000000 		.space	4
  51              		.global	current_source
  52              		.align	2
  53              		.type	current_source, %object
  54              		.size	current_source, 4
  55              	current_source:
  56 0014 00000000 		.space	4
  57              		.global	dataReady
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 2


  58              		.align	2
  59              		.type	dataReady, %object
  60              		.size	dataReady, 4
  61              	dataReady:
  62 0018 00000000 		.space	4
  63              		.comm	result,8,4
  64              		.comm	RTD_state,4,4
  65              		.section	.text.ADC_SAR_SEQ_ISR_LOC,"ax",%progbits
  66              		.align	2
  67              		.global	ADC_SAR_SEQ_ISR_LOC
  68              		.code	16
  69              		.thumb_func
  70              		.type	ADC_SAR_SEQ_ISR_LOC, %function
  71              	ADC_SAR_SEQ_ISR_LOC:
  72              	.LFB36:
  73              		.file 1 "RTD_sensor.c"
   1:RTD_sensor.c  **** /*
   2:RTD_sensor.c  ****  * Copyright 2017, Sierra Telecom. All Rights Reserved.
   3:RTD_sensor.c  ****  *
   4:RTD_sensor.c  ****  * This software, associated documentation and materials ("Software"),
   5:RTD_sensor.c  ****  * is owned by Sierra Telecom ("Sierra") and is protected by and subject to
   6:RTD_sensor.c  ****  * worldwide patent protection (United States and foreign),
   7:RTD_sensor.c  ****  * United States copyright laws and international treaty provisions.
   8:RTD_sensor.c  ****  * Therefore, you may use this Software only as provided in the license
   9:RTD_sensor.c  ****  * agreement accompanying the software package from which you
  10:RTD_sensor.c  ****  * obtained this Software ("EULA").
  11:RTD_sensor.c  ****  * If no EULA applies, Sierra hereby grants you a personal, non-exclusive,
  12:RTD_sensor.c  ****  * non-transferable license to copy, modify, and compile the Software
  13:RTD_sensor.c  ****  * source code solely for use in connection with Sierra's
  14:RTD_sensor.c  ****  * integrated circuit products. Any reproduction, modification, translation,
  15:RTD_sensor.c  ****  * compilation, or representation of this Software except as specified
  16:RTD_sensor.c  ****  * above is prohibited without the express written permission of Sierra.
  17:RTD_sensor.c  ****  *
  18:RTD_sensor.c  ****  * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND,
  19:RTD_sensor.c  ****  * EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  20:RTD_sensor.c  ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Sierra
  21:RTD_sensor.c  ****  * reserves the right to make changes to the Software without notice. Sierra
  22:RTD_sensor.c  ****  * does not assume any liability arising out of the application or use of the
  23:RTD_sensor.c  ****  * Software or any product or circuit described in the Software. Sierra does
  24:RTD_sensor.c  ****  * not authorize its products for use in any products where a malfunction or
  25:RTD_sensor.c  ****  * failure of the Sierra product may reasonably be expected to result in
  26:RTD_sensor.c  ****  * significant property damage, injury or death ("High Risk Product"). By
  27:RTD_sensor.c  ****  * including Sierra's product in a High Risk Product, the manufacturer
  28:RTD_sensor.c  ****  * of such system or application assumes all risk of such use and in doing
  29:RTD_sensor.c  ****  * so agrees to indemnify Sierra against all liability.
  30:RTD_sensor.c  ****  */
  31:RTD_sensor.c  **** /** @file RTD_sensor.c
  32:RTD_sensor.c  ****  *
  33:RTD_sensor.c  ****  *  Created on: April 26, 2017
  34:RTD_sensor.c  ****  *      Author: greg.phillips
  35:RTD_sensor.c  ****  */
  36:RTD_sensor.c  **** 
  37:RTD_sensor.c  **** #if defined (__GNUC__)
  38:RTD_sensor.c  ****     /* Add an explicit reference to the floating point printf library */
  39:RTD_sensor.c  ****     /* to allow the usage of floating point conversion specifiers. */
  40:RTD_sensor.c  ****     /* This is not linked in by default with the newlib-nano library. */
  41:RTD_sensor.c  ****     asm (".global _printf_float");
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 3


  42:RTD_sensor.c  **** #endif
  43:RTD_sensor.c  **** 
  44:RTD_sensor.c  **** 
  45:RTD_sensor.c  **** #include <project.h>
  46:RTD_sensor.c  **** #include <stdint.h>
  47:RTD_sensor.c  **** #include <stdbool.h>
  48:RTD_sensor.c  **** #include <stdlib.h>
  49:RTD_sensor.c  **** 
  50:RTD_sensor.c  **** #include "arduino.h"
  51:RTD_sensor.c  **** #include "cypress_arduino.h"
  52:RTD_sensor.c  **** /******************************************************
  53:RTD_sensor.c  ****  *                      Macros
  54:RTD_sensor.c  ****  ******************************************************/
  55:RTD_sensor.c  **** 
  56:RTD_sensor.c  **** /******************************************************
  57:RTD_sensor.c  ****  *                    Constants
  58:RTD_sensor.c  ****  ******************************************************/
  59:RTD_sensor.c  **** /* Calibration resistor value for RTD temp sensors - 100ohms as used 
  60:RTD_sensor.c  ****  * on PSoC Temperature sensor EBK */
  61:RTD_sensor.c  **** #define CAL_REF_RESISTOR                (100u)
  62:RTD_sensor.c  **** #define ADC_BIT_VALUE                   0.0005     // 1.024 / 2048 
  63:RTD_sensor.c  **** /* Define the current per bit of the IDAC drive */
  64:RTD_sensor.c  **** #define IDAC_CURRENT_PER_BIT            (2.4)
  65:RTD_sensor.c  **** 
  66:RTD_sensor.c  **** /* Scaling factors */
  67:RTD_sensor.c  **** #define TEMP_SCALE                      (100u)
  68:RTD_sensor.c  **** #define OP_AMP_RESISTANCE_SCALE         (3u)
  69:RTD_sensor.c  **** 
  70:RTD_sensor.c  **** /* Defines for ADC MUX channels */
  71:RTD_sensor.c  **** #define MUX_RTD_CHANNEL    (0)
  72:RTD_sensor.c  **** #define MUX_CAL_CHANNEL    (1)
  73:RTD_sensor.c  **** #define MUX_REF_CHANNEL    (2)
  74:RTD_sensor.c  **** 
  75:RTD_sensor.c  **** /* Define the Mask for channel selection */
  76:RTD_sensor.c  **** #define MASK_RTD_CHANNEL    0x01
  77:RTD_sensor.c  **** #define MASK_CAL_CHANNEL    0x02
  78:RTD_sensor.c  **** #define MASK_REF_CHANNEL    0x04
  79:RTD_sensor.c  **** 
  80:RTD_sensor.c  **** /* Define ADC_SAR_SEQ Channels */
  81:RTD_sensor.c  **** #define ADC_RTD_CHANNEL     0x00
  82:RTD_sensor.c  **** #define ADC_CAL_CHANNEL     0x01
  83:RTD_sensor.c  **** #define ADC_REF_CHANNEL     0x02
  84:RTD_sensor.c  **** 
  85:RTD_sensor.c  **** #define IDAC_MEASURE_VAL    0xFF    // 500uA?
  86:RTD_sensor.c  **** 
  87:RTD_sensor.c  **** /******************************************************
  88:RTD_sensor.c  ****  *                   Enumerations
  89:RTD_sensor.c  ****  ******************************************************/
  90:RTD_sensor.c  **** enum {
  91:RTD_sensor.c  ****     RTD_INIT,
  92:RTD_sensor.c  ****     RTD_SETUP_CALIBRATE_CURRENT,
  93:RTD_sensor.c  ****     RTD_GET_CURRENT_CAL_ZERO_OFFSET,
  94:RTD_sensor.c  ****     RTD_CURRENT_CALIBRATE,
  95:RTD_sensor.c  ****     RTD_SETUP_CALIBRATE,
  96:RTD_sensor.c  ****     RTD_GET_CAL_ZERO_OFFSET,
  97:RTD_sensor.c  ****     RTD_CALIBRATE,
  98:RTD_sensor.c  ****     RTD_GET_RTD_ZERO_OFFSET,
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 4


  99:RTD_sensor.c  ****     RTD_SETUP_READ_TEMP,
 100:RTD_sensor.c  ****     RTD_READ_TEMP,
 101:RTD_sensor.c  ****     RTD_CALCUATE_TEMP,
 102:RTD_sensor.c  **** };
 103:RTD_sensor.c  **** /******************************************************
 104:RTD_sensor.c  ****  *                 Type Definitions
 105:RTD_sensor.c  ****  ******************************************************/
 106:RTD_sensor.c  **** 
 107:RTD_sensor.c  **** /******************************************************
 108:RTD_sensor.c  ****  *                    Structures
 109:RTD_sensor.c  ****  ******************************************************/
 110:RTD_sensor.c  **** 
 111:RTD_sensor.c  **** /******************************************************
 112:RTD_sensor.c  ****  *               Function Declarations
 113:RTD_sensor.c  ****  ******************************************************/
 114:RTD_sensor.c  **** 
 115:RTD_sensor.c  **** /******************************************************
 116:RTD_sensor.c  ****  *               Variable Definitions
 117:RTD_sensor.c  ****  ******************************************************/
 118:RTD_sensor.c  **** /*
 119:RTD_sensor.c  ****  *  Voltage across know 100 Ohm Resistor
 120:RTD_sensor.c  ****  */
 121:RTD_sensor.c  **** uint32_t ref_voltage;
 122:RTD_sensor.c  **** /*
 123:RTD_sensor.c  ****  * Voltage read across calibration resistor at Full current
 124:RTD_sensor.c  ****  */
 125:RTD_sensor.c  ****  uint32 rtdCalVoltage = 0;
 126:RTD_sensor.c  **** /*
 127:RTD_sensor.c  ****  * Calculated RTD resistance
 128:RTD_sensor.c  ****  */
 129:RTD_sensor.c  ****  uint32 rtdRes = 0;
 130:RTD_sensor.c  **** /*
 131:RTD_sensor.c  ****  * Measured RTD voltage
 132:RTD_sensor.c  ****  */
 133:RTD_sensor.c  ****  uint32 rtdVoltage = 0;
 134:RTD_sensor.c  **** /*
 135:RTD_sensor.c  ****  * Calculated temperature using RTD sensor resistance
 136:RTD_sensor.c  ****  */
 137:RTD_sensor.c  ****  int32 rtdTemp = 0;
 138:RTD_sensor.c  **** /*
 139:RTD_sensor.c  ****  * Offset counts
 140:RTD_sensor.c  ****  */
 141:RTD_sensor.c  **** uint32 zeroCurrentOffset = 0;
 142:RTD_sensor.c  **** /*
 143:RTD_sensor.c  ****  * Actual Current as calculated
 144:RTD_sensor.c  ****  */
 145:RTD_sensor.c  **** float current_source = 0;
 146:RTD_sensor.c  **** /*
 147:RTD_sensor.c  ****  * Data ready for channel mask
 148:RTD_sensor.c  ****  */
 149:RTD_sensor.c  **** volatile uint32 dataReady = 0u;
 150:RTD_sensor.c  **** /*
 151:RTD_sensor.c  ****  * Stored result of conversion
 152:RTD_sensor.c  ****  */
 153:RTD_sensor.c  **** volatile int16 result[ADC_SAR_SEQ_TOTAL_CHANNELS_NUM];
 154:RTD_sensor.c  **** /*
 155:RTD_sensor.c  ****  * State variable for continuing calculations
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 5


 156:RTD_sensor.c  ****  */
 157:RTD_sensor.c  **** uint32_t RTD_state;
 158:RTD_sensor.c  **** /******************************************************
 159:RTD_sensor.c  ****  *               Function Definitions
 160:RTD_sensor.c  ****  ******************************************************/
 161:RTD_sensor.c  **** /**
 162:RTD_sensor.c  ****   * ADC_SAR_SEQ_ISR_LOC
 163:RTD_sensor.c  ****   * @brief Handle Interrupt Service Routine. Source - ADC SAR Seq.
 164:RTD_sensor.c  ****   * @param  None
 165:RTD_sensor.c  ****   * @retval : None
 166:RTD_sensor.c  ****   */
 167:RTD_sensor.c  **** CY_ISR(ADC_SAR_SEQ_ISR_LOC)
 168:RTD_sensor.c  **** {
  74              		.loc 1 168 0
  75              		.cfi_startproc
  76 0000 80B5     		push	{r7, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 82B0     		sub	sp, sp, #8
  81              		.cfi_def_cfa_offset 16
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
 169:RTD_sensor.c  ****     uint32 intr_status;
 170:RTD_sensor.c  ****     uint32 range_status;
 171:RTD_sensor.c  **** 
 172:RTD_sensor.c  ****     /* Read interrupt status registers */
 173:RTD_sensor.c  ****     intr_status = ADC_SAR_SEQ_SAR_INTR_MASKED_REG;
  84              		.loc 1 173 0
  85 0006 1A4B     		ldr	r3, .L5
  86 0008 1B68     		ldr	r3, [r3]
  87 000a 7B60     		str	r3, [r7, #4]
 174:RTD_sensor.c  ****     /* Check for End of Scan interrupt */
 175:RTD_sensor.c  ****     if((intr_status & ADC_SAR_SEQ_EOS_MASK) != 0u)
  88              		.loc 1 175 0
  89 000c 7B68     		ldr	r3, [r7, #4]
  90 000e 0122     		mov	r2, #1
  91 0010 1340     		and	r3, r2
  92 0012 27D0     		beq	.L2
 176:RTD_sensor.c  ****     {
 177:RTD_sensor.c  ****         /* Read range detect status */
 178:RTD_sensor.c  ****         range_status = ADC_SAR_SEQ_SAR_RANGE_INTR_MASKED_REG;
  93              		.loc 1 178 0
  94 0014 174B     		ldr	r3, .L5+4
  95 0016 1B68     		ldr	r3, [r3]
  96 0018 3B60     		str	r3, [r7]
 179:RTD_sensor.c  ****         
 180:RTD_sensor.c  ****         /* Verify that the conversion result met the condition Low_Limit <= Result < High_Limit  */
 181:RTD_sensor.c  ****         if( range_status & MASK_RTD_CHANNEL ) {
  97              		.loc 1 181 0
  98 001a 3B68     		ldr	r3, [r7]
  99 001c 0122     		mov	r2, #1
 100 001e 1340     		and	r3, r2
 101 0020 0CD0     		beq	.L3
 182:RTD_sensor.c  ****             /* Read conversion result */
 183:RTD_sensor.c  ****             result[ ADC_RTD_CHANNEL ] = ADC_SAR_SEQ_GetResult16( ADC_RTD_CHANNEL );
 102              		.loc 1 183 0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 6


 103 0022 0020     		mov	r0, #0
 104 0024 FFF7FEFF 		bl	ADC_SAR_SEQ_GetResult16
 105 0028 031C     		mov	r3, r0
 106 002a 1A1C     		mov	r2, r3
 107 002c 124B     		ldr	r3, .L5+8
 108 002e 1A80     		strh	r2, [r3]
 184:RTD_sensor.c  ****             dataReady |= MASK_RTD_CHANNEL;
 109              		.loc 1 184 0
 110 0030 124B     		ldr	r3, .L5+12
 111 0032 1B68     		ldr	r3, [r3]
 112 0034 0122     		mov	r2, #1
 113 0036 1A43     		orr	r2, r3
 114 0038 104B     		ldr	r3, .L5+12
 115 003a 1A60     		str	r2, [r3]
 116              	.L3:
 185:RTD_sensor.c  ****         }
 186:RTD_sensor.c  ****         if( range_status & MASK_REF_CHANNEL ) {
 117              		.loc 1 186 0
 118 003c 3B68     		ldr	r3, [r7]
 119 003e 0422     		mov	r2, #4
 120 0040 1340     		and	r3, r2
 121 0042 0CD0     		beq	.L4
 187:RTD_sensor.c  ****             /* Read conversion result */
 188:RTD_sensor.c  ****             result[ ADC_REF_CHANNEL ] = ADC_SAR_SEQ_GetResult16( ADC_REF_CHANNEL );
 122              		.loc 1 188 0
 123 0044 0220     		mov	r0, #2
 124 0046 FFF7FEFF 		bl	ADC_SAR_SEQ_GetResult16
 125 004a 031C     		mov	r3, r0
 126 004c 1A1C     		mov	r2, r3
 127 004e 0A4B     		ldr	r3, .L5+8
 128 0050 9A80     		strh	r2, [r3, #4]
 189:RTD_sensor.c  ****             dataReady |= MASK_REF_CHANNEL;
 129              		.loc 1 189 0
 130 0052 0A4B     		ldr	r3, .L5+12
 131 0054 1B68     		ldr	r3, [r3]
 132 0056 0422     		mov	r2, #4
 133 0058 1A43     		orr	r2, r3
 134 005a 084B     		ldr	r3, .L5+12
 135 005c 1A60     		str	r2, [r3]
 136              	.L4:
 190:RTD_sensor.c  ****         }
 191:RTD_sensor.c  ****         /* Clear range detect status */
 192:RTD_sensor.c  ****         ADC_SAR_SEQ_SAR_RANGE_INTR_REG = range_status;
 137              		.loc 1 192 0
 138 005e 084B     		ldr	r3, .L5+16
 139 0060 3A68     		ldr	r2, [r7]
 140 0062 1A60     		str	r2, [r3]
 141              	.L2:
 193:RTD_sensor.c  ****     }    
 194:RTD_sensor.c  ****     /* Clear handled interrupt */
 195:RTD_sensor.c  ****     ADC_SAR_SEQ_SAR_INTR_REG = intr_status;
 142              		.loc 1 195 0
 143 0064 074B     		ldr	r3, .L5+20
 144 0066 7A68     		ldr	r2, [r7, #4]
 145 0068 1A60     		str	r2, [r3]
 196:RTD_sensor.c  **** }
 146              		.loc 1 196 0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 7


 147 006a BD46     		mov	sp, r7
 148 006c 02B0     		add	sp, sp, #8
 149              		@ sp needed
 150 006e 80BD     		pop	{r7, pc}
 151              	.L6:
 152              		.align	2
 153              	.L5:
 154 0070 1C023A40 		.word	1077543452
 155 0074 3C023A40 		.word	1077543484
 156 0078 00000000 		.word	result
 157 007c 00000000 		.word	dataReady
 158 0080 30023A40 		.word	1077543472
 159 0084 10023A40 		.word	1077543440
 160              		.cfi_endproc
 161              	.LFE36:
 162              		.size	ADC_SAR_SEQ_ISR_LOC, .-ADC_SAR_SEQ_ISR_LOC
 163              		.section	.text.init_RTD,"ax",%progbits
 164              		.align	2
 165              		.global	init_RTD
 166              		.code	16
 167              		.thumb_func
 168              		.type	init_RTD, %function
 169              	init_RTD:
 170              	.LFB37:
 197:RTD_sensor.c  **** 
 198:RTD_sensor.c  **** /**
 199:RTD_sensor.c  ****   * @brief Initialize any sensors
 200:RTD_sensor.c  ****   * @param  None
 201:RTD_sensor.c  ****   * @retval : None
 202:RTD_sensor.c  ****   */
 203:RTD_sensor.c  **** void init_RTD(void)
 204:RTD_sensor.c  **** {
 171              		.loc 1 204 0
 172              		.cfi_startproc
 173 0000 80B5     		push	{r7, lr}
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 7, -8
 176              		.cfi_offset 14, -4
 177 0002 00AF     		add	r7, sp, #0
 178              		.cfi_def_cfa_register 7
 205:RTD_sensor.c  ****     RTD_state = RTD_INIT;
 179              		.loc 1 205 0
 180 0004 024B     		ldr	r3, .L8
 181 0006 0022     		mov	r2, #0
 182 0008 1A60     		str	r2, [r3]
 206:RTD_sensor.c  **** }
 183              		.loc 1 206 0
 184 000a BD46     		mov	sp, r7
 185              		@ sp needed
 186 000c 80BD     		pop	{r7, pc}
 187              	.L9:
 188 000e C046     		.align	2
 189              	.L8:
 190 0010 00000000 		.word	RTD_state
 191              		.cfi_endproc
 192              	.LFE37:
 193              		.size	init_RTD, .-init_RTD
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 8


 194              		.global	temp
 195              		.data
 196              		.align	2
 197              		.type	temp, %object
 198              		.size	temp, 4
 199              	temp:
 200 0000 0000C841 		.word	1103626240
 201              		.global	__aeabi_ui2f
 202              		.global	__aeabi_f2d
 203              		.global	__aeabi_dmul
 204              		.global	__aeabi_ddiv
 205              		.global	__aeabi_d2f
 206              		.global	__aeabi_d2uiz
 207              		.global	__aeabi_ui2d
 208              		.global	__aeabi_i2f
 209              		.global	__aeabi_fdiv
 210              		.section	.text.process_RTD,"ax",%progbits
 211              		.align	2
 212              		.global	process_RTD
 213              		.code	16
 214              		.thumb_func
 215              		.type	process_RTD, %function
 216              	process_RTD:
 217              	.LFB38:
 207:RTD_sensor.c  **** 
 208:RTD_sensor.c  **** float temp = 25.0;
 209:RTD_sensor.c  **** 
 210:RTD_sensor.c  **** /**
 211:RTD_sensor.c  ****   * @brief process the RTD sensor
 212:RTD_sensor.c  ****   * @param  None
 213:RTD_sensor.c  ****   * @retval : None
 214:RTD_sensor.c  ****   */
 215:RTD_sensor.c  **** void process_RTD(void)
 216:RTD_sensor.c  **** {
 218              		.loc 1 216 0
 219              		.cfi_startproc
 220 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 221              		.cfi_def_cfa_offset 20
 222              		.cfi_offset 4, -20
 223              		.cfi_offset 5, -16
 224              		.cfi_offset 6, -12
 225              		.cfi_offset 7, -8
 226              		.cfi_offset 14, -4
 227 0002 83B0     		sub	sp, sp, #12
 228              		.cfi_def_cfa_offset 32
 229 0004 00AF     		add	r7, sp, #0
 230              		.cfi_def_cfa_register 7
 217:RTD_sensor.c  ****     float temp;
 218:RTD_sensor.c  ****    
 219:RTD_sensor.c  ****     switch( RTD_state ) {
 231              		.loc 1 219 0
 232 0006 D14B     		ldr	r3, .L29
 233 0008 1B68     		ldr	r3, [r3]
 234 000a 0A2B     		cmp	r3, #10
 235 000c 00D9     		bls	.LCB134
 236 000e 96E1     		b	.L11	@long jump
 237              	.LCB134:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 9


 238 0010 9A00     		lsl	r2, r3, #2
 239 0012 CF4B     		ldr	r3, .L29+4
 240 0014 D318     		add	r3, r2, r3
 241 0016 1B68     		ldr	r3, [r3]
 242 0018 9F46     		mov	pc, r3
 243              		.section	.rodata
 244              		.align	2
 245              	.L13:
 246 0000 1A000000 		.word	.L12
 247 0004 38000000 		.word	.L14
 248 0008 4A000000 		.word	.L15
 249 000c 82000000 		.word	.L16
 250 0010 3E010000 		.word	.L17
 251 0014 50010000 		.word	.L18
 252 0018 68010000 		.word	.L19
 253 001c C6010000 		.word	.L20
 254 0020 F4010000 		.word	.L21
 255 0024 06020000 		.word	.L22
 256 0028 84020000 		.word	.L23
 257              		.section	.text.process_RTD
 258              	.L12:
 220:RTD_sensor.c  ****         case RTD_INIT :
 221:RTD_sensor.c  ****             /*
 222:RTD_sensor.c  ****              * Setup the Converter for a calbration
 223:RTD_sensor.c  ****              *
 224:RTD_sensor.c  ****              * Start the devices
 225:RTD_sensor.c  ****              * Select the correct MUX channel
 226:RTD_sensor.c  ****              * Select the mask to only convert the calibration ADC channel
 227:RTD_sensor.c  ****              */
 228:RTD_sensor.c  **** 	        IDAC_Start();
 259              		.loc 1 228 0
 260 001a FFF7FEFF 		bl	IDAC_Start
 229:RTD_sensor.c  ****             Opamp_1_Start();
 261              		.loc 1 229 0
 262 001e FFF7FEFF 		bl	Opamp_1_Start
 230:RTD_sensor.c  **** 	        ADC_SAR_SEQ_Start();
 263              		.loc 1 230 0
 264 0022 FFF7FEFF 		bl	ADC_SAR_SEQ_Start
 231:RTD_sensor.c  ****             ADC_SAR_SEQ_IRQ_StartEx( ADC_SAR_SEQ_ISR_LOC );
 265              		.loc 1 231 0
 266 0026 CB4B     		ldr	r3, .L29+8
 267 0028 181C     		mov	r0, r3
 268 002a FFF7FEFF 		bl	ADC_SAR_SEQ_IRQ_StartEx
 232:RTD_sensor.c  ****             CyGlobalIntEnable;
 269              		.loc 1 232 0
 270              	@ 232 "RTD_sensor.c" 1
 271 002e 62B6     		CPSIE   i
 272              	@ 0 "" 2
 233:RTD_sensor.c  ****             RTD_state = RTD_SETUP_CALIBRATE_CURRENT;
 273              		.loc 1 233 0
 274              		.code	16
 275 0030 C64B     		ldr	r3, .L29
 276 0032 0122     		mov	r2, #1
 277 0034 1A60     		str	r2, [r3]
 234:RTD_sensor.c  ****             break;
 278              		.loc 1 234 0
 279 0036 86E1     		b	.L10
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 10


 280              	.L14:
 235:RTD_sensor.c  ****         case RTD_SETUP_CALIBRATE_CURRENT :
 236:RTD_sensor.c  ****             /*
 237:RTD_sensor.c  ****              * Set up for Zero Offset reading
 238:RTD_sensor.c  ****              */
 239:RTD_sensor.c  ****             IDAC_SetValue(0u);
 281              		.loc 1 239 0
 282 0038 0020     		mov	r0, #0
 283 003a FFF7FEFF 		bl	IDAC_SetValue
 240:RTD_sensor.c  **** //            ADC_SAR_SEQ_SetChanMask( MASK_REF_CHANNEL );
 241:RTD_sensor.c  ****             ADC_SAR_SEQ_StartConvert();
 284              		.loc 1 241 0
 285 003e FFF7FEFF 		bl	ADC_SAR_SEQ_StartConvert
 242:RTD_sensor.c  ****             /*
 243:RTD_sensor.c  ****              * Enable interrupt and set interrupt handler to local routine
 244:RTD_sensor.c  ****              */
 245:RTD_sensor.c  ****             RTD_state = RTD_GET_CURRENT_CAL_ZERO_OFFSET;
 286              		.loc 1 245 0
 287 0042 C24B     		ldr	r3, .L29
 288 0044 0222     		mov	r2, #2
 289 0046 1A60     		str	r2, [r3]
 246:RTD_sensor.c  ****             break;
 290              		.loc 1 246 0
 291 0048 7DE1     		b	.L10
 292              	.L15:
 247:RTD_sensor.c  ****         case RTD_GET_CURRENT_CAL_ZERO_OFFSET :
 248:RTD_sensor.c  ****             if( 0 != ( dataReady & MASK_REF_CHANNEL ) ) {
 293              		.loc 1 248 0
 294 004a C34B     		ldr	r3, .L29+12
 295 004c 1B68     		ldr	r3, [r3]
 296 004e 0422     		mov	r2, #4
 297 0050 1340     		and	r3, r2
 298 0052 15D0     		beq	.L25
 249:RTD_sensor.c  ****                 ADC_SAR_SEQ_StopConvert();
 299              		.loc 1 249 0
 300 0054 FFF7FEFF 		bl	ADC_SAR_SEQ_StopConvert
 250:RTD_sensor.c  ****                 dataReady &= ~MASK_REF_CHANNEL;
 301              		.loc 1 250 0
 302 0058 BF4B     		ldr	r3, .L29+12
 303 005a 1B68     		ldr	r3, [r3]
 304 005c 0422     		mov	r2, #4
 305 005e 9343     		bic	r3, r2
 306 0060 1A1C     		mov	r2, r3
 307 0062 BD4B     		ldr	r3, .L29+12
 308 0064 1A60     		str	r2, [r3]
 251:RTD_sensor.c  ****                 zeroCurrentOffset =  0x800; // result[ ADC_REF_CHANNEL ];
 309              		.loc 1 251 0
 310 0066 BD4B     		ldr	r3, .L29+16
 311 0068 8022     		mov	r2, #128
 312 006a 1201     		lsl	r2, r2, #4
 313 006c 1A60     		str	r2, [r3]
 252:RTD_sensor.c  ****                 /*
 253:RTD_sensor.c  ****                 * Setup for Calibration - Configure IDAC to measurement current
 254:RTD_sensor.c  ****                 */
 255:RTD_sensor.c  ****                 IDAC_SetValue( IDAC_MEASURE_VAL );
 314              		.loc 1 255 0
 315 006e FF20     		mov	r0, #255
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 11


 316 0070 FFF7FEFF 		bl	IDAC_SetValue
 256:RTD_sensor.c  ****                 ADC_SAR_SEQ_StartConvert();
 317              		.loc 1 256 0
 318 0074 FFF7FEFF 		bl	ADC_SAR_SEQ_StartConvert
 257:RTD_sensor.c  ****                 RTD_state = RTD_CURRENT_CALIBRATE;
 319              		.loc 1 257 0
 320 0078 B44B     		ldr	r3, .L29
 321 007a 0322     		mov	r2, #3
 322 007c 1A60     		str	r2, [r3]
 258:RTD_sensor.c  ****             }
 259:RTD_sensor.c  ****             break;
 323              		.loc 1 259 0
 324 007e 62E1     		b	.L10
 325              	.L25:
 326 0080 61E1     		b	.L10
 327              	.L16:
 260:RTD_sensor.c  ****         case RTD_CURRENT_CALIBRATE :
 261:RTD_sensor.c  ****             if( 0 != ( dataReady & MASK_REF_CHANNEL ) ) {
 328              		.loc 1 261 0
 329 0082 B54B     		ldr	r3, .L29+12
 330 0084 1B68     		ldr	r3, [r3]
 331 0086 0422     		mov	r2, #4
 332 0088 1340     		and	r3, r2
 333 008a 57D0     		beq	.L26
 262:RTD_sensor.c  ****                 ADC_SAR_SEQ_StopConvert();
 334              		.loc 1 262 0
 335 008c FFF7FEFF 		bl	ADC_SAR_SEQ_StopConvert
 263:RTD_sensor.c  ****                 dataReady &= ~MASK_REF_CHANNEL;
 336              		.loc 1 263 0
 337 0090 B14B     		ldr	r3, .L29+12
 338 0092 1B68     		ldr	r3, [r3]
 339 0094 0422     		mov	r2, #4
 340 0096 9343     		bic	r3, r2
 341 0098 1A1C     		mov	r2, r3
 342 009a AF4B     		ldr	r3, .L29+12
 343 009c 1A60     		str	r2, [r3]
 264:RTD_sensor.c  ****                 ref_voltage = result[ ADC_REF_CHANNEL ];
 344              		.loc 1 264 0
 345 009e B04B     		ldr	r3, .L29+20
 346 00a0 9B88     		ldrh	r3, [r3, #4]
 347 00a2 9BB2     		uxth	r3, r3
 348 00a4 1AB2     		sxth	r2, r3
 349 00a6 AF4B     		ldr	r3, .L29+24
 350 00a8 1A60     		str	r2, [r3]
 265:RTD_sensor.c  ****                 /*
 266:RTD_sensor.c  ****                  * Get CDS difference
 267:RTD_sensor.c  ****                  */
 268:RTD_sensor.c  ****             	ref_voltage = ref_voltage - zeroCurrentOffset;
 351              		.loc 1 268 0
 352 00aa AE4B     		ldr	r3, .L29+24
 353 00ac 1A68     		ldr	r2, [r3]
 354 00ae AB4B     		ldr	r3, .L29+16
 355 00b0 1B68     		ldr	r3, [r3]
 356 00b2 D21A     		sub	r2, r2, r3
 357 00b4 AB4B     		ldr	r3, .L29+24
 358 00b6 1A60     		str	r2, [r3]
 269:RTD_sensor.c  ****                 /*
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 12


 270:RTD_sensor.c  ****                  * Update Sensor Value Current = Voltage / Resistance -> Ref_voltage / 100
 271:RTD_sensor.c  ****                  */
 272:RTD_sensor.c  ****                 current_source = ( (float) ( ref_voltage ) * ADC_BIT_VALUE ) / 100.63; // CAL_REF_R
 359              		.loc 1 272 0
 360 00b8 AA4B     		ldr	r3, .L29+24
 361 00ba 1B68     		ldr	r3, [r3]
 362 00bc 181C     		mov	r0, r3
 363 00be FFF7FEFF 		bl	__aeabi_ui2f
 364 00c2 031C     		add	r3, r0, #0
 365 00c4 181C     		add	r0, r3, #0
 366 00c6 FFF7FEFF 		bl	__aeabi_f2d
 367 00ca 031C     		mov	r3, r0
 368 00cc 0C1C     		mov	r4, r1
 369 00ce 181C     		mov	r0, r3
 370 00d0 211C     		mov	r1, r4
 371 00d2 A54A     		ldr	r2, .L29+28
 372 00d4 A54B     		ldr	r3, .L29+32
 373 00d6 FFF7FEFF 		bl	__aeabi_dmul
 374 00da 031C     		mov	r3, r0
 375 00dc 0C1C     		mov	r4, r1
 376 00de 181C     		mov	r0, r3
 377 00e0 211C     		mov	r1, r4
 378 00e2 A34A     		ldr	r2, .L29+36
 379 00e4 A34B     		ldr	r3, .L29+40
 380 00e6 FFF7FEFF 		bl	__aeabi_ddiv
 381 00ea 031C     		mov	r3, r0
 382 00ec 0C1C     		mov	r4, r1
 383 00ee 181C     		mov	r0, r3
 384 00f0 211C     		mov	r1, r4
 385 00f2 FFF7FEFF 		bl	__aeabi_d2f
 386 00f6 021C     		add	r2, r0, #0
 387 00f8 9F4B     		ldr	r3, .L29+44
 388 00fa 1A60     		str	r2, [r3]
 273:RTD_sensor.c  ****                 set_float_sensor_data( ASCB_SENSOR_CURRENT_SOURCE, (float) ref_voltage * ADC_BIT_VA
 389              		.loc 1 273 0
 390 00fc 994B     		ldr	r3, .L29+24
 391 00fe 1B68     		ldr	r3, [r3]
 392 0100 181C     		mov	r0, r3
 393 0102 FFF7FEFF 		bl	__aeabi_ui2f
 394 0106 031C     		add	r3, r0, #0
 395 0108 181C     		add	r0, r3, #0
 396 010a FFF7FEFF 		bl	__aeabi_f2d
 397 010e 031C     		mov	r3, r0
 398 0110 0C1C     		mov	r4, r1
 399 0112 181C     		mov	r0, r3
 400 0114 211C     		mov	r1, r4
 401 0116 944A     		ldr	r2, .L29+28
 402 0118 944B     		ldr	r3, .L29+32
 403 011a FFF7FEFF 		bl	__aeabi_dmul
 404 011e 031C     		mov	r3, r0
 405 0120 0C1C     		mov	r4, r1
 406 0122 181C     		mov	r0, r3
 407 0124 211C     		mov	r1, r4
 408 0126 FFF7FEFF 		bl	__aeabi_d2f
 409 012a 031C     		add	r3, r0, #0
 410 012c 0120     		mov	r0, #1
 411 012e 191C     		add	r1, r3, #0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 13


 412 0130 FFF7FEFF 		bl	set_float_sensor_data
 274:RTD_sensor.c  ****                 RTD_state = RTD_SETUP_CALIBRATE;
 413              		.loc 1 274 0
 414 0134 854B     		ldr	r3, .L29
 415 0136 0422     		mov	r2, #4
 416 0138 1A60     		str	r2, [r3]
 275:RTD_sensor.c  ****             }
 276:RTD_sensor.c  ****             break;
 417              		.loc 1 276 0
 418 013a 04E1     		b	.L10
 419              	.L26:
 420 013c 03E1     		b	.L10
 421              	.L17:
 277:RTD_sensor.c  ****         case RTD_SETUP_CALIBRATE :  // Mesure wire resistance
 278:RTD_sensor.c  ****             /*
 279:RTD_sensor.c  ****              * Set up for Zero Offset reading
 280:RTD_sensor.c  ****              */
 281:RTD_sensor.c  ****             IDAC_SetValue(0u);
 422              		.loc 1 281 0
 423 013e 0020     		mov	r0, #0
 424 0140 FFF7FEFF 		bl	IDAC_SetValue
 282:RTD_sensor.c  **** //            ADC_SAR_SEQ_SetChanMask( MASK_CAL_CHANNEL );
 283:RTD_sensor.c  ****             ADC_SAR_SEQ_StartConvert();
 425              		.loc 1 283 0
 426 0144 FFF7FEFF 		bl	ADC_SAR_SEQ_StartConvert
 284:RTD_sensor.c  ****             RTD_state = RTD_GET_CAL_ZERO_OFFSET;
 427              		.loc 1 284 0
 428 0148 804B     		ldr	r3, .L29
 429 014a 0522     		mov	r2, #5
 430 014c 1A60     		str	r2, [r3]
 285:RTD_sensor.c  ****             break;
 431              		.loc 1 285 0
 432 014e FAE0     		b	.L10
 433              	.L18:
 286:RTD_sensor.c  ****         case RTD_GET_CAL_ZERO_OFFSET :
 287:RTD_sensor.c  ****             zeroCurrentOffset = 0;
 434              		.loc 1 287 0
 435 0150 824B     		ldr	r3, .L29+16
 436 0152 0022     		mov	r2, #0
 437 0154 1A60     		str	r2, [r3]
 288:RTD_sensor.c  ****             /*
 289:RTD_sensor.c  ****              * Setup for Calibration - Configure IDAC to measurement current level
 290:RTD_sensor.c  ****              *
 291:RTD_sensor.c  ****              * Leave this for now so when / if we add real calibration of wires state machine is sa
 292:RTD_sensor.c  ****              */
 293:RTD_sensor.c  ****             IDAC_SetValue( IDAC_MEASURE_VAL );
 438              		.loc 1 293 0
 439 0156 FF20     		mov	r0, #255
 440 0158 FFF7FEFF 		bl	IDAC_SetValue
 294:RTD_sensor.c  ****             ADC_SAR_SEQ_StartConvert();
 441              		.loc 1 294 0
 442 015c FFF7FEFF 		bl	ADC_SAR_SEQ_StartConvert
 295:RTD_sensor.c  ****             RTD_state = RTD_CALIBRATE;
 443              		.loc 1 295 0
 444 0160 7A4B     		ldr	r3, .L29
 445 0162 0622     		mov	r2, #6
 446 0164 1A60     		str	r2, [r3]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 14


 296:RTD_sensor.c  ****             break;
 447              		.loc 1 296 0
 448 0166 EEE0     		b	.L10
 449              	.L19:
 297:RTD_sensor.c  ****         case RTD_CALIBRATE :
 298:RTD_sensor.c  ****             /*
 299:RTD_sensor.c  ****              * Rough guess for now
 300:RTD_sensor.c  ****              */
 301:RTD_sensor.c  ****             rtdCalVoltage = 1;
 450              		.loc 1 301 0
 451 0168 844B     		ldr	r3, .L29+48
 452 016a 0122     		mov	r2, #1
 453 016c 1A60     		str	r2, [r3]
 302:RTD_sensor.c  ****             /*
 303:RTD_sensor.c  ****              * Get CDS difference
 304:RTD_sensor.c  ****              */
 305:RTD_sensor.c  ****           	rtdCalVoltage = rtdCalVoltage - zeroCurrentOffset;
 454              		.loc 1 305 0
 455 016e 834B     		ldr	r3, .L29+48
 456 0170 1A68     		ldr	r2, [r3]
 457 0172 7A4B     		ldr	r3, .L29+16
 458 0174 1B68     		ldr	r3, [r3]
 459 0176 D21A     		sub	r2, r2, r3
 460 0178 804B     		ldr	r3, .L29+48
 461 017a 1A60     		str	r2, [r3]
 306:RTD_sensor.c  ****             /*
 307:RTD_sensor.c  ****              * Update Sensor Value
 308:RTD_sensor.c  ****              */
 309:RTD_sensor.c  ****             set_float_sensor_data( ASCB_SENSOR_CAL_VOLTAGE, (float) rtdCalVoltage * ADC_BIT_VALUE )
 462              		.loc 1 309 0
 463 017c 7F4B     		ldr	r3, .L29+48
 464 017e 1B68     		ldr	r3, [r3]
 465 0180 181C     		mov	r0, r3
 466 0182 FFF7FEFF 		bl	__aeabi_ui2f
 467 0186 031C     		add	r3, r0, #0
 468 0188 181C     		add	r0, r3, #0
 469 018a FFF7FEFF 		bl	__aeabi_f2d
 470 018e 031C     		mov	r3, r0
 471 0190 0C1C     		mov	r4, r1
 472 0192 181C     		mov	r0, r3
 473 0194 211C     		mov	r1, r4
 474 0196 744A     		ldr	r2, .L29+28
 475 0198 744B     		ldr	r3, .L29+32
 476 019a FFF7FEFF 		bl	__aeabi_dmul
 477 019e 031C     		mov	r3, r0
 478 01a0 0C1C     		mov	r4, r1
 479 01a2 181C     		mov	r0, r3
 480 01a4 211C     		mov	r1, r4
 481 01a6 FFF7FEFF 		bl	__aeabi_d2f
 482 01aa 031C     		add	r3, r0, #0
 483 01ac 0220     		mov	r0, #2
 484 01ae 191C     		add	r1, r3, #0
 485 01b0 FFF7FEFF 		bl	set_float_sensor_data
 310:RTD_sensor.c  ****             /*
 311:RTD_sensor.c  ****              * Set up for Zero Offset reading
 312:RTD_sensor.c  ****              */
 313:RTD_sensor.c  ****             IDAC_SetValue(0u);
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 15


 486              		.loc 1 313 0
 487 01b4 0020     		mov	r0, #0
 488 01b6 FFF7FEFF 		bl	IDAC_SetValue
 314:RTD_sensor.c  **** //                ADC_SAR_SEQ_SetChanMask( MASK_RTD_CHANNEL );
 315:RTD_sensor.c  ****             ADC_SAR_SEQ_StartConvert();
 489              		.loc 1 315 0
 490 01ba FFF7FEFF 		bl	ADC_SAR_SEQ_StartConvert
 316:RTD_sensor.c  ****             RTD_state = RTD_GET_RTD_ZERO_OFFSET;
 491              		.loc 1 316 0
 492 01be 634B     		ldr	r3, .L29
 493 01c0 0722     		mov	r2, #7
 494 01c2 1A60     		str	r2, [r3]
 317:RTD_sensor.c  ****             break;
 495              		.loc 1 317 0
 496 01c4 BFE0     		b	.L10
 497              	.L20:
 318:RTD_sensor.c  ****         case RTD_GET_RTD_ZERO_OFFSET :
 319:RTD_sensor.c  ****             if( 0 != ( dataReady & MASK_RTD_CHANNEL ) ) {
 498              		.loc 1 319 0
 499 01c6 644B     		ldr	r3, .L29+12
 500 01c8 1B68     		ldr	r3, [r3]
 501 01ca 0122     		mov	r2, #1
 502 01cc 1340     		and	r3, r2
 503 01ce 10D0     		beq	.L27
 320:RTD_sensor.c  ****                 ADC_SAR_SEQ_StopConvert();
 504              		.loc 1 320 0
 505 01d0 FFF7FEFF 		bl	ADC_SAR_SEQ_StopConvert
 321:RTD_sensor.c  ****                 dataReady &= ~MASK_RTD_CHANNEL;
 506              		.loc 1 321 0
 507 01d4 604B     		ldr	r3, .L29+12
 508 01d6 1B68     		ldr	r3, [r3]
 509 01d8 0122     		mov	r2, #1
 510 01da 9343     		bic	r3, r2
 511 01dc 1A1C     		mov	r2, r3
 512 01de 5E4B     		ldr	r3, .L29+12
 513 01e0 1A60     		str	r2, [r3]
 322:RTD_sensor.c  ****                 zeroCurrentOffset = 0x800;  // result[ ADC_RTD_CHANNEL ];
 514              		.loc 1 322 0
 515 01e2 5E4B     		ldr	r3, .L29+16
 516 01e4 8022     		mov	r2, #128
 517 01e6 1201     		lsl	r2, r2, #4
 518 01e8 1A60     		str	r2, [r3]
 323:RTD_sensor.c  ****                 /*
 324:RTD_sensor.c  ****                 * Setup for Temperature - Configure IDAC to measurement current
 325:RTD_sensor.c  ****                 */
 326:RTD_sensor.c  ****                 RTD_state = RTD_SETUP_READ_TEMP;
 519              		.loc 1 326 0
 520 01ea 584B     		ldr	r3, .L29
 521 01ec 0822     		mov	r2, #8
 522 01ee 1A60     		str	r2, [r3]
 327:RTD_sensor.c  ****             }
 328:RTD_sensor.c  ****             break;
 523              		.loc 1 328 0
 524 01f0 A9E0     		b	.L10
 525              	.L27:
 526 01f2 A8E0     		b	.L10
 527              	.L21:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 16


 329:RTD_sensor.c  ****         case RTD_SETUP_READ_TEMP :
 330:RTD_sensor.c  ****             IDAC_SetValue( IDAC_MEASURE_VAL );
 528              		.loc 1 330 0
 529 01f4 FF20     		mov	r0, #255
 530 01f6 FFF7FEFF 		bl	IDAC_SetValue
 331:RTD_sensor.c  ****             ADC_SAR_SEQ_StartConvert();
 531              		.loc 1 331 0
 532 01fa FFF7FEFF 		bl	ADC_SAR_SEQ_StartConvert
 332:RTD_sensor.c  ****             RTD_state = RTD_READ_TEMP;
 533              		.loc 1 332 0
 534 01fe 534B     		ldr	r3, .L29
 535 0200 0922     		mov	r2, #9
 536 0202 1A60     		str	r2, [r3]
 333:RTD_sensor.c  ****             break;
 537              		.loc 1 333 0
 538 0204 9FE0     		b	.L10
 539              	.L22:
 334:RTD_sensor.c  ****         case RTD_READ_TEMP :
 335:RTD_sensor.c  ****             if( 0 != ( dataReady & MASK_RTD_CHANNEL ) ) {
 540              		.loc 1 335 0
 541 0206 544B     		ldr	r3, .L29+12
 542 0208 1B68     		ldr	r3, [r3]
 543 020a 0122     		mov	r2, #1
 544 020c 1340     		and	r3, r2
 545 020e 38D0     		beq	.L28
 336:RTD_sensor.c  ****                 dataReady &= ~MASK_RTD_CHANNEL;
 546              		.loc 1 336 0
 547 0210 514B     		ldr	r3, .L29+12
 548 0212 1B68     		ldr	r3, [r3]
 549 0214 0122     		mov	r2, #1
 550 0216 9343     		bic	r3, r2
 551 0218 1A1C     		mov	r2, r3
 552 021a 4F4B     		ldr	r3, .L29+12
 553 021c 1A60     		str	r2, [r3]
 337:RTD_sensor.c  ****                 ADC_SAR_SEQ_StopConvert();
 554              		.loc 1 337 0
 555 021e FFF7FEFF 		bl	ADC_SAR_SEQ_StopConvert
 338:RTD_sensor.c  ****                 rtdVoltage = result[ ADC_RTD_CHANNEL ];
 556              		.loc 1 338 0
 557 0222 4F4B     		ldr	r3, .L29+20
 558 0224 1B88     		ldrh	r3, [r3]
 559 0226 9BB2     		uxth	r3, r3
 560 0228 1AB2     		sxth	r2, r3
 561 022a 554B     		ldr	r3, .L29+52
 562 022c 1A60     		str	r2, [r3]
 339:RTD_sensor.c  ****                 rtdVoltage = rtdVoltage - zeroCurrentOffset;
 563              		.loc 1 339 0
 564 022e 544B     		ldr	r3, .L29+52
 565 0230 1A68     		ldr	r2, [r3]
 566 0232 4A4B     		ldr	r3, .L29+16
 567 0234 1B68     		ldr	r3, [r3]
 568 0236 D21A     		sub	r2, r2, r3
 569 0238 514B     		ldr	r3, .L29+52
 570 023a 1A60     		str	r2, [r3]
 340:RTD_sensor.c  ****                 /*
 341:RTD_sensor.c  ****                  * Update Sensor Value
 342:RTD_sensor.c  ****                  */
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 17


 343:RTD_sensor.c  ****                 set_float_sensor_data( ASCB_SENSOR_RTD_VOLTAGE, (float) rtdVoltage * ADC_BIT_VALUE 
 571              		.loc 1 343 0
 572 023c 504B     		ldr	r3, .L29+52
 573 023e 1B68     		ldr	r3, [r3]
 574 0240 181C     		mov	r0, r3
 575 0242 FFF7FEFF 		bl	__aeabi_ui2f
 576 0246 031C     		add	r3, r0, #0
 577 0248 181C     		add	r0, r3, #0
 578 024a FFF7FEFF 		bl	__aeabi_f2d
 579 024e 031C     		mov	r3, r0
 580 0250 0C1C     		mov	r4, r1
 581 0252 181C     		mov	r0, r3
 582 0254 211C     		mov	r1, r4
 583 0256 444A     		ldr	r2, .L29+28
 584 0258 444B     		ldr	r3, .L29+32
 585 025a FFF7FEFF 		bl	__aeabi_dmul
 586 025e 031C     		mov	r3, r0
 587 0260 0C1C     		mov	r4, r1
 588 0262 181C     		mov	r0, r3
 589 0264 211C     		mov	r1, r4
 590 0266 FFF7FEFF 		bl	__aeabi_d2f
 591 026a 031C     		add	r3, r0, #0
 592 026c 0320     		mov	r0, #3
 593 026e 191C     		add	r1, r3, #0
 594 0270 FFF7FEFF 		bl	set_float_sensor_data
 344:RTD_sensor.c  ****                 RTD_state = RTD_CALCUATE_TEMP;
 595              		.loc 1 344 0
 596 0274 354B     		ldr	r3, .L29
 597 0276 0A22     		mov	r2, #10
 598 0278 1A60     		str	r2, [r3]
 345:RTD_sensor.c  ****                 /*
 346:RTD_sensor.c  ****                  * Set Zero to power off
 347:RTD_sensor.c  ****                  */
 348:RTD_sensor.c  ****                 IDAC_SetValue(0u);
 599              		.loc 1 348 0
 600 027a 0020     		mov	r0, #0
 601 027c FFF7FEFF 		bl	IDAC_SetValue
 349:RTD_sensor.c  ****             }
 350:RTD_sensor.c  ****             break;
 602              		.loc 1 350 0
 603 0280 61E0     		b	.L10
 604              	.L28:
 605 0282 60E0     		b	.L10
 606              	.L23:
 351:RTD_sensor.c  ****         case RTD_CALCUATE_TEMP :
 352:RTD_sensor.c  ****            	/* Get CDS difference */
 353:RTD_sensor.c  ****             
 354:RTD_sensor.c  ****             /* Find RTD resistance */
 355:RTD_sensor.c  ****     	    rtdRes = ( uint32_t) ( ( (float) ( rtdVoltage  - rtdCalVoltage ) * ADC_BIT_VALUE ) / curre
 607              		.loc 1 355 0
 608 0284 3E4B     		ldr	r3, .L29+52
 609 0286 1A68     		ldr	r2, [r3]
 610 0288 3C4B     		ldr	r3, .L29+48
 611 028a 1B68     		ldr	r3, [r3]
 612 028c D31A     		sub	r3, r2, r3
 613 028e 181C     		mov	r0, r3
 614 0290 FFF7FEFF 		bl	__aeabi_ui2f
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 18


 615 0294 031C     		add	r3, r0, #0
 616 0296 181C     		add	r0, r3, #0
 617 0298 FFF7FEFF 		bl	__aeabi_f2d
 618 029c 031C     		mov	r3, r0
 619 029e 0C1C     		mov	r4, r1
 620 02a0 181C     		mov	r0, r3
 621 02a2 211C     		mov	r1, r4
 622 02a4 304A     		ldr	r2, .L29+28
 623 02a6 314B     		ldr	r3, .L29+32
 624 02a8 FFF7FEFF 		bl	__aeabi_dmul
 625 02ac 031C     		mov	r3, r0
 626 02ae 0C1C     		mov	r4, r1
 627 02b0 1D1C     		mov	r5, r3
 628 02b2 261C     		mov	r6, r4
 629 02b4 304B     		ldr	r3, .L29+44
 630 02b6 1B68     		ldr	r3, [r3]
 631 02b8 181C     		add	r0, r3, #0
 632 02ba FFF7FEFF 		bl	__aeabi_f2d
 633 02be 031C     		mov	r3, r0
 634 02c0 0C1C     		mov	r4, r1
 635 02c2 281C     		mov	r0, r5
 636 02c4 311C     		mov	r1, r6
 637 02c6 1A1C     		mov	r2, r3
 638 02c8 231C     		mov	r3, r4
 639 02ca FFF7FEFF 		bl	__aeabi_ddiv
 640 02ce 031C     		mov	r3, r0
 641 02d0 0C1C     		mov	r4, r1
 642 02d2 181C     		mov	r0, r3
 643 02d4 211C     		mov	r1, r4
 644 02d6 FFF7FEFF 		bl	__aeabi_d2uiz
 645 02da 031C     		mov	r3, r0
 646 02dc 181C     		mov	r0, r3
 647 02de FFF7FEFF 		bl	__aeabi_ui2d
 648 02e2 031C     		mov	r3, r0
 649 02e4 0C1C     		mov	r4, r1
 650 02e6 181C     		mov	r0, r3
 651 02e8 211C     		mov	r1, r4
 652 02ea 0022     		mov	r2, #0
 653 02ec 254B     		ldr	r3, .L29+56
 654 02ee FFF7FEFF 		bl	__aeabi_dmul
 655 02f2 031C     		mov	r3, r0
 656 02f4 0C1C     		mov	r4, r1
 657 02f6 181C     		mov	r0, r3
 658 02f8 211C     		mov	r1, r4
 659 02fa FFF7FEFF 		bl	__aeabi_d2uiz
 660 02fe 021C     		mov	r2, r0
 661 0300 214B     		ldr	r3, .L29+60
 662 0302 1A60     		str	r2, [r3]
 356:RTD_sensor.c  **** 
 357:RTD_sensor.c  ****             /* Get temperature */
 358:RTD_sensor.c  ****             rtdTemp = RTD_GetTemperature(rtdRes);
 663              		.loc 1 358 0
 664 0304 204B     		ldr	r3, .L29+60
 665 0306 1B68     		ldr	r3, [r3]
 666 0308 181C     		mov	r0, r3
 667 030a FFF7FEFF 		bl	RTD_GetTemperature
 668 030e 021C     		mov	r2, r0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 19


 669 0310 1E4B     		ldr	r3, .L29+64
 670 0312 1A60     		str	r2, [r3]
 359:RTD_sensor.c  **** 
 360:RTD_sensor.c  ****             /* Get temperature in degree C */
 361:RTD_sensor.c  ****             temp = ( (float) ( rtdTemp )/ TEMP_SCALE );
 671              		.loc 1 361 0
 672 0314 1D4B     		ldr	r3, .L29+64
 673 0316 1B68     		ldr	r3, [r3]
 674 0318 181C     		mov	r0, r3
 675 031a FFF7FEFF 		bl	__aeabi_i2f
 676 031e 031C     		add	r3, r0, #0
 677 0320 181C     		add	r0, r3, #0
 678 0322 1B49     		ldr	r1, .L29+68
 679 0324 FFF7FEFF 		bl	__aeabi_fdiv
 680 0328 031C     		add	r3, r0, #0
 681 032a 7B60     		str	r3, [r7, #4]
 362:RTD_sensor.c  **** 
 363:RTD_sensor.c  ****             /*
 364:RTD_sensor.c  ****              * Update Sensor Value
 365:RTD_sensor.c  ****              */
 366:RTD_sensor.c  ****             set_float_sensor_data( ASCB_SENSOR_TEMP, temp );
 682              		.loc 1 366 0
 683 032c 7B68     		ldr	r3, [r7, #4]
 684 032e 0020     		mov	r0, #0
 685 0330 191C     		add	r1, r3, #0
 686 0332 FFF7FEFF 		bl	set_float_sensor_data
 367:RTD_sensor.c  ****             RTD_state = RTD_SETUP_CALIBRATE_CURRENT;
 687              		.loc 1 367 0
 688 0336 054B     		ldr	r3, .L29
 689 0338 0122     		mov	r2, #1
 690 033a 1A60     		str	r2, [r3]
 368:RTD_sensor.c  ****             break;
 691              		.loc 1 368 0
 692 033c 03E0     		b	.L10
 693              	.L11:
 369:RTD_sensor.c  ****         default :
 370:RTD_sensor.c  ****             RTD_state = RTD_INIT;
 694              		.loc 1 370 0
 695 033e 034B     		ldr	r3, .L29
 696 0340 0022     		mov	r2, #0
 697 0342 1A60     		str	r2, [r3]
 371:RTD_sensor.c  ****             break;
 698              		.loc 1 371 0
 699 0344 C046     		mov	r8, r8
 700              	.L10:
 372:RTD_sensor.c  ****     }
 373:RTD_sensor.c  **** 
 374:RTD_sensor.c  **** }
 701              		.loc 1 374 0
 702 0346 BD46     		mov	sp, r7
 703 0348 03B0     		add	sp, sp, #12
 704              		@ sp needed
 705 034a F0BD     		pop	{r4, r5, r6, r7, pc}
 706              	.L30:
 707              		.align	2
 708              	.L29:
 709 034c 00000000 		.word	RTD_state
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 20


 710 0350 00000000 		.word	.L13
 711 0354 00000000 		.word	ADC_SAR_SEQ_ISR_LOC
 712 0358 00000000 		.word	dataReady
 713 035c 00000000 		.word	zeroCurrentOffset
 714 0360 00000000 		.word	result
 715 0364 00000000 		.word	ref_voltage
 716 0368 FCA9F1D2 		.word	-755914244
 717 036c 4D62403F 		.word	1061184077
 718 0370 B81E85EB 		.word	-343597384
 719 0374 51285940 		.word	1079584849
 720 0378 00000000 		.word	current_source
 721 037c 00000000 		.word	rtdCalVoltage
 722 0380 00000000 		.word	rtdVoltage
 723 0384 00408F40 		.word	1083129856
 724 0388 00000000 		.word	rtdRes
 725 038c 00000000 		.word	rtdTemp
 726 0390 0000C842 		.word	1120403456
 727              		.cfi_endproc
 728              	.LFE38:
 729              		.size	process_RTD, .-process_RTD
 730              		.text
 731              	.Letext0:
 732              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 733              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 734              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 735              		.section	.debug_info,"",%progbits
 736              	.Ldebug_info0:
 737 0000 51020000 		.4byte	0x251
 738 0004 0400     		.2byte	0x4
 739 0006 00000000 		.4byte	.Ldebug_abbrev0
 740 000a 04       		.byte	0x4
 741 000b 01       		.uleb128 0x1
 742 000c 3E010000 		.4byte	.LASF45
 743 0010 01       		.byte	0x1
 744 0011 8B000000 		.4byte	.LASF46
 745 0015 46000000 		.4byte	.LASF47
 746 0019 00000000 		.4byte	.Ldebug_ranges0+0
 747 001d 00000000 		.4byte	0
 748 0021 00000000 		.4byte	.Ldebug_line0
 749 0025 02       		.uleb128 0x2
 750 0026 01       		.byte	0x1
 751 0027 06       		.byte	0x6
 752 0028 0E030000 		.4byte	.LASF0
 753 002c 02       		.uleb128 0x2
 754 002d 01       		.byte	0x1
 755 002e 08       		.byte	0x8
 756 002f BE000000 		.4byte	.LASF1
 757 0033 02       		.uleb128 0x2
 758 0034 02       		.byte	0x2
 759 0035 05       		.byte	0x5
 760 0036 D5020000 		.4byte	.LASF2
 761 003a 02       		.uleb128 0x2
 762 003b 02       		.byte	0x2
 763 003c 07       		.byte	0x7
 764 003d 8A020000 		.4byte	.LASF3
 765 0041 02       		.uleb128 0x2
 766 0042 04       		.byte	0x4
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 21


 767 0043 05       		.byte	0x5
 768 0044 05030000 		.4byte	.LASF4
 769 0048 03       		.uleb128 0x3
 770 0049 F3000000 		.4byte	.LASF9
 771 004d 02       		.byte	0x2
 772 004e 41       		.byte	0x41
 773 004f 53000000 		.4byte	0x53
 774 0053 02       		.uleb128 0x2
 775 0054 04       		.byte	0x4
 776 0055 07       		.byte	0x7
 777 0056 DB010000 		.4byte	.LASF5
 778 005a 02       		.uleb128 0x2
 779 005b 08       		.byte	0x8
 780 005c 05       		.byte	0x5
 781 005d 9D020000 		.4byte	.LASF6
 782 0061 02       		.uleb128 0x2
 783 0062 08       		.byte	0x8
 784 0063 07       		.byte	0x7
 785 0064 1A020000 		.4byte	.LASF7
 786 0068 04       		.uleb128 0x4
 787 0069 04       		.byte	0x4
 788 006a 05       		.byte	0x5
 789 006b 696E7400 		.ascii	"int\000"
 790 006f 02       		.uleb128 0x2
 791 0070 04       		.byte	0x4
 792 0071 07       		.byte	0x7
 793 0072 ED010000 		.4byte	.LASF8
 794 0076 03       		.uleb128 0x3
 795 0077 FC020000 		.4byte	.LASF10
 796 007b 03       		.byte	0x3
 797 007c 2D       		.byte	0x2d
 798 007d 48000000 		.4byte	0x48
 799 0081 05       		.uleb128 0x5
 800 0082 CC010000 		.4byte	.LASF11
 801 0086 04       		.byte	0x4
 802 0087 BB01     		.2byte	0x1bb
 803 0089 53000000 		.4byte	0x53
 804 008d 05       		.uleb128 0x5
 805 008e CC000000 		.4byte	.LASF12
 806 0092 04       		.byte	0x4
 807 0093 BD01     		.2byte	0x1bd
 808 0095 33000000 		.4byte	0x33
 809 0099 05       		.uleb128 0x5
 810 009a ED000000 		.4byte	.LASF13
 811 009e 04       		.byte	0x4
 812 009f BE01     		.2byte	0x1be
 813 00a1 41000000 		.4byte	0x41
 814 00a5 02       		.uleb128 0x2
 815 00a6 04       		.byte	0x4
 816 00a7 04       		.byte	0x4
 817 00a8 37000000 		.4byte	.LASF14
 818 00ac 02       		.uleb128 0x2
 819 00ad 08       		.byte	0x8
 820 00ae 04       		.byte	0x4
 821 00af 98000000 		.4byte	.LASF15
 822 00b3 02       		.uleb128 0x2
 823 00b4 01       		.byte	0x1
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 22


 824 00b5 08       		.byte	0x8
 825 00b6 AB020000 		.4byte	.LASF16
 826 00ba 05       		.uleb128 0x5
 827 00bb 1D000000 		.4byte	.LASF17
 828 00bf 04       		.byte	0x4
 829 00c0 6502     		.2byte	0x265
 830 00c2 C6000000 		.4byte	0xc6
 831 00c6 06       		.uleb128 0x6
 832 00c7 81000000 		.4byte	0x81
 833 00cb 02       		.uleb128 0x2
 834 00cc 04       		.byte	0x4
 835 00cd 07       		.byte	0x7
 836 00ce 81020000 		.4byte	.LASF18
 837 00d2 07       		.uleb128 0x7
 838 00d3 01       		.byte	0x1
 839 00d4 01       		.byte	0x1
 840 00d5 5A       		.byte	0x5a
 841 00d6 1D010000 		.4byte	0x11d
 842 00da 08       		.uleb128 0x8
 843 00db DF020000 		.4byte	.LASF19
 844 00df 00       		.sleb128 0
 845 00e0 08       		.uleb128 0x8
 846 00e1 18010000 		.4byte	.LASF20
 847 00e5 01       		.sleb128 1
 848 00e6 08       		.uleb128 0x8
 849 00e7 FA010000 		.4byte	.LASF21
 850 00eb 02       		.sleb128 2
 851 00ec 08       		.uleb128 0x8
 852 00ed D2000000 		.4byte	.LASF22
 853 00f1 03       		.sleb128 3
 854 00f2 08       		.uleb128 0x8
 855 00f3 E8020000 		.4byte	.LASF23
 856 00f7 04       		.sleb128 4
 857 00f8 08       		.uleb128 0x8
 858 00f9 9F000000 		.4byte	.LASF24
 859 00fd 05       		.sleb128 5
 860 00fe 08       		.uleb128 0x8
 861 00ff 47020000 		.4byte	.LASF25
 862 0103 06       		.sleb128 6
 863 0104 08       		.uleb128 0x8
 864 0105 69020000 		.4byte	.LASF26
 865 0109 07       		.sleb128 7
 866 010a 08       		.uleb128 0x8
 867 010b 55020000 		.4byte	.LASF27
 868 010f 08       		.sleb128 8
 869 0110 08       		.uleb128 0x8
 870 0111 0A010000 		.4byte	.LASF28
 871 0115 09       		.sleb128 9
 872 0116 08       		.uleb128 0x8
 873 0117 26030000 		.4byte	.LASF29
 874 011b 0A       		.sleb128 10
 875 011c 00       		.byte	0
 876 011d 09       		.uleb128 0x9
 877 011e 23000000 		.4byte	.LASF32
 878 0122 01       		.byte	0x1
 879 0123 A7       		.byte	0xa7
 880 0124 00000000 		.4byte	.LFB36
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 23


 881 0128 88000000 		.4byte	.LFE36-.LFB36
 882 012c 01       		.uleb128 0x1
 883 012d 9C       		.byte	0x9c
 884 012e 4F010000 		.4byte	0x14f
 885 0132 0A       		.uleb128 0xa
 886 0133 FE000000 		.4byte	.LASF30
 887 0137 01       		.byte	0x1
 888 0138 A9       		.byte	0xa9
 889 0139 81000000 		.4byte	0x81
 890 013d 02       		.uleb128 0x2
 891 013e 91       		.byte	0x91
 892 013f 74       		.sleb128 -12
 893 0140 0A       		.uleb128 0xa
 894 0141 B0020000 		.4byte	.LASF31
 895 0145 01       		.byte	0x1
 896 0146 AA       		.byte	0xaa
 897 0147 81000000 		.4byte	0x81
 898 014b 02       		.uleb128 0x2
 899 014c 91       		.byte	0x91
 900 014d 70       		.sleb128 -16
 901 014e 00       		.byte	0
 902 014f 0B       		.uleb128 0xb
 903 0150 3D000000 		.4byte	.LASF48
 904 0154 01       		.byte	0x1
 905 0155 CB       		.byte	0xcb
 906 0156 00000000 		.4byte	.LFB37
 907 015a 14000000 		.4byte	.LFE37-.LFB37
 908 015e 01       		.uleb128 0x1
 909 015f 9C       		.byte	0x9c
 910 0160 09       		.uleb128 0x9
 911 0161 38030000 		.4byte	.LASF33
 912 0165 01       		.byte	0x1
 913 0166 D7       		.byte	0xd7
 914 0167 00000000 		.4byte	.LFB38
 915 016b 94030000 		.4byte	.LFE38-.LFB38
 916 016f 01       		.uleb128 0x1
 917 0170 9C       		.byte	0x9c
 918 0171 84010000 		.4byte	0x184
 919 0175 0A       		.uleb128 0xa
 920 0176 E8000000 		.4byte	.LASF34
 921 017a 01       		.byte	0x1
 922 017b D9       		.byte	0xd9
 923 017c A5000000 		.4byte	0xa5
 924 0180 02       		.uleb128 0x2
 925 0181 91       		.byte	0x91
 926 0182 64       		.sleb128 -28
 927 0183 00       		.byte	0
 928 0184 0C       		.uleb128 0xc
 929 0185 1A030000 		.4byte	.LASF35
 930 0189 01       		.byte	0x1
 931 018a 79       		.byte	0x79
 932 018b 76000000 		.4byte	0x76
 933 018f 05       		.uleb128 0x5
 934 0190 03       		.byte	0x3
 935 0191 00000000 		.4byte	ref_voltage
 936 0195 0C       		.uleb128 0xc
 937 0196 BD020000 		.4byte	.LASF36
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 24


 938 019a 01       		.byte	0x1
 939 019b 7D       		.byte	0x7d
 940 019c 81000000 		.4byte	0x81
 941 01a0 05       		.uleb128 0x5
 942 01a1 03       		.byte	0x3
 943 01a2 00000000 		.4byte	rtdCalVoltage
 944 01a6 0C       		.uleb128 0xc
 945 01a7 B7000000 		.4byte	.LASF37
 946 01ab 01       		.byte	0x1
 947 01ac 81       		.byte	0x81
 948 01ad 81000000 		.4byte	0x81
 949 01b1 05       		.uleb128 0x5
 950 01b2 03       		.byte	0x3
 951 01b3 00000000 		.4byte	rtdRes
 952 01b7 0C       		.uleb128 0xc
 953 01b8 00000000 		.4byte	.LASF38
 954 01bc 01       		.byte	0x1
 955 01bd 85       		.byte	0x85
 956 01be 81000000 		.4byte	0x81
 957 01c2 05       		.uleb128 0x5
 958 01c3 03       		.byte	0x3
 959 01c4 00000000 		.4byte	rtdVoltage
 960 01c8 0C       		.uleb128 0xc
 961 01c9 D3010000 		.4byte	.LASF39
 962 01cd 01       		.byte	0x1
 963 01ce 89       		.byte	0x89
 964 01cf 99000000 		.4byte	0x99
 965 01d3 05       		.uleb128 0x5
 966 01d4 03       		.byte	0x3
 967 01d5 00000000 		.4byte	rtdTemp
 968 01d9 0C       		.uleb128 0xc
 969 01da 0B000000 		.4byte	.LASF40
 970 01de 01       		.byte	0x1
 971 01df 8D       		.byte	0x8d
 972 01e0 81000000 		.4byte	0x81
 973 01e4 05       		.uleb128 0x5
 974 01e5 03       		.byte	0x3
 975 01e6 00000000 		.4byte	zeroCurrentOffset
 976 01ea 0C       		.uleb128 0xc
 977 01eb 31020000 		.4byte	.LASF41
 978 01ef 01       		.byte	0x1
 979 01f0 91       		.byte	0x91
 980 01f1 A5000000 		.4byte	0xa5
 981 01f5 05       		.uleb128 0x5
 982 01f6 03       		.byte	0x3
 983 01f7 00000000 		.4byte	current_source
 984 01fb 0C       		.uleb128 0xc
 985 01fc CB020000 		.4byte	.LASF42
 986 0200 01       		.byte	0x1
 987 0201 95       		.byte	0x95
 988 0202 C6000000 		.4byte	0xc6
 989 0206 05       		.uleb128 0x5
 990 0207 03       		.byte	0x3
 991 0208 00000000 		.4byte	dataReady
 992 020c 0D       		.uleb128 0xd
 993 020d 8D000000 		.4byte	0x8d
 994 0211 1C020000 		.4byte	0x21c
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 25


 995 0215 0E       		.uleb128 0xe
 996 0216 CB000000 		.4byte	0xcb
 997 021a 03       		.byte	0x3
 998 021b 00       		.byte	0
 999 021c 0C       		.uleb128 0xc
 1000 021d 40020000 		.4byte	.LASF43
 1001 0221 01       		.byte	0x1
 1002 0222 99       		.byte	0x99
 1003 0223 2D020000 		.4byte	0x22d
 1004 0227 05       		.uleb128 0x5
 1005 0228 03       		.byte	0x3
 1006 0229 00000000 		.4byte	result
 1007 022d 06       		.uleb128 0x6
 1008 022e 0C020000 		.4byte	0x20c
 1009 0232 0C       		.uleb128 0xc
 1010 0233 34010000 		.4byte	.LASF44
 1011 0237 01       		.byte	0x1
 1012 0238 9D       		.byte	0x9d
 1013 0239 76000000 		.4byte	0x76
 1014 023d 05       		.uleb128 0x5
 1015 023e 03       		.byte	0x3
 1016 023f 00000000 		.4byte	RTD_state
 1017 0243 0C       		.uleb128 0xc
 1018 0244 E8000000 		.4byte	.LASF34
 1019 0248 01       		.byte	0x1
 1020 0249 D0       		.byte	0xd0
 1021 024a A5000000 		.4byte	0xa5
 1022 024e 05       		.uleb128 0x5
 1023 024f 03       		.byte	0x3
 1024 0250 00000000 		.4byte	temp
 1025 0254 00       		.byte	0
 1026              		.section	.debug_abbrev,"",%progbits
 1027              	.Ldebug_abbrev0:
 1028 0000 01       		.uleb128 0x1
 1029 0001 11       		.uleb128 0x11
 1030 0002 01       		.byte	0x1
 1031 0003 25       		.uleb128 0x25
 1032 0004 0E       		.uleb128 0xe
 1033 0005 13       		.uleb128 0x13
 1034 0006 0B       		.uleb128 0xb
 1035 0007 03       		.uleb128 0x3
 1036 0008 0E       		.uleb128 0xe
 1037 0009 1B       		.uleb128 0x1b
 1038 000a 0E       		.uleb128 0xe
 1039 000b 55       		.uleb128 0x55
 1040 000c 17       		.uleb128 0x17
 1041 000d 11       		.uleb128 0x11
 1042 000e 01       		.uleb128 0x1
 1043 000f 10       		.uleb128 0x10
 1044 0010 17       		.uleb128 0x17
 1045 0011 00       		.byte	0
 1046 0012 00       		.byte	0
 1047 0013 02       		.uleb128 0x2
 1048 0014 24       		.uleb128 0x24
 1049 0015 00       		.byte	0
 1050 0016 0B       		.uleb128 0xb
 1051 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 26


 1052 0018 3E       		.uleb128 0x3e
 1053 0019 0B       		.uleb128 0xb
 1054 001a 03       		.uleb128 0x3
 1055 001b 0E       		.uleb128 0xe
 1056 001c 00       		.byte	0
 1057 001d 00       		.byte	0
 1058 001e 03       		.uleb128 0x3
 1059 001f 16       		.uleb128 0x16
 1060 0020 00       		.byte	0
 1061 0021 03       		.uleb128 0x3
 1062 0022 0E       		.uleb128 0xe
 1063 0023 3A       		.uleb128 0x3a
 1064 0024 0B       		.uleb128 0xb
 1065 0025 3B       		.uleb128 0x3b
 1066 0026 0B       		.uleb128 0xb
 1067 0027 49       		.uleb128 0x49
 1068 0028 13       		.uleb128 0x13
 1069 0029 00       		.byte	0
 1070 002a 00       		.byte	0
 1071 002b 04       		.uleb128 0x4
 1072 002c 24       		.uleb128 0x24
 1073 002d 00       		.byte	0
 1074 002e 0B       		.uleb128 0xb
 1075 002f 0B       		.uleb128 0xb
 1076 0030 3E       		.uleb128 0x3e
 1077 0031 0B       		.uleb128 0xb
 1078 0032 03       		.uleb128 0x3
 1079 0033 08       		.uleb128 0x8
 1080 0034 00       		.byte	0
 1081 0035 00       		.byte	0
 1082 0036 05       		.uleb128 0x5
 1083 0037 16       		.uleb128 0x16
 1084 0038 00       		.byte	0
 1085 0039 03       		.uleb128 0x3
 1086 003a 0E       		.uleb128 0xe
 1087 003b 3A       		.uleb128 0x3a
 1088 003c 0B       		.uleb128 0xb
 1089 003d 3B       		.uleb128 0x3b
 1090 003e 05       		.uleb128 0x5
 1091 003f 49       		.uleb128 0x49
 1092 0040 13       		.uleb128 0x13
 1093 0041 00       		.byte	0
 1094 0042 00       		.byte	0
 1095 0043 06       		.uleb128 0x6
 1096 0044 35       		.uleb128 0x35
 1097 0045 00       		.byte	0
 1098 0046 49       		.uleb128 0x49
 1099 0047 13       		.uleb128 0x13
 1100 0048 00       		.byte	0
 1101 0049 00       		.byte	0
 1102 004a 07       		.uleb128 0x7
 1103 004b 04       		.uleb128 0x4
 1104 004c 01       		.byte	0x1
 1105 004d 0B       		.uleb128 0xb
 1106 004e 0B       		.uleb128 0xb
 1107 004f 3A       		.uleb128 0x3a
 1108 0050 0B       		.uleb128 0xb
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 27


 1109 0051 3B       		.uleb128 0x3b
 1110 0052 0B       		.uleb128 0xb
 1111 0053 01       		.uleb128 0x1
 1112 0054 13       		.uleb128 0x13
 1113 0055 00       		.byte	0
 1114 0056 00       		.byte	0
 1115 0057 08       		.uleb128 0x8
 1116 0058 28       		.uleb128 0x28
 1117 0059 00       		.byte	0
 1118 005a 03       		.uleb128 0x3
 1119 005b 0E       		.uleb128 0xe
 1120 005c 1C       		.uleb128 0x1c
 1121 005d 0D       		.uleb128 0xd
 1122 005e 00       		.byte	0
 1123 005f 00       		.byte	0
 1124 0060 09       		.uleb128 0x9
 1125 0061 2E       		.uleb128 0x2e
 1126 0062 01       		.byte	0x1
 1127 0063 3F       		.uleb128 0x3f
 1128 0064 19       		.uleb128 0x19
 1129 0065 03       		.uleb128 0x3
 1130 0066 0E       		.uleb128 0xe
 1131 0067 3A       		.uleb128 0x3a
 1132 0068 0B       		.uleb128 0xb
 1133 0069 3B       		.uleb128 0x3b
 1134 006a 0B       		.uleb128 0xb
 1135 006b 27       		.uleb128 0x27
 1136 006c 19       		.uleb128 0x19
 1137 006d 11       		.uleb128 0x11
 1138 006e 01       		.uleb128 0x1
 1139 006f 12       		.uleb128 0x12
 1140 0070 06       		.uleb128 0x6
 1141 0071 40       		.uleb128 0x40
 1142 0072 18       		.uleb128 0x18
 1143 0073 9642     		.uleb128 0x2116
 1144 0075 19       		.uleb128 0x19
 1145 0076 01       		.uleb128 0x1
 1146 0077 13       		.uleb128 0x13
 1147 0078 00       		.byte	0
 1148 0079 00       		.byte	0
 1149 007a 0A       		.uleb128 0xa
 1150 007b 34       		.uleb128 0x34
 1151 007c 00       		.byte	0
 1152 007d 03       		.uleb128 0x3
 1153 007e 0E       		.uleb128 0xe
 1154 007f 3A       		.uleb128 0x3a
 1155 0080 0B       		.uleb128 0xb
 1156 0081 3B       		.uleb128 0x3b
 1157 0082 0B       		.uleb128 0xb
 1158 0083 49       		.uleb128 0x49
 1159 0084 13       		.uleb128 0x13
 1160 0085 02       		.uleb128 0x2
 1161 0086 18       		.uleb128 0x18
 1162 0087 00       		.byte	0
 1163 0088 00       		.byte	0
 1164 0089 0B       		.uleb128 0xb
 1165 008a 2E       		.uleb128 0x2e
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 28


 1166 008b 00       		.byte	0
 1167 008c 3F       		.uleb128 0x3f
 1168 008d 19       		.uleb128 0x19
 1169 008e 03       		.uleb128 0x3
 1170 008f 0E       		.uleb128 0xe
 1171 0090 3A       		.uleb128 0x3a
 1172 0091 0B       		.uleb128 0xb
 1173 0092 3B       		.uleb128 0x3b
 1174 0093 0B       		.uleb128 0xb
 1175 0094 27       		.uleb128 0x27
 1176 0095 19       		.uleb128 0x19
 1177 0096 11       		.uleb128 0x11
 1178 0097 01       		.uleb128 0x1
 1179 0098 12       		.uleb128 0x12
 1180 0099 06       		.uleb128 0x6
 1181 009a 40       		.uleb128 0x40
 1182 009b 18       		.uleb128 0x18
 1183 009c 9742     		.uleb128 0x2117
 1184 009e 19       		.uleb128 0x19
 1185 009f 00       		.byte	0
 1186 00a0 00       		.byte	0
 1187 00a1 0C       		.uleb128 0xc
 1188 00a2 34       		.uleb128 0x34
 1189 00a3 00       		.byte	0
 1190 00a4 03       		.uleb128 0x3
 1191 00a5 0E       		.uleb128 0xe
 1192 00a6 3A       		.uleb128 0x3a
 1193 00a7 0B       		.uleb128 0xb
 1194 00a8 3B       		.uleb128 0x3b
 1195 00a9 0B       		.uleb128 0xb
 1196 00aa 49       		.uleb128 0x49
 1197 00ab 13       		.uleb128 0x13
 1198 00ac 3F       		.uleb128 0x3f
 1199 00ad 19       		.uleb128 0x19
 1200 00ae 02       		.uleb128 0x2
 1201 00af 18       		.uleb128 0x18
 1202 00b0 00       		.byte	0
 1203 00b1 00       		.byte	0
 1204 00b2 0D       		.uleb128 0xd
 1205 00b3 01       		.uleb128 0x1
 1206 00b4 01       		.byte	0x1
 1207 00b5 49       		.uleb128 0x49
 1208 00b6 13       		.uleb128 0x13
 1209 00b7 01       		.uleb128 0x1
 1210 00b8 13       		.uleb128 0x13
 1211 00b9 00       		.byte	0
 1212 00ba 00       		.byte	0
 1213 00bb 0E       		.uleb128 0xe
 1214 00bc 21       		.uleb128 0x21
 1215 00bd 00       		.byte	0
 1216 00be 49       		.uleb128 0x49
 1217 00bf 13       		.uleb128 0x13
 1218 00c0 2F       		.uleb128 0x2f
 1219 00c1 0B       		.uleb128 0xb
 1220 00c2 00       		.byte	0
 1221 00c3 00       		.byte	0
 1222 00c4 00       		.byte	0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 29


 1223              		.section	.debug_aranges,"",%progbits
 1224 0000 2C000000 		.4byte	0x2c
 1225 0004 0200     		.2byte	0x2
 1226 0006 00000000 		.4byte	.Ldebug_info0
 1227 000a 04       		.byte	0x4
 1228 000b 00       		.byte	0
 1229 000c 0000     		.2byte	0
 1230 000e 0000     		.2byte	0
 1231 0010 00000000 		.4byte	.LFB36
 1232 0014 88000000 		.4byte	.LFE36-.LFB36
 1233 0018 00000000 		.4byte	.LFB37
 1234 001c 14000000 		.4byte	.LFE37-.LFB37
 1235 0020 00000000 		.4byte	.LFB38
 1236 0024 94030000 		.4byte	.LFE38-.LFB38
 1237 0028 00000000 		.4byte	0
 1238 002c 00000000 		.4byte	0
 1239              		.section	.debug_ranges,"",%progbits
 1240              	.Ldebug_ranges0:
 1241 0000 00000000 		.4byte	.LFB36
 1242 0004 88000000 		.4byte	.LFE36
 1243 0008 00000000 		.4byte	.LFB37
 1244 000c 14000000 		.4byte	.LFE37
 1245 0010 00000000 		.4byte	.LFB38
 1246 0014 94030000 		.4byte	.LFE38
 1247 0018 00000000 		.4byte	0
 1248 001c 00000000 		.4byte	0
 1249              		.section	.debug_line,"",%progbits
 1250              	.Ldebug_line0:
 1251 0000 D5010000 		.section	.debug_str,"MS",%progbits,1
 1251      02003F01 
 1251      00000201 
 1251      FB0E0D00 
 1251      01010101 
 1252              	.LASF38:
 1253 0000 72746456 		.ascii	"rtdVoltage\000"
 1253      6F6C7461 
 1253      676500
 1254              	.LASF40:
 1255 000b 7A65726F 		.ascii	"zeroCurrentOffset\000"
 1255      43757272 
 1255      656E744F 
 1255      66667365 
 1255      7400
 1256              	.LASF17:
 1257 001d 72656733 		.ascii	"reg32\000"
 1257      3200
 1258              	.LASF32:
 1259 0023 4144435F 		.ascii	"ADC_SAR_SEQ_ISR_LOC\000"
 1259      5341525F 
 1259      5345515F 
 1259      4953525F 
 1259      4C4F4300 
 1260              	.LASF14:
 1261 0037 666C6F61 		.ascii	"float\000"
 1261      7400
 1262              	.LASF48:
 1263 003d 696E6974 		.ascii	"init_RTD\000"
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 30


 1263      5F525444 
 1263      00
 1264              	.LASF47:
 1265 0046 443A5C44 		.ascii	"D:\\Dropbox\\IoT Development\\Cypress PSoC Developm"
 1265      726F7062 
 1265      6F785C49 
 1265      6F542044 
 1265      6576656C 
 1266 0076 656E745C 		.ascii	"ent\\RTD Design.cydsn\000"
 1266      52544420 
 1266      44657369 
 1266      676E2E63 
 1266      7964736E 
 1267              	.LASF46:
 1268 008b 5254445F 		.ascii	"RTD_sensor.c\000"
 1268      73656E73 
 1268      6F722E63 
 1268      00
 1269              	.LASF15:
 1270 0098 646F7562 		.ascii	"double\000"
 1270      6C6500
 1271              	.LASF24:
 1272 009f 5254445F 		.ascii	"RTD_GET_CAL_ZERO_OFFSET\000"
 1272      4745545F 
 1272      43414C5F 
 1272      5A45524F 
 1272      5F4F4646 
 1273              	.LASF37:
 1274 00b7 72746452 		.ascii	"rtdRes\000"
 1274      657300
 1275              	.LASF1:
 1276 00be 756E7369 		.ascii	"unsigned char\000"
 1276      676E6564 
 1276      20636861 
 1276      7200
 1277              	.LASF12:
 1278 00cc 696E7431 		.ascii	"int16\000"
 1278      3600
 1279              	.LASF22:
 1280 00d2 5254445F 		.ascii	"RTD_CURRENT_CALIBRATE\000"
 1280      43555252 
 1280      454E545F 
 1280      43414C49 
 1280      42524154 
 1281              	.LASF34:
 1282 00e8 74656D70 		.ascii	"temp\000"
 1282      00
 1283              	.LASF13:
 1284 00ed 696E7433 		.ascii	"int32\000"
 1284      3200
 1285              	.LASF9:
 1286 00f3 5F5F7569 		.ascii	"__uint32_t\000"
 1286      6E743332 
 1286      5F7400
 1287              	.LASF30:
 1288 00fe 696E7472 		.ascii	"intr_status\000"
 1288      5F737461 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 31


 1288      74757300 
 1289              	.LASF28:
 1290 010a 5254445F 		.ascii	"RTD_READ_TEMP\000"
 1290      52454144 
 1290      5F54454D 
 1290      5000
 1291              	.LASF20:
 1292 0118 5254445F 		.ascii	"RTD_SETUP_CALIBRATE_CURRENT\000"
 1292      53455455 
 1292      505F4341 
 1292      4C494252 
 1292      4154455F 
 1293              	.LASF44:
 1294 0134 5254445F 		.ascii	"RTD_state\000"
 1294      73746174 
 1294      6500
 1295              	.LASF45:
 1296 013e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1296      4320342E 
 1296      392E3320 
 1296      32303135 
 1296      30333033 
 1297 0171 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1297      20726576 
 1297      6973696F 
 1297      6E203232 
 1297      31323230 
 1298 01a4 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1298      66756E63 
 1298      74696F6E 
 1298      2D736563 
 1298      74696F6E 
 1299              	.LASF11:
 1300 01cc 75696E74 		.ascii	"uint32\000"
 1300      333200
 1301              	.LASF39:
 1302 01d3 72746454 		.ascii	"rtdTemp\000"
 1302      656D7000 
 1303              	.LASF5:
 1304 01db 6C6F6E67 		.ascii	"long unsigned int\000"
 1304      20756E73 
 1304      69676E65 
 1304      6420696E 
 1304      7400
 1305              	.LASF8:
 1306 01ed 756E7369 		.ascii	"unsigned int\000"
 1306      676E6564 
 1306      20696E74 
 1306      00
 1307              	.LASF21:
 1308 01fa 5254445F 		.ascii	"RTD_GET_CURRENT_CAL_ZERO_OFFSET\000"
 1308      4745545F 
 1308      43555252 
 1308      454E545F 
 1308      43414C5F 
 1309              	.LASF7:
 1310 021a 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 32


 1310      206C6F6E 
 1310      6720756E 
 1310      7369676E 
 1310      65642069 
 1311              	.LASF41:
 1312 0231 63757272 		.ascii	"current_source\000"
 1312      656E745F 
 1312      736F7572 
 1312      636500
 1313              	.LASF43:
 1314 0240 72657375 		.ascii	"result\000"
 1314      6C7400
 1315              	.LASF25:
 1316 0247 5254445F 		.ascii	"RTD_CALIBRATE\000"
 1316      43414C49 
 1316      42524154 
 1316      4500
 1317              	.LASF27:
 1318 0255 5254445F 		.ascii	"RTD_SETUP_READ_TEMP\000"
 1318      53455455 
 1318      505F5245 
 1318      41445F54 
 1318      454D5000 
 1319              	.LASF26:
 1320 0269 5254445F 		.ascii	"RTD_GET_RTD_ZERO_OFFSET\000"
 1320      4745545F 
 1320      5254445F 
 1320      5A45524F 
 1320      5F4F4646 
 1321              	.LASF18:
 1322 0281 73697A65 		.ascii	"sizetype\000"
 1322      74797065 
 1322      00
 1323              	.LASF3:
 1324 028a 73686F72 		.ascii	"short unsigned int\000"
 1324      7420756E 
 1324      7369676E 
 1324      65642069 
 1324      6E7400
 1325              	.LASF6:
 1326 029d 6C6F6E67 		.ascii	"long long int\000"
 1326      206C6F6E 
 1326      6720696E 
 1326      7400
 1327              	.LASF16:
 1328 02ab 63686172 		.ascii	"char\000"
 1328      00
 1329              	.LASF31:
 1330 02b0 72616E67 		.ascii	"range_status\000"
 1330      655F7374 
 1330      61747573 
 1330      00
 1331              	.LASF36:
 1332 02bd 72746443 		.ascii	"rtdCalVoltage\000"
 1332      616C566F 
 1332      6C746167 
 1332      6500
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccSEinvh.s 			page 33


 1333              	.LASF42:
 1334 02cb 64617461 		.ascii	"dataReady\000"
 1334      52656164 
 1334      7900
 1335              	.LASF2:
 1336 02d5 73686F72 		.ascii	"short int\000"
 1336      7420696E 
 1336      7400
 1337              	.LASF19:
 1338 02df 5254445F 		.ascii	"RTD_INIT\000"
 1338      494E4954 
 1338      00
 1339              	.LASF23:
 1340 02e8 5254445F 		.ascii	"RTD_SETUP_CALIBRATE\000"
 1340      53455455 
 1340      505F4341 
 1340      4C494252 
 1340      41544500 
 1341              	.LASF10:
 1342 02fc 75696E74 		.ascii	"uint32_t\000"
 1342      33325F74 
 1342      00
 1343              	.LASF4:
 1344 0305 6C6F6E67 		.ascii	"long int\000"
 1344      20696E74 
 1344      00
 1345              	.LASF0:
 1346 030e 7369676E 		.ascii	"signed char\000"
 1346      65642063 
 1346      68617200 
 1347              	.LASF35:
 1348 031a 7265665F 		.ascii	"ref_voltage\000"
 1348      766F6C74 
 1348      61676500 
 1349              	.LASF29:
 1350 0326 5254445F 		.ascii	"RTD_CALCUATE_TEMP\000"
 1350      43414C43 
 1350      55415445 
 1350      5F54454D 
 1350      5000
 1351              	.LASF33:
 1352 0338 70726F63 		.ascii	"process_RTD\000"
 1352      6573735F 
 1352      52544400 
 1353              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
