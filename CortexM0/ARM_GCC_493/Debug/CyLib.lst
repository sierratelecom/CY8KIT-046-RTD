ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	cydelayFreqHz
  18              		.data
  19              		.align	2
  20              		.type	cydelayFreqHz, %object
  21              		.size	cydelayFreqHz, 4
  22              	cydelayFreqHz:
  23 0000 00366E01 		.word	24000000
  24              		.global	cydelayFreqKhz
  25              		.align	2
  26              		.type	cydelayFreqKhz, %object
  27              		.size	cydelayFreqKhz, 4
  28              	cydelayFreqKhz:
  29 0004 C05D0000 		.word	24000
  30              		.global	cydelayFreqMhz
  31              		.type	cydelayFreqMhz, %object
  32              		.size	cydelayFreqMhz, 1
  33              	cydelayFreqMhz:
  34 0008 18       		.byte	24
  35              		.global	cydelay32kMs
  36 0009 000000   		.align	2
  37              		.type	cydelay32kMs, %object
  38              		.size	cydelay32kMs, 4
  39              	cydelay32kMs:
  40 000c 0000E02E 		.word	786432000
  41              		.bss
  42              		.align	2
  43              	CySysTickCallbacks:
  44 0000 00000000 		.space	20
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              		.global	CySysTickInitVar
  46              		.align	2
  47              		.type	CySysTickInitVar, %object
  48              		.size	CySysTickInitVar, 4
  49              	CySysTickInitVar:
  50 0014 00000000 		.space	4
  51              		.global	cyImoFreqMhz2Reg
  52              		.section	.rodata
  53              		.align	2
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 2


  54              		.type	cyImoFreqMhz2Reg, %object
  55              		.size	cyImoFreqMhz2Reg, 46
  56              	cyImoFreqMhz2Reg:
  57 0000 03       		.byte	3
  58 0001 04       		.byte	4
  59 0002 05       		.byte	5
  60 0003 06       		.byte	6
  61 0004 07       		.byte	7
  62 0005 08       		.byte	8
  63 0006 09       		.byte	9
  64 0007 0A       		.byte	10
  65 0008 0B       		.byte	11
  66 0009 0C       		.byte	12
  67 000a 0E       		.byte	14
  68 000b 0F       		.byte	15
  69 000c 10       		.byte	16
  70 000d 11       		.byte	17
  71 000e 12       		.byte	18
  72 000f 13       		.byte	19
  73 0010 14       		.byte	20
  74 0011 15       		.byte	21
  75 0012 16       		.byte	22
  76 0013 17       		.byte	23
  77 0014 18       		.byte	24
  78 0015 19       		.byte	25
  79 0016 1B       		.byte	27
  80 0017 1C       		.byte	28
  81 0018 1D       		.byte	29
  82 0019 1E       		.byte	30
  83 001a 1F       		.byte	31
  84 001b 20       		.byte	32
  85 001c 21       		.byte	33
  86 001d 22       		.byte	34
  87 001e 23       		.byte	35
  88 001f 25       		.byte	37
  89 0020 26       		.byte	38
  90 0021 27       		.byte	39
  91 0022 28       		.byte	40
  92 0023 29       		.byte	41
  93 0024 2A       		.byte	42
  94 0025 2B       		.byte	43
  95 0026 2E       		.byte	46
  96 0027 2F       		.byte	47
  97 0028 30       		.byte	48
  98 0029 31       		.byte	49
  99 002a 32       		.byte	50
 100 002b 33       		.byte	51
 101 002c 34       		.byte	52
 102 002d 35       		.byte	53
 103              		.global	cyImoFreqMhz2DpllOffset
 104 002e 0000     		.align	2
 105              		.type	cyImoFreqMhz2DpllOffset, %object
 106              		.size	cyImoFreqMhz2DpllOffset, 23
 107              	cyImoFreqMhz2DpllOffset:
 108 0030 EE       		.byte	-18
 109 0031 DB       		.byte	-37
 110 0032 C9       		.byte	-55
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 3


 111 0033 B9       		.byte	-71
 112 0034 AA       		.byte	-86
 113 0035 9B       		.byte	-101
 114 0036 8E       		.byte	-114
 115 0037 82       		.byte	-126
 116 0038 76       		.byte	118
 117 0039 6B       		.byte	107
 118 003a 60       		.byte	96
 119 003b 56       		.byte	86
 120 003c 4D       		.byte	77
 121 003d 44       		.byte	68
 122 003e 3B       		.byte	59
 123 003f 33       		.byte	51
 124 0040 2C       		.byte	44
 125 0041 24       		.byte	36
 126 0042 1D       		.byte	29
 127 0043 17       		.byte	23
 128 0044 10       		.byte	16
 129 0045 0A       		.byte	10
 130 0046 04       		.byte	4
 131              		.global	CySysClkImoTrim4
 132 0047 00       		.bss
 133              		.align	2
 134              		.type	CySysClkImoTrim4, %object
 135              		.size	CySysClkImoTrim4, 4
 136              	CySysClkImoTrim4:
 137 0018 00000000 		.space	4
 138              		.global	CySysClkPumpConfig
 139              		.data
 140              		.align	2
 141              		.type	CySysClkPumpConfig, %object
 142              		.size	CySysClkPumpConfig, 4
 143              	CySysClkPumpConfig:
 144 0010 01000000 		.word	1
 145              		.section	.text.CySysClkImoStart,"ax",%progbits
 146              		.align	2
 147              		.global	CySysClkImoStart
 148              		.code	16
 149              		.thumb_func
 150              		.type	CySysClkImoStart, %function
 151              	CySysClkImoStart:
 152              	.LFB1:
 153              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.50
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 4


  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 5


  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
 154              		.loc 1 108 0
 155              		.cfi_startproc
 156 0000 80B5     		push	{r7, lr}
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 7, -8
 159              		.cfi_offset 14, -4
 160 0002 00AF     		add	r7, sp, #0
 161              		.cfi_def_cfa_register 7
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 162              		.loc 1 109 0
 163 0004 044B     		ldr	r3, .L2
 164 0006 044A     		ldr	r2, .L2
 165 0008 1268     		ldr	r2, [r2]
 166 000a 8021     		mov	r1, #128
 167 000c 0906     		lsl	r1, r1, #24
 168 000e 0A43     		orr	r2, r1
 169 0010 1A60     		str	r2, [r3]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 6


 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
 170              		.loc 1 124 0
 171 0012 BD46     		mov	sp, r7
 172              		@ sp needed
 173 0014 80BD     		pop	{r7, pc}
 174              	.L3:
 175 0016 C046     		.align	2
 176              	.L2:
 177 0018 08010B40 		.word	1074462984
 178              		.cfi_endproc
 179              	.LFE1:
 180              		.size	CySysClkImoStart, .-CySysClkImoStart
 181              		.section	.text.CySysClkImoStop,"ax",%progbits
 182              		.align	2
 183              		.global	CySysClkImoStop
 184              		.code	16
 185              		.thumb_func
 186              		.type	CySysClkImoStop, %function
 187              	CySysClkImoStop:
 188              	.LFB2:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
 189              		.loc 1 140 0
 190              		.cfi_startproc
 191 0000 80B5     		push	{r7, lr}
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 7, -8
 194              		.cfi_offset 14, -4
 195 0002 00AF     		add	r7, sp, #0
 196              		.cfi_def_cfa_register 7
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 7


 197              		.loc 1 142 0
 198 0004 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 199              		.loc 1 146 0
 200 0008 FFF7FEFF 		bl	CySysClkImoDisableUsbLock
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 201              		.loc 1 149 0
 202 000c 034B     		ldr	r3, .L5
 203 000e 034A     		ldr	r2, .L5
 204 0010 1268     		ldr	r2, [r2]
 205 0012 5200     		lsl	r2, r2, #1
 206 0014 5208     		lsr	r2, r2, #1
 207 0016 1A60     		str	r2, [r3]
 150:Generated_Source\PSoC4/CyLib.c **** }
 208              		.loc 1 150 0
 209 0018 BD46     		mov	sp, r7
 210              		@ sp needed
 211 001a 80BD     		pop	{r7, pc}
 212              	.L6:
 213              		.align	2
 214              	.L5:
 215 001c 08010B40 		.word	1074462984
 216              		.cfi_endproc
 217              	.LFE2:
 218              		.size	CySysClkImoStop, .-CySysClkImoStop
 219              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 220              		.align	2
 221              		.global	CySysClkImoEnableWcoLock
 222              		.code	16
 223              		.thumb_func
 224              		.type	CySysClkImoEnableWcoLock, %function
 225              	CySysClkImoEnableWcoLock:
 226              	.LFB3:
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 8


 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 227              		.loc 1 176 0
 228              		.cfi_startproc
 229 0000 90B5     		push	{r4, r7, lr}
 230              		.cfi_def_cfa_offset 12
 231              		.cfi_offset 4, -12
 232              		.cfi_offset 7, -8
 233              		.cfi_offset 14, -4
 234 0002 87B0     		sub	sp, sp, #28
 235              		.cfi_def_cfa_offset 40
 236 0004 00AF     		add	r7, sp, #0
 237              		.cfi_def_cfa_register 7
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 238              		.loc 1 184 0
 239 0006 0023     		mov	r3, #0
 240 0008 BB60     		str	r3, [r7, #8]
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 241              		.loc 1 187 0
 242 000a FFF7FEFF 		bl	CySysClkWcoEnabled
 243 000e 031E     		sub	r3, r0, #0
 244 0010 00D1     		bne	.LCB80
 245 0012 85E0     		b	.L7	@long jump
 246              	.LCB80:
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 247              		.loc 1 189 0
 248 0014 FC1D     		add	r4, r7, #7
 249 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 250 001a 031C     		mov	r3, r0
 251 001c 2370     		strb	r3, [r4]
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 252              		.loc 1 193 0
 253 001e 424B     		ldr	r3, .L17
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 254              		.loc 1 194 0
 255 0020 414A     		ldr	r2, .L17
 256 0022 1268     		ldr	r2, [r2]
 257 0024 0121     		mov	r1, #1
 258 0026 0A43     		orr	r2, r1
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 9


 193:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 259              		.loc 1 193 0
 260 0028 1A60     		str	r2, [r3]
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 261              		.loc 1 200 0
 262 002a 0323     		mov	r3, #3
 263 002c 3B61     		str	r3, [r7, #16]
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 264              		.loc 1 201 0
 265 002e 0023     		mov	r3, #0
 266 0030 7B61     		str	r3, [r7, #20]
 267 0032 12E0     		b	.L9
 268              	.L12:
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 269              		.loc 1 203 0
 270 0034 3D4B     		ldr	r3, .L17+4
 271 0036 1B68     		ldr	r3, [r3]
 272 0038 DBB2     		uxtb	r3, r3
 273 003a 1A1C     		mov	r2, r3
 274 003c 3F23     		mov	r3, #63
 275 003e 1340     		and	r3, r2
 276 0040 3B49     		ldr	r1, .L17+8
 277 0042 7A69     		ldr	r2, [r7, #20]
 278 0044 8A18     		add	r2, r1, r2
 279 0046 1278     		ldrb	r2, [r2]
 280 0048 9342     		cmp	r3, r2
 281 004a 03D1     		bne	.L10
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 282              		.loc 1 205 0
 283 004c 7B69     		ldr	r3, [r7, #20]
 284 004e 0333     		add	r3, r3, #3
 285 0050 3B61     		str	r3, [r7, #16]
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 286              		.loc 1 206 0
 287 0052 05E0     		b	.L11
 288              	.L10:
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 289              		.loc 1 201 0 discriminator 2
 290 0054 7B69     		ldr	r3, [r7, #20]
 291 0056 0133     		add	r3, r3, #1
 292 0058 7B61     		str	r3, [r7, #20]
 293              	.L9:
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 294              		.loc 1 201 0 is_stmt 0 discriminator 1
 295 005a 7B69     		ldr	r3, [r7, #20]
 296 005c 2D2B     		cmp	r3, #45
 297 005e E9D9     		bls	.L12
 298              	.L11:
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 10


 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 299              		.loc 1 225 0 is_stmt 1
 300 0060 344B     		ldr	r3, .L17+12
 301 0062 1B68     		ldr	r3, [r3]
 302 0064 1F22     		mov	r2, #31
 303 0066 1340     		and	r3, r2
 304 0068 07D1     		bne	.L13
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 305              		.loc 1 227 0
 306 006a 324B     		ldr	r3, .L17+12
 307 006c 314A     		ldr	r2, .L17+12
 308 006e 1268     		ldr	r2, [r2]
 309 0070 1F21     		mov	r1, #31
 310 0072 8A43     		bic	r2, r1
 311 0074 0C21     		mov	r1, #12
 312 0076 0A43     		orr	r2, r1
 313 0078 1A60     		str	r2, [r3]
 314              	.L13:
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 315              		.loc 1 232 0
 316 007a 2F4B     		ldr	r3, .L17+16
 317 007c 1B68     		ldr	r3, [r3]
 318 007e 2F4A     		ldr	r2, .L17+20
 319 0080 1340     		and	r3, r2
 320 0082 FB60     		str	r3, [r7, #12]
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 321              		.loc 1 238 0
 322 0084 3B69     		ldr	r3, [r7, #16]
 323 0086 2E4A     		ldr	r2, .L17+24
 324 0088 5343     		mul	r3, r2
 325 008a 8022     		mov	r2, #128
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 11


 326 008c D201     		lsl	r2, r2, #7
 327 008e 9446     		mov	ip, r2
 328 0090 6344     		add	r3, r3, ip
 329 0092 DB0B     		lsr	r3, r3, #15
 330 0094 013B     		sub	r3, r3, #1
 331 0096 5B05     		lsl	r3, r3, #21
 332 0098 5B0D     		lsr	r3, r3, #21
 333 009a FA68     		ldr	r2, [r7, #12]
 334 009c 1343     		orr	r3, r2
 335 009e FB60     		str	r3, [r7, #12]
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 336              		.loc 1 241 0
 337 00a0 FB68     		ldr	r3, [r7, #12]
 338 00a2 A022     		mov	r2, #160
 339 00a4 5203     		lsl	r2, r2, #13
 340 00a6 1343     		orr	r3, r2
 341 00a8 FB60     		str	r3, [r7, #12]
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 342              		.loc 1 244 0
 343 00aa 3B69     		ldr	r3, [r7, #16]
 344 00ac 192B     		cmp	r3, #25
 345 00ae 05D8     		bhi	.L14
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 346              		.loc 1 246 0
 347 00b0 FB68     		ldr	r3, [r7, #12]
 348 00b2 FF22     		mov	r2, #255
 349 00b4 9205     		lsl	r2, r2, #22
 350 00b6 1343     		orr	r3, r2
 351 00b8 FB60     		str	r3, [r7, #12]
 352 00ba 16E0     		b	.L15
 353              	.L14:
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 354              		.loc 1 250 0
 355 00bc 3B69     		ldr	r3, [r7, #16]
 356 00be 214A     		ldr	r2, .L17+28
 357 00c0 9446     		mov	ip, r2
 358 00c2 6344     		add	r3, r3, ip
 359 00c4 1B78     		ldrb	r3, [r3]
 360 00c6 DBB2     		uxtb	r3, r3
 361 00c8 191C     		mov	r1, r3
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 362              		.loc 1 251 0
 363 00ca 3B69     		ldr	r3, [r7, #16]
 364 00cc 1A3B     		sub	r3, r3, #26
 365 00ce 1E4A     		ldr	r2, .L17+32
 366 00d0 D35C     		ldrb	r3, [r2, r3]
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 367              		.loc 1 250 0
 368 00d2 CB18     		add	r3, r1, r3
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 12


 369 00d4 BB60     		str	r3, [r7, #8]
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 370              		.loc 1 253 0
 371 00d6 BB68     		ldr	r3, [r7, #8]
 372 00d8 FF2B     		cmp	r3, #255
 373 00da 00D9     		bls	.L16
 374 00dc FF23     		mov	r3, #255
 375              	.L16:
 376 00de BB60     		str	r3, [r7, #8]
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 377              		.loc 1 256 0
 378 00e0 BB68     		ldr	r3, [r7, #8]
 379 00e2 9B05     		lsl	r3, r3, #22
 380 00e4 FA68     		ldr	r2, [r7, #12]
 381 00e6 1343     		orr	r3, r2
 382 00e8 FB60     		str	r3, [r7, #12]
 383              	.L15:
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 384              		.loc 1 259 0
 385 00ea 134B     		ldr	r3, .L17+16
 386 00ec FA68     		ldr	r2, [r7, #12]
 387 00ee 1A60     		str	r2, [r3]
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 388              		.loc 1 261 0
 389 00f0 164B     		ldr	r3, .L17+36
 390 00f2 1B68     		ldr	r3, [r3]
 391 00f4 3B60     		str	r3, [r7]
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 392              		.loc 1 262 0
 393 00f6 3020     		mov	r0, #48
 394 00f8 FFF7FEFF 		bl	CySysFlashSetWaitCycles
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 395              		.loc 1 263 0
 396 00fc 144B     		ldr	r3, .L17+40
 397 00fe 144A     		ldr	r2, .L17+40
 398 0100 1268     		ldr	r2, [r2]
 399 0102 8021     		mov	r1, #128
 400 0104 C905     		lsl	r1, r1, #23
 401 0106 0A43     		orr	r2, r1
 402 0108 1A60     		str	r2, [r3]
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 403              		.loc 1 264 0
 404 010a 1420     		mov	r0, #20
 405 010c FFF7FEFF 		bl	CyDelay
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 406              		.loc 1 265 0
 407 0110 0E4B     		ldr	r3, .L17+36
 408 0112 3A68     		ldr	r2, [r7]
 409 0114 1A60     		str	r2, [r3]
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 13


 410              		.loc 1 267 0
 411 0116 FB1D     		add	r3, r7, #7
 412 0118 1B78     		ldrb	r3, [r3]
 413 011a 181C     		mov	r0, r3
 414 011c FFF7FEFF 		bl	CyExitCriticalSection
 415              	.L7:
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 416              		.loc 1 269 0
 417 0120 BD46     		mov	sp, r7
 418 0122 07B0     		add	sp, sp, #28
 419              		@ sp needed
 420 0124 90BD     		pop	{r4, r7, pc}
 421              	.L18:
 422 0126 C046     		.align	2
 423              	.L17:
 424 0128 50000C40 		.word	1074528336
 425 012c 2CFF0B40 		.word	1074528044
 426 0130 00000000 		.word	cyImoFreqMhz2Reg
 427 0134 34FF0B40 		.word	1074528052
 428 0138 08002240 		.word	1075970056
 429 013c 00F800C0 		.word	-1073678336
 430 0140 40420F00 		.word	1000000
 431 0144 4DF3FF0F 		.word	268432205
 432 0148 00000000 		.word	cyImoFreqMhz2DpllOffset
 433 014c 30001040 		.word	1074790448
 434 0150 00002240 		.word	1075970048
 435              		.cfi_endproc
 436              	.LFE3:
 437              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 438              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
 439              		.align	2
 440              		.global	CySysClkImoDisableWcoLock
 441              		.code	16
 442              		.thumb_func
 443              		.type	CySysClkImoDisableWcoLock, %function
 444              	CySysClkImoDisableWcoLock:
 445              	.LFB4:
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
 446              		.loc 1 286 0
 447              		.cfi_startproc
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 14


 448 0000 80B5     		push	{r7, lr}
 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 7, -8
 451              		.cfi_offset 14, -4
 452 0002 00AF     		add	r7, sp, #0
 453              		.cfi_def_cfa_register 7
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 454              		.loc 1 287 0
 455 0004 034B     		ldr	r3, .L20
 456 0006 034A     		ldr	r2, .L20
 457 0008 1268     		ldr	r2, [r2]
 458 000a 0349     		ldr	r1, .L20+4
 459 000c 0A40     		and	r2, r1
 460 000e 1A60     		str	r2, [r3]
 288:Generated_Source\PSoC4/CyLib.c ****     }
 461              		.loc 1 288 0
 462 0010 BD46     		mov	sp, r7
 463              		@ sp needed
 464 0012 80BD     		pop	{r7, pc}
 465              	.L21:
 466              		.align	2
 467              	.L20:
 468 0014 00002240 		.word	1075970048
 469 0018 FFFFFFBF 		.word	-1073741825
 470              		.cfi_endproc
 471              	.LFE4:
 472              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
 473              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 474              		.align	2
 475              		.global	CySysClkImoGetWcoLock
 476              		.code	16
 477              		.thumb_func
 478              		.type	CySysClkImoGetWcoLock, %function
 479              	CySysClkImoGetWcoLock:
 480              	.LFB5:
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 481              		.loc 1 305 0
 482              		.cfi_startproc
 483 0000 80B5     		push	{r7, lr}
 484              		.cfi_def_cfa_offset 8
 485              		.cfi_offset 7, -8
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 15


 486              		.cfi_offset 14, -4
 487 0002 00AF     		add	r7, sp, #0
 488              		.cfi_def_cfa_register 7
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 489              		.loc 1 306 0
 490 0004 054B     		ldr	r3, .L26
 491 0006 1A68     		ldr	r2, [r3]
 492 0008 8023     		mov	r3, #128
 493 000a DB05     		lsl	r3, r3, #23
 494 000c 1340     		and	r3, r2
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 495              		.loc 1 307 0
 496 000e 01D0     		beq	.L23
 497              		.loc 1 307 0 is_stmt 0 discriminator 1
 498 0010 0123     		mov	r3, #1
 499 0012 00E0     		b	.L24
 500              	.L23:
 501              		.loc 1 307 0 discriminator 2
 502 0014 0023     		mov	r3, #0
 503              	.L24:
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 504              		.loc 1 309 0 is_stmt 1
 505 0016 181C     		mov	r0, r3
 506 0018 BD46     		mov	sp, r7
 507              		@ sp needed
 508 001a 80BD     		pop	{r7, pc}
 509              	.L27:
 510              		.align	2
 511              	.L26:
 512 001c 00002240 		.word	1075970048
 513              		.cfi_endproc
 514              	.LFE5:
 515              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 516              		.section	.text.CySysClkImoEnableUsbLock,"ax",%progbits
 517              		.align	2
 518              		.global	CySysClkImoEnableUsbLock
 519              		.code	16
 520              		.thumb_func
 521              		.type	CySysClkImoEnableUsbLock, %function
 522              	CySysClkImoEnableUsbLock:
 523              	.LFB6:
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 16


 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 524              		.loc 1 332 0
 525              		.cfi_startproc
 526 0000 80B5     		push	{r7, lr}
 527              		.cfi_def_cfa_offset 8
 528              		.cfi_offset 7, -8
 529              		.cfi_offset 14, -4
 530 0002 00AF     		add	r7, sp, #0
 531              		.cfi_def_cfa_register 7
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 532              		.loc 1 335 0
 533 0004 0E4B     		ldr	r3, .L29
 534 0006 0E4A     		ldr	r2, .L29
 535 0008 1268     		ldr	r2, [r2]
 536 000a 0121     		mov	r1, #1
 537 000c 8A43     		bic	r2, r1
 538 000e 1A60     		str	r2, [r3]
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 539              		.loc 1 341 0
 540 0010 0C4B     		ldr	r3, .L29+4
 541 0012 1B68     		ldr	r3, [r3]
 542 0014 1F22     		mov	r2, #31
 543 0016 9343     		bic	r3, r2
 544 0018 1A1C     		mov	r2, r3
 545 001a 0B4B     		ldr	r3, .L29+8
 546 001c 1A60     		str	r2, [r3]
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 547              		.loc 1 342 0
 548 001e 094B     		ldr	r3, .L29+4
 549 0020 084A     		ldr	r2, .L29+4
 550 0022 1268     		ldr	r2, [r2]
 551 0024 1F21     		mov	r1, #31
 552 0026 8A43     		bic	r2, r1
 553 0028 0821     		mov	r1, #8
 554 002a 0A43     		orr	r2, r1
 555 002c 1A60     		str	r2, [r3]
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 556              		.loc 1 346 0
 557 002e 074B     		ldr	r3, .L29+12
 558 0030 064A     		ldr	r2, .L29+12
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 17


 559 0032 1268     		ldr	r2, [r2]
 560 0034 0221     		mov	r1, #2
 561 0036 0A43     		orr	r2, r1
 562 0038 1A60     		str	r2, [r3]
 347:Generated_Source\PSoC4/CyLib.c ****     }
 563              		.loc 1 347 0
 564 003a BD46     		mov	sp, r7
 565              		@ sp needed
 566 003c 80BD     		pop	{r7, pc}
 567              	.L30:
 568 003e C046     		.align	2
 569              	.L29:
 570 0040 50000C40 		.word	1074528336
 571 0044 34FF0B40 		.word	1074528052
 572 0048 00000000 		.word	CySysClkImoTrim4
 573 004c 24002C40 		.word	1076625444
 574              		.cfi_endproc
 575              	.LFE6:
 576              		.size	CySysClkImoEnableUsbLock, .-CySysClkImoEnableUsbLock
 577              		.section	.text.CySysClkImoDisableUsbLock,"ax",%progbits
 578              		.align	2
 579              		.global	CySysClkImoDisableUsbLock
 580              		.code	16
 581              		.thumb_func
 582              		.type	CySysClkImoDisableUsbLock, %function
 583              	CySysClkImoDisableUsbLock:
 584              	.LFB7:
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 585              		.loc 1 364 0
 586              		.cfi_startproc
 587 0000 80B5     		push	{r7, lr}
 588              		.cfi_def_cfa_offset 8
 589              		.cfi_offset 7, -8
 590              		.cfi_offset 14, -4
 591 0002 00AF     		add	r7, sp, #0
 592              		.cfi_def_cfa_register 7
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 593              		.loc 1 365 0
 594 0004 084B     		ldr	r3, .L32
 595 0006 084A     		ldr	r2, .L32
 596 0008 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 18


 597 000a 0221     		mov	r1, #2
 598 000c 8A43     		bic	r2, r1
 599 000e 1A60     		str	r2, [r3]
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 600              		.loc 1 369 0
 601 0010 064A     		ldr	r2, .L32+4
 602 0012 064B     		ldr	r3, .L32+4
 603 0014 1B68     		ldr	r3, [r3]
 604 0016 1F21     		mov	r1, #31
 605 0018 8B43     		bic	r3, r1
 606 001a 191C     		mov	r1, r3
 607 001c 044B     		ldr	r3, .L32+8
 608 001e 1B68     		ldr	r3, [r3]
 609 0020 0B43     		orr	r3, r1
 610 0022 1360     		str	r3, [r2]
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 611              		.loc 1 372 0
 612 0024 BD46     		mov	sp, r7
 613              		@ sp needed
 614 0026 80BD     		pop	{r7, pc}
 615              	.L33:
 616              		.align	2
 617              	.L32:
 618 0028 24002C40 		.word	1076625444
 619 002c 34FF0B40 		.word	1074528052
 620 0030 00000000 		.word	CySysClkImoTrim4
 621              		.cfi_endproc
 622              	.LFE7:
 623              		.size	CySysClkImoDisableUsbLock, .-CySysClkImoDisableUsbLock
 624              		.section	.text.CySysClkImoGetUsbLock,"ax",%progbits
 625              		.align	2
 626              		.global	CySysClkImoGetUsbLock
 627              		.code	16
 628              		.thumb_func
 629              		.type	CySysClkImoGetUsbLock, %function
 630              	CySysClkImoGetUsbLock:
 631              	.LFB8:
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 19


 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 632              		.loc 1 389 0
 633              		.cfi_startproc
 634 0000 80B5     		push	{r7, lr}
 635              		.cfi_def_cfa_offset 8
 636              		.cfi_offset 7, -8
 637              		.cfi_offset 14, -4
 638 0002 00AF     		add	r7, sp, #0
 639              		.cfi_def_cfa_register 7
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 640              		.loc 1 390 0
 641 0004 054B     		ldr	r3, .L38
 642 0006 1B68     		ldr	r3, [r3]
 643 0008 0222     		mov	r2, #2
 644 000a 1340     		and	r3, r2
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 645              		.loc 1 391 0
 646 000c 01D0     		beq	.L35
 647              		.loc 1 391 0 is_stmt 0 discriminator 1
 648 000e 0123     		mov	r3, #1
 649 0010 00E0     		b	.L36
 650              	.L35:
 651              		.loc 1 391 0 discriminator 2
 652 0012 0023     		mov	r3, #0
 653              	.L36:
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 654              		.loc 1 393 0 is_stmt 1
 655 0014 181C     		mov	r0, r3
 656 0016 BD46     		mov	sp, r7
 657              		@ sp needed
 658 0018 80BD     		pop	{r7, pc}
 659              	.L39:
 660 001a C046     		.align	2
 661              	.L38:
 662 001c 24002C40 		.word	1076625444
 663              		.cfi_endproc
 664              	.LFE8:
 665              		.size	CySysClkImoGetUsbLock, .-CySysClkImoGetUsbLock
 666              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 667              		.align	2
 668              		.global	CySysClkWriteHfclkDirect
 669              		.code	16
 670              		.thumb_func
 671              		.type	CySysClkWriteHfclkDirect, %function
 672              	CySysClkWriteHfclkDirect:
 673              	.LFB9:
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 20


 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
 674              		.loc 1 430 0
 675              		.cfi_startproc
 676 0000 90B5     		push	{r4, r7, lr}
 677              		.cfi_def_cfa_offset 12
 678              		.cfi_offset 4, -12
 679              		.cfi_offset 7, -8
 680              		.cfi_offset 14, -4
 681 0002 85B0     		sub	sp, sp, #20
 682              		.cfi_def_cfa_offset 32
 683 0004 00AF     		add	r7, sp, #0
 684              		.cfi_def_cfa_register 7
 685 0006 7860     		str	r0, [r7, #4]
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 686              		.loc 1 434 0
 687 0008 0B23     		mov	r3, #11
 688 000a FC18     		add	r4, r7, r3
 689 000c FFF7FEFF 		bl	CyEnterCriticalSection
 690 0010 031C     		mov	r3, r0
 691 0012 2370     		strb	r3, [r4]
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 692              		.loc 1 437 0
 693 0014 144B     		ldr	r3, .L44
 694 0016 1B68     		ldr	r3, [r3]
 695 0018 144A     		ldr	r2, .L44+4
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 21


 696 001a 1340     		and	r3, r2
 697 001c FB60     		str	r3, [r7, #12]
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 698              		.loc 1 441 0
 699 001e 7A68     		ldr	r2, [r7, #4]
 700 0020 8023     		mov	r3, #128
 701 0022 9B02     		lsl	r3, r3, #10
 702 0024 9A42     		cmp	r2, r3
 703 0026 04D0     		beq	.L41
 704              		.loc 1 441 0 is_stmt 0 discriminator 1
 705 0028 7A68     		ldr	r2, [r7, #4]
 706 002a 8023     		mov	r3, #128
 707 002c 5B02     		lsl	r3, r3, #9
 708 002e 9A42     		cmp	r2, r3
 709 0030 07D1     		bne	.L42
 710              	.L41:
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 711              		.loc 1 443 0 is_stmt 1
 712 0032 7A68     		ldr	r2, [r7, #4]
 713 0034 C023     		mov	r3, #192
 714 0036 9B02     		lsl	r3, r3, #10
 715 0038 1340     		and	r3, r2
 716 003a FA68     		ldr	r2, [r7, #12]
 717 003c 1343     		orr	r3, r2
 718 003e FB60     		str	r3, [r7, #12]
 719 0040 05E0     		b	.L43
 720              	.L42:
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 721              		.loc 1 448 0
 722 0042 7B68     		ldr	r3, [r7, #4]
 723 0044 0722     		mov	r2, #7
 724 0046 1340     		and	r3, r2
 725 0048 FA68     		ldr	r2, [r7, #12]
 726 004a 1343     		orr	r3, r2
 727 004c FB60     		str	r3, [r7, #12]
 728              	.L43:
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 729              		.loc 1 451 0
 730 004e 064B     		ldr	r3, .L44
 731 0050 FA68     		ldr	r2, [r7, #12]
 732 0052 1A60     		str	r2, [r3]
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 733              		.loc 1 453 0
 734 0054 0B23     		mov	r3, #11
 735 0056 FB18     		add	r3, r7, r3
 736 0058 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 22


 737 005a 181C     		mov	r0, r3
 738 005c FFF7FEFF 		bl	CyExitCriticalSection
 454:Generated_Source\PSoC4/CyLib.c **** }
 739              		.loc 1 454 0
 740 0060 BD46     		mov	sp, r7
 741 0062 05B0     		add	sp, sp, #20
 742              		@ sp needed
 743 0064 90BD     		pop	{r4, r7, pc}
 744              	.L45:
 745 0066 C046     		.align	2
 746              	.L44:
 747 0068 00010B40 		.word	1074462976
 748 006c F8FFFCFF 		.word	-196616
 749              		.cfi_endproc
 750              	.LFE9:
 751              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 752              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 753              		.align	2
 754              		.global	CySysEnablePumpClock
 755              		.code	16
 756              		.thumb_func
 757              		.type	CySysEnablePumpClock, %function
 758              	CySysEnablePumpClock:
 759              	.LFB10:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 760              		.loc 1 474 0
 761              		.cfi_startproc
 762 0000 80B5     		push	{r7, lr}
 763              		.cfi_def_cfa_offset 8
 764              		.cfi_offset 7, -8
 765              		.cfi_offset 14, -4
 766 0002 82B0     		sub	sp, sp, #8
 767              		.cfi_def_cfa_offset 16
 768 0004 00AF     		add	r7, sp, #0
 769              		.cfi_def_cfa_register 7
 770 0006 7860     		str	r0, [r7, #4]
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 23


 771              		.loc 1 476 0
 772 0008 7B68     		ldr	r3, [r7, #4]
 773 000a 0122     		mov	r2, #1
 774 000c 1340     		and	r3, r2
 775 000e 08D0     		beq	.L47
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 776              		.loc 1 478 0
 777 0010 0C4A     		ldr	r2, .L49
 778 0012 0C4B     		ldr	r3, .L49
 779 0014 1968     		ldr	r1, [r3]
 780 0016 0C4B     		ldr	r3, .L49+4
 781 0018 1B68     		ldr	r3, [r3]
 782 001a 5B06     		lsl	r3, r3, #25
 783 001c 0B43     		orr	r3, r1
 784 001e 1360     		str	r3, [r2]
 785 0020 0CE0     		b	.L46
 786              	.L47:
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 787              		.loc 1 482 0
 788 0022 084B     		ldr	r3, .L49
 789 0024 1B68     		ldr	r3, [r3]
 790 0026 5B0E     		lsr	r3, r3, #25
 791 0028 0722     		mov	r2, #7
 792 002a 1A40     		and	r2, r3
 793 002c 064B     		ldr	r3, .L49+4
 794 002e 1A60     		str	r2, [r3]
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 795              		.loc 1 484 0
 796 0030 044B     		ldr	r3, .L49
 797 0032 044A     		ldr	r2, .L49
 798 0034 1268     		ldr	r2, [r2]
 799 0036 0549     		ldr	r1, .L49+8
 800 0038 0A40     		and	r2, r1
 801 003a 1A60     		str	r2, [r3]
 802              	.L46:
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 803              		.loc 1 498 0
 804 003c BD46     		mov	sp, r7
 805 003e 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 24


 806              		@ sp needed
 807 0040 80BD     		pop	{r7, pc}
 808              	.L50:
 809 0042 C046     		.align	2
 810              	.L49:
 811 0044 08010B40 		.word	1074462984
 812 0048 00000000 		.word	CySysClkPumpConfig
 813 004c FFFFFFF1 		.word	-234881025
 814              		.cfi_endproc
 815              	.LFE10:
 816              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 817              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 818              		.align	2
 819              		.global	CySysClkGetSysclkSource
 820              		.code	16
 821              		.thumb_func
 822              		.type	CySysClkGetSysclkSource, %function
 823              	CySysClkGetSysclkSource:
 824              	.LFB11:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 825              		.loc 1 511 0
 826              		.cfi_startproc
 827 0000 90B5     		push	{r4, r7, lr}
 828              		.cfi_def_cfa_offset 12
 829              		.cfi_offset 4, -12
 830              		.cfi_offset 7, -8
 831              		.cfi_offset 14, -4
 832 0002 83B0     		sub	sp, sp, #12
 833              		.cfi_def_cfa_offset 24
 834 0004 00AF     		add	r7, sp, #0
 835              		.cfi_def_cfa_register 7
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 836              		.loc 1 515 0
 837 0006 FC1C     		add	r4, r7, #3
 838 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 839 000c 031C     		mov	r3, r0
 840 000e 2370     		strb	r3, [r4]
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 841              		.loc 1 518 0
 842 0010 0D4B     		ldr	r3, .L55
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 25


 843 0012 1A68     		ldr	r2, [r3]
 844 0014 C023     		mov	r3, #192
 845 0016 9B02     		lsl	r3, r3, #10
 846 0018 1340     		and	r3, r2
 847 001a 06D0     		beq	.L52
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 848              		.loc 1 520 0
 849 001c 0A4B     		ldr	r3, .L55
 850 001e 1A68     		ldr	r2, [r3]
 851 0020 C023     		mov	r3, #192
 852 0022 9B02     		lsl	r3, r3, #10
 853 0024 1340     		and	r3, r2
 854 0026 7B60     		str	r3, [r7, #4]
 855 0028 04E0     		b	.L53
 856              	.L52:
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 857              		.loc 1 525 0
 858 002a 074B     		ldr	r3, .L55
 859 002c 1B68     		ldr	r3, [r3]
 860 002e 0722     		mov	r2, #7
 861 0030 1340     		and	r3, r2
 862 0032 7B60     		str	r3, [r7, #4]
 863              	.L53:
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 864              		.loc 1 528 0
 865 0034 FB1C     		add	r3, r7, #3
 866 0036 1B78     		ldrb	r3, [r3]
 867 0038 181C     		mov	r0, r3
 868 003a FFF7FEFF 		bl	CyExitCriticalSection
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 869              		.loc 1 530 0
 870 003e 7B68     		ldr	r3, [r7, #4]
 531:Generated_Source\PSoC4/CyLib.c **** }
 871              		.loc 1 531 0
 872 0040 181C     		mov	r0, r3
 873 0042 BD46     		mov	sp, r7
 874 0044 03B0     		add	sp, sp, #12
 875              		@ sp needed
 876 0046 90BD     		pop	{r4, r7, pc}
 877              	.L56:
 878              		.align	2
 879              	.L55:
 880 0048 00010B40 		.word	1074462976
 881              		.cfi_endproc
 882              	.LFE11:
 883              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 884              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 885              		.align	2
 886              		.global	CySysClkWriteSysclkDiv
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 26


 887              		.code	16
 888              		.thumb_func
 889              		.type	CySysClkWriteSysclkDiv, %function
 890              	CySysClkWriteSysclkDiv:
 891              	.LFB12:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 892              		.loc 1 566 0
 893              		.cfi_startproc
 894 0000 90B5     		push	{r4, r7, lr}
 895              		.cfi_def_cfa_offset 12
 896              		.cfi_offset 4, -12
 897              		.cfi_offset 7, -8
 898              		.cfi_offset 14, -4
 899 0002 85B0     		sub	sp, sp, #20
 900              		.cfi_def_cfa_offset 32
 901 0004 00AF     		add	r7, sp, #0
 902              		.cfi_def_cfa_register 7
 903 0006 7860     		str	r0, [r7, #4]
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 904              		.loc 1 569 0
 905 0008 0F23     		mov	r3, #15
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 27


 906 000a FC18     		add	r4, r7, r3
 907 000c FFF7FEFF 		bl	CyEnterCriticalSection
 908 0010 031C     		mov	r3, r0
 909 0012 2370     		strb	r3, [r4]
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 910              		.loc 1 571 0
 911 0014 094B     		ldr	r3, .L58
 912 0016 7A68     		ldr	r2, [r7, #4]
 913 0018 0721     		mov	r1, #7
 914 001a 0A40     		and	r2, r1
 915 001c D104     		lsl	r1, r2, #19
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 916              		.loc 1 573 0
 917 001e 074A     		ldr	r2, .L58
 918 0020 1268     		ldr	r2, [r2]
 919 0022 0748     		ldr	r0, .L58+4
 920 0024 0240     		and	r2, r0
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 921              		.loc 1 572 0
 922 0026 0A43     		orr	r2, r1
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 923              		.loc 1 571 0
 924 0028 1A60     		str	r2, [r3]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 925              		.loc 1 576 0
 926 002a 0F23     		mov	r3, #15
 927 002c FB18     		add	r3, r7, r3
 928 002e 1B78     		ldrb	r3, [r3]
 929 0030 181C     		mov	r0, r3
 930 0032 FFF7FEFF 		bl	CyExitCriticalSection
 577:Generated_Source\PSoC4/CyLib.c **** }
 931              		.loc 1 577 0
 932 0036 BD46     		mov	sp, r7
 933 0038 05B0     		add	sp, sp, #20
 934              		@ sp needed
 935 003a 90BD     		pop	{r4, r7, pc}
 936              	.L59:
 937              		.align	2
 938              	.L58:
 939 003c 00010B40 		.word	1074462976
 940 0040 FFFFC7FF 		.word	-3670017
 941              		.cfi_endproc
 942              	.LFE12:
 943              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 944              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 945              		.align	2
 946              		.global	CySysClkWriteImoFreq
 947              		.code	16
 948              		.thumb_func
 949              		.type	CySysClkWriteImoFreq, %function
 950              	CySysClkWriteImoFreq:
 951              	.LFB13:
 578:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 28


 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 952              		.loc 1 624 0
 953              		.cfi_startproc
 954 0000 90B5     		push	{r4, r7, lr}
 955              		.cfi_def_cfa_offset 12
 956              		.cfi_offset 4, -12
 957              		.cfi_offset 7, -8
 958              		.cfi_offset 14, -4
 959 0002 87B0     		sub	sp, sp, #28
 960              		.cfi_def_cfa_offset 40
 961 0004 00AF     		add	r7, sp, #0
 962              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 29


 963 0006 7860     		str	r0, [r7, #4]
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 964              		.loc 1 637 0
 965 0008 0023     		mov	r3, #0
 966 000a 3B61     		str	r3, [r7, #16]
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 967              		.loc 1 641 0
 968 000c 0023     		mov	r3, #0
 969 000e FB60     		str	r3, [r7, #12]
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 970              		.loc 1 647 0
 971 0010 0B23     		mov	r3, #11
 972 0012 FC18     		add	r4, r7, r3
 973 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 974 0018 031C     		mov	r3, r0
 975 001a 2370     		strb	r3, [r4]
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 976              		.loc 1 650 0
 977 001c FFF7FEFF 		bl	CySysClkImoGetWcoLock
 978 0020 031E     		sub	r3, r0, #0
 979 0022 03D0     		beq	.L61
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 980              		.loc 1 652 0
 981 0024 0123     		mov	r3, #1
 982 0026 3B61     		str	r3, [r7, #16]
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 983              		.loc 1 653 0
 984 0028 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 985              	.L61:
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 30


 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 986              		.loc 1 661 0
 987 002c FFF7FEFF 		bl	CySysClkImoGetUsbLock
 988 0030 031E     		sub	r3, r0, #0
 989 0032 09D0     		beq	.L62
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 990              		.loc 1 665 0
 991 0034 7B68     		ldr	r3, [r7, #4]
 992 0036 182B     		cmp	r3, #24
 993 0038 02D0     		beq	.L63
 994              		.loc 1 665 0 is_stmt 0 discriminator 1
 995 003a 7B68     		ldr	r3, [r7, #4]
 996 003c 302B     		cmp	r3, #48
 997 003e 03D1     		bne	.L62
 998              	.L63:
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 999              		.loc 1 667 0 is_stmt 1
 1000 0040 0123     		mov	r3, #1
 1001 0042 FB60     		str	r3, [r7, #12]
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 1002              		.loc 1 668 0
 1003 0044 FFF7FEFF 		bl	CySysClkImoDisableUsbLock
 1004              	.L62:
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 31


 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 1005              		.loc 1 697 0
 1006 0048 7B68     		ldr	r3, [r7, #4]
 1007 004a 022B     		cmp	r3, #2
 1008 004c 00D8     		bhi	.LCB774
 1009 004e CCE0     		b	.L64	@long jump
 1010              	.LCB774:
 1011              		.loc 1 697 0 is_stmt 0 discriminator 1
 1012 0050 7B68     		ldr	r3, [r7, #4]
 1013 0052 302B     		cmp	r3, #48
 1014 0054 00D9     		bls	.LCB777
 1015 0056 C8E0     		b	.L64	@long jump
 1016              	.LCB777:
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 1017              		.loc 1 699 0 is_stmt 1
 1018 0058 6F4B     		ldr	r3, .L80
 1019 005a 1B78     		ldrb	r3, [r3]
 1020 005c DBB2     		uxtb	r3, r3
 1021 005e 1A1E     		sub	r2, r3, #0
 1022 0060 7B68     		ldr	r3, [r7, #4]
 1023 0062 9A42     		cmp	r2, r3
 1024 0064 0AD3     		bcc	.L65
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 1025              		.loc 1 701 0
 1026 0066 6D4A     		ldr	r2, .L80+4
 1027 0068 1723     		mov	r3, #23
 1028 006a FB18     		add	r3, r7, r3
 1029 006c 1278     		ldrb	r2, [r2]
 1030 006e 1A70     		strb	r2, [r3]
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1031              		.loc 1 702 0
 1032 0070 6B4A     		ldr	r2, .L80+8
 1033 0072 1623     		mov	r3, #22
 1034 0074 FB18     		add	r3, r7, r3
 1035 0076 1278     		ldrb	r2, [r2]
 1036 0078 1A70     		strb	r2, [r3]
 1037 007a 3FE0     		b	.L66
 1038              	.L65:
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 1039              		.loc 1 704 0
 1040 007c 694B     		ldr	r3, .L80+12
 1041 007e 1B78     		ldrb	r3, [r3]
 1042 0080 DBB2     		uxtb	r3, r3
 1043 0082 1A1E     		sub	r2, r3, #0
 1044 0084 7B68     		ldr	r3, [r7, #4]
 1045 0086 9A42     		cmp	r2, r3
 1046 0088 0AD3     		bcc	.L67
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 1047              		.loc 1 706 0
 1048 008a 674A     		ldr	r2, .L80+16
 1049 008c 1723     		mov	r3, #23
 1050 008e FB18     		add	r3, r7, r3
 1051 0090 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 32


 1052 0092 1A70     		strb	r2, [r3]
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1053              		.loc 1 707 0
 1054 0094 654A     		ldr	r2, .L80+20
 1055 0096 1623     		mov	r3, #22
 1056 0098 FB18     		add	r3, r7, r3
 1057 009a 1278     		ldrb	r2, [r2]
 1058 009c 1A70     		strb	r2, [r3]
 1059 009e 2DE0     		b	.L66
 1060              	.L67:
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 1061              		.loc 1 709 0
 1062 00a0 634B     		ldr	r3, .L80+24
 1063 00a2 1B78     		ldrb	r3, [r3]
 1064 00a4 DBB2     		uxtb	r3, r3
 1065 00a6 1A1E     		sub	r2, r3, #0
 1066 00a8 7B68     		ldr	r3, [r7, #4]
 1067 00aa 9A42     		cmp	r2, r3
 1068 00ac 0AD3     		bcc	.L68
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 1069              		.loc 1 711 0
 1070 00ae 614A     		ldr	r2, .L80+28
 1071 00b0 1723     		mov	r3, #23
 1072 00b2 FB18     		add	r3, r7, r3
 1073 00b4 1278     		ldrb	r2, [r2]
 1074 00b6 1A70     		strb	r2, [r3]
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1075              		.loc 1 712 0
 1076 00b8 5F4A     		ldr	r2, .L80+32
 1077 00ba 1623     		mov	r3, #22
 1078 00bc FB18     		add	r3, r7, r3
 1079 00be 1278     		ldrb	r2, [r2]
 1080 00c0 1A70     		strb	r2, [r3]
 1081 00c2 1BE0     		b	.L66
 1082              	.L68:
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 1083              		.loc 1 714 0
 1084 00c4 5D4B     		ldr	r3, .L80+36
 1085 00c6 1B78     		ldrb	r3, [r3]
 1086 00c8 DBB2     		uxtb	r3, r3
 1087 00ca 1A1E     		sub	r2, r3, #0
 1088 00cc 7B68     		ldr	r3, [r7, #4]
 1089 00ce 9A42     		cmp	r2, r3
 1090 00d0 0AD3     		bcc	.L69
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 1091              		.loc 1 716 0
 1092 00d2 5B4A     		ldr	r2, .L80+40
 1093 00d4 1723     		mov	r3, #23
 1094 00d6 FB18     		add	r3, r7, r3
 1095 00d8 1278     		ldrb	r2, [r2]
 1096 00da 1A70     		strb	r2, [r3]
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1097              		.loc 1 717 0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 33


 1098 00dc 594A     		ldr	r2, .L80+44
 1099 00de 1623     		mov	r3, #22
 1100 00e0 FB18     		add	r3, r7, r3
 1101 00e2 1278     		ldrb	r2, [r2]
 1102 00e4 1A70     		strb	r2, [r3]
 1103 00e6 09E0     		b	.L66
 1104              	.L69:
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 1105              		.loc 1 721 0
 1106 00e8 574A     		ldr	r2, .L80+48
 1107 00ea 1723     		mov	r3, #23
 1108 00ec FB18     		add	r3, r7, r3
 1109 00ee 1278     		ldrb	r2, [r2]
 1110 00f0 1A70     		strb	r2, [r3]
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1111              		.loc 1 722 0
 1112 00f2 564A     		ldr	r2, .L80+52
 1113 00f4 1623     		mov	r3, #22
 1114 00f6 FB18     		add	r3, r7, r3
 1115 00f8 1278     		ldrb	r2, [r2]
 1116 00fa 1A70     		strb	r2, [r3]
 1117              	.L66:
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 1118              		.loc 1 726 0
 1119 00fc 7B68     		ldr	r3, [r7, #4]
 1120 00fe DA1E     		sub	r2, r3, #3
 1121 0100 0A23     		mov	r3, #10
 1122 0102 FB18     		add	r3, r7, r3
 1123 0104 5249     		ldr	r1, .L80+56
 1124 0106 8A5C     		ldrb	r2, [r1, r2]
 1125 0108 1A70     		strb	r2, [r3]
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 1126              		.loc 1 738 0
 1127 010a 0A23     		mov	r3, #10
 1128 010c FB18     		add	r3, r7, r3
 1129 010e 1B78     		ldrb	r3, [r3]
 1130 0110 2F2B     		cmp	r3, #47
 1131 0112 0DD9     		bls	.L70
 1132              		.loc 1 738 0 is_stmt 0 discriminator 1
 1133 0114 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 34


 1134 0116 2A2B     		cmp	r3, #42
 1135 0118 0AD9     		bls	.L70
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 1136              		.loc 1 741 0 is_stmt 1
 1137 011a 4E4B     		ldr	r3, .L80+60
 1138 011c 1922     		mov	r2, #25
 1139 011e 1A60     		str	r2, [r3]
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1140              		.loc 1 744 0
 1141 0120 0520     		mov	r0, #5
 1142 0122 FFF7FEFF 		bl	CyDelayCycles
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 1143              		.loc 1 746 0
 1144 0126 1523     		mov	r3, #21
 1145 0128 FB18     		add	r3, r7, r3
 1146 012a 1922     		mov	r2, #25
 1147 012c 1A70     		strb	r2, [r3]
 1148 012e 07E0     		b	.L71
 1149              	.L70:
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 1150              		.loc 1 750 0
 1151 0130 484B     		ldr	r3, .L80+60
 1152 0132 1B68     		ldr	r3, [r3]
 1153 0134 DAB2     		uxtb	r2, r3
 1154 0136 1523     		mov	r3, #21
 1155 0138 FB18     		add	r3, r7, r3
 1156 013a 3F21     		mov	r1, #63
 1157 013c 0A40     		and	r2, r1
 1158 013e 1A70     		strb	r2, [r3]
 1159              	.L71:
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 1160              		.loc 1 762 0
 1161 0140 0A23     		mov	r3, #10
 1162 0142 FA18     		add	r2, r7, r3
 1163 0144 1523     		mov	r3, #21
 1164 0146 FB18     		add	r3, r7, r3
 1165 0148 1278     		ldrb	r2, [r2]
 1166 014a 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 35


 1167 014c 9A42     		cmp	r2, r3
 1168 014e 08D2     		bcs	.L72
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 1169              		.loc 1 765 0
 1170 0150 404B     		ldr	r3, .L80+60
 1171 0152 7A68     		ldr	r2, [r7, #4]
 1172 0154 033A     		sub	r2, r2, #3
 1173 0156 3E49     		ldr	r1, .L80+56
 1174 0158 8A5C     		ldrb	r2, [r1, r2]
 1175 015a 1A60     		str	r2, [r3]
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1176              		.loc 1 766 0
 1177 015c 0520     		mov	r0, #5
 1178 015e FFF7FEFF 		bl	CyDelayCycles
 1179              	.L72:
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 1180              		.loc 1 772 0
 1181 0162 FB68     		ldr	r3, [r7, #12]
 1182 0164 012B     		cmp	r3, #1
 1183 0166 08D1     		bne	.L73
 1184              		.loc 1 772 0 is_stmt 0 discriminator 1
 1185 0168 7B68     		ldr	r3, [r7, #4]
 1186 016a 302B     		cmp	r3, #48
 1187 016c 05D1     		bne	.L73
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 1188              		.loc 1 774 0 is_stmt 1
 1189 016e 3A4A     		ldr	r2, .L80+64
 1190 0170 1423     		mov	r3, #20
 1191 0172 FB18     		add	r3, r7, r3
 1192 0174 1278     		ldrb	r2, [r2]
 1193 0176 1A70     		strb	r2, [r3]
 1194 0178 12E0     		b	.L74
 1195              	.L73:
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 1196              		.loc 1 776 0
 1197 017a FB68     		ldr	r3, [r7, #12]
 1198 017c 012B     		cmp	r3, #1
 1199 017e 08D1     		bne	.L75
 1200              		.loc 1 776 0 is_stmt 0 discriminator 1
 1201 0180 7B68     		ldr	r3, [r7, #4]
 1202 0182 182B     		cmp	r3, #24
 1203 0184 05D1     		bne	.L75
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 1204              		.loc 1 778 0 is_stmt 1
 1205 0186 354A     		ldr	r2, .L80+68
 1206 0188 1423     		mov	r3, #20
 1207 018a FB18     		add	r3, r7, r3
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 36


 1208 018c 1278     		ldrb	r2, [r2]
 1209 018e 1A70     		strb	r2, [r3]
 1210 0190 06E0     		b	.L74
 1211              	.L75:
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 1212              		.loc 1 782 0
 1213 0192 7B68     		ldr	r3, [r7, #4]
 1214 0194 2D4A     		ldr	r2, .L80+52
 1215 0196 9A18     		add	r2, r3, r2
 1216 0198 1423     		mov	r3, #20
 1217 019a FB18     		add	r3, r7, r3
 1218 019c 1278     		ldrb	r2, [r2]
 1219 019e 1A70     		strb	r2, [r3]
 1220              	.L74:
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 1221              		.loc 1 789 0
 1222 01a0 2F4B     		ldr	r3, .L80+72
 1223 01a2 1422     		mov	r2, #20
 1224 01a4 BA18     		add	r2, r7, r2
 1225 01a6 1278     		ldrb	r2, [r2]
 1226 01a8 1A60     		str	r2, [r3]
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1227              		.loc 1 790 0
 1228 01aa 2E4B     		ldr	r3, .L80+76
 1229 01ac 1722     		mov	r2, #23
 1230 01ae BA18     		add	r2, r7, r2
 1231 01b0 1278     		ldrb	r2, [r2]
 1232 01b2 1A60     		str	r2, [r3]
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1233              		.loc 1 791 0
 1234 01b4 2C4B     		ldr	r3, .L80+80
 1235 01b6 1622     		mov	r2, #22
 1236 01b8 BA18     		add	r2, r7, r2
 1237 01ba 1278     		ldrb	r2, [r2]
 1238 01bc 1A60     		str	r2, [r3]
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1239              		.loc 1 792 0
 1240 01be 0520     		mov	r0, #5
 1241 01c0 FFF7FEFF 		bl	CyDelayUs
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 1242              		.loc 1 794 0
 1243 01c4 0A23     		mov	r3, #10
 1244 01c6 FA18     		add	r2, r7, r3
 1245 01c8 1523     		mov	r3, #21
 1246 01ca FB18     		add	r3, r7, r3
 1247 01cc 1278     		ldrb	r2, [r2]
 1248 01ce 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 37


 1249 01d0 9A42     		cmp	r2, r3
 1250 01d2 09D9     		bls	.L76
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 1251              		.loc 1 797 0
 1252 01d4 1F4B     		ldr	r3, .L80+60
 1253 01d6 7A68     		ldr	r2, [r7, #4]
 1254 01d8 033A     		sub	r2, r2, #3
 1255 01da 1D49     		ldr	r1, .L80+56
 1256 01dc 8A5C     		ldrb	r2, [r1, r2]
 1257 01de 1A60     		str	r2, [r3]
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1258              		.loc 1 798 0
 1259 01e0 0520     		mov	r0, #5
 1260 01e2 FFF7FEFF 		bl	CyDelayCycles
 794:Generated_Source\PSoC4/CyLib.c ****             {
 1261              		.loc 1 794 0
 1262 01e6 03E0     		b	.L77
 1263              	.L76:
 1264 01e8 02E0     		b	.L77
 1265              	.L64:
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 1266              		.loc 1 804 0 discriminator 1
 1267 01ea 0020     		mov	r0, #0
 1268 01ec FFF7FEFF 		bl	CyHalt
 1269              	.L77:
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 1270              		.loc 1 810 0
 1271 01f0 3B69     		ldr	r3, [r7, #16]
 1272 01f2 012B     		cmp	r3, #1
 1273 01f4 01D1     		bne	.L78
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 1274              		.loc 1 812 0
 1275 01f6 FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1276              	.L78:
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 1277              		.loc 1 817 0
 1278 01fa FB68     		ldr	r3, [r7, #12]
 1279 01fc 012B     		cmp	r3, #1
 1280 01fe 01D1     		bne	.L79
 818:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 38


 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 1281              		.loc 1 819 0
 1282 0200 FFF7FEFF 		bl	CySysClkImoEnableUsbLock
 1283              	.L79:
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 1284              		.loc 1 823 0
 1285 0204 0B23     		mov	r3, #11
 1286 0206 FB18     		add	r3, r7, r3
 1287 0208 1B78     		ldrb	r3, [r3]
 1288 020a 181C     		mov	r0, r3
 1289 020c FFF7FEFF 		bl	CyExitCriticalSection
 824:Generated_Source\PSoC4/CyLib.c ****     }
 1290              		.loc 1 824 0
 1291 0210 BD46     		mov	sp, r7
 1292 0212 07B0     		add	sp, sp, #28
 1293              		@ sp needed
 1294 0214 90BD     		pop	{r4, r7, pc}
 1295              	.L81:
 1296 0216 C046     		.align	2
 1297              	.L80:
 1298 0218 40F3FF0F 		.word	268432192
 1299 021c 41F3FF0F 		.word	268432193
 1300 0220 42F3FF0F 		.word	268432194
 1301 0224 43F3FF0F 		.word	268432195
 1302 0228 44F3FF0F 		.word	268432196
 1303 022c 45F3FF0F 		.word	268432197
 1304 0230 46F3FF0F 		.word	268432198
 1305 0234 47F3FF0F 		.word	268432199
 1306 0238 48F3FF0F 		.word	268432200
 1307 023c 49F3FF0F 		.word	268432201
 1308 0240 4AF3FF0F 		.word	268432202
 1309 0244 4BF3FF0F 		.word	268432203
 1310 0248 4CF3FF0F 		.word	268432204
 1311 024c 4DF3FF0F 		.word	268432205
 1312 0250 00000000 		.word	cyImoFreqMhz2Reg
 1313 0254 2CFF0B40 		.word	1074528044
 1314 0258 3FF3FF0F 		.word	268432191
 1315 025c 3EF3FF0F 		.word	268432190
 1316 0260 28FF0B40 		.word	1074528040
 1317 0264 1CFF0B40 		.word	1074528028
 1318 0268 20FF0B40 		.word	1074528032
 1319              		.cfi_endproc
 1320              	.LFE13:
 1321              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1322              		.section	.text.CySysClkEcoStart,"ax",%progbits
 1323              		.align	2
 1324              		.global	CySysClkEcoStart
 1325              		.code	16
 1326              		.thumb_func
 1327              		.type	CySysClkEcoStart, %function
 1328              	CySysClkEcoStart:
 1329              	.LFB14:
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 39


 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 40


 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 41


 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 42


 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
 1330              		.loc 1 1028 0
 1331              		.cfi_startproc
 1332 0000 80B5     		push	{r7, lr}
 1333              		.cfi_def_cfa_offset 8
 1334              		.cfi_offset 7, -8
 1335              		.cfi_offset 14, -4
 1336 0002 84B0     		sub	sp, sp, #16
 1337              		.cfi_def_cfa_offset 24
 1338 0004 00AF     		add	r7, sp, #0
 1339              		.cfi_def_cfa_register 7
 1340 0006 7860     		str	r0, [r7, #4]
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1341              		.loc 1 1029 0
 1342 0008 0023     		mov	r3, #0
 1343 000a FB60     		str	r3, [r7, #12]
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 43


1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 44


1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
 1344              		.loc 1 1132 0
 1345 000c 154B     		ldr	r3, .L88
 1346 000e 154A     		ldr	r2, .L88
 1347 0010 1268     		ldr	r2, [r2]
 1348 0012 8021     		mov	r1, #128
 1349 0014 0906     		lsl	r1, r1, #24
 1350 0016 0A43     		orr	r2, r1
 1351 0018 1A60     		str	r2, [r3]
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
 1352              		.loc 1 1133 0
 1353 001a 0A20     		mov	r0, #10
 1354 001c FFF7FEFF 		bl	CyDelayUs
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
 1355              		.loc 1 1134 0
 1356 0020 104B     		ldr	r3, .L88
 1357 0022 104A     		ldr	r2, .L88
 1358 0024 1268     		ldr	r2, [r2]
 1359 0026 0121     		mov	r1, #1
 1360 0028 0A43     		orr	r2, r1
 1361 002a 1A60     		str	r2, [r3]
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 45


1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 1362              		.loc 1 1137 0
 1363 002c 7B68     		ldr	r3, [r7, #4]
 1364 002e 002B     		cmp	r3, #0
 1365 0030 12D0     		beq	.L83
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
 1366              		.loc 1 1139 0
 1367 0032 1023     		mov	r3, #16
 1368 0034 FB60     		str	r3, [r7, #12]
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 1369              		.loc 1 1141 0
 1370 0036 0CE0     		b	.L84
 1371              	.L86:
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 1372              		.loc 1 1143 0
 1373 0038 0120     		mov	r0, #1
 1374 003a FFF7FEFF 		bl	CyDelayUs
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 1375              		.loc 1 1145 0
 1376 003e FFF7FEFF 		bl	CySysClkEcoReadStatus
 1377 0042 031E     		sub	r3, r0, #0
 1378 0044 02D0     		beq	.L85
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
 1379              		.loc 1 1147 0
 1380 0046 0023     		mov	r3, #0
 1381 0048 FB60     		str	r3, [r7, #12]
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
 1382              		.loc 1 1148 0
 1383 004a 05E0     		b	.L83
 1384              	.L85:
1141:Generated_Source\PSoC4/CyLib.c ****             {
 1385              		.loc 1 1141 0
 1386 004c 7B68     		ldr	r3, [r7, #4]
 1387 004e 013B     		sub	r3, r3, #1
 1388 0050 7B60     		str	r3, [r7, #4]
 1389              	.L84:
1141:Generated_Source\PSoC4/CyLib.c ****             {
 1390              		.loc 1 1141 0 is_stmt 0 discriminator 1
 1391 0052 7B68     		ldr	r3, [r7, #4]
 1392 0054 002B     		cmp	r3, #0
 1393 0056 EFD1     		bne	.L86
 1394              	.L83:
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
 1395              		.loc 1 1154 0 is_stmt 1
 1396 0058 FB68     		ldr	r3, [r7, #12]
1155:Generated_Source\PSoC4/CyLib.c ****     }
 1397              		.loc 1 1155 0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 46


 1398 005a 181C     		mov	r0, r3
 1399 005c BD46     		mov	sp, r7
 1400 005e 04B0     		add	sp, sp, #16
 1401              		@ sp needed
 1402 0060 80BD     		pop	{r7, pc}
 1403              	.L89:
 1404 0062 C046     		.align	2
 1405              	.L88:
 1406 0064 08000C40 		.word	1074528264
 1407              		.cfi_endproc
 1408              	.LFE14:
 1409              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 1410              		.section	.text.CySysClkEcoStop,"ax",%progbits
 1411              		.align	2
 1412              		.global	CySysClkEcoStop
 1413              		.code	16
 1414              		.thumb_func
 1415              		.type	CySysClkEcoStop, %function
 1416              	CySysClkEcoStop:
 1417              	.LFB15:
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
 1418              		.loc 1 1170 0
 1419              		.cfi_startproc
 1420 0000 80B5     		push	{r7, lr}
 1421              		.cfi_def_cfa_offset 8
 1422              		.cfi_offset 7, -8
 1423              		.cfi_offset 14, -4
 1424 0002 00AF     		add	r7, sp, #0
 1425              		.cfi_def_cfa_register 7
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
 1426              		.loc 1 1180 0
 1427 0004 034B     		ldr	r3, .L91
 1428 0006 034A     		ldr	r2, .L91
 1429 0008 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 47


 1430 000a 0349     		ldr	r1, .L91+4
 1431 000c 0A40     		and	r2, r1
 1432 000e 1A60     		str	r2, [r3]
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
 1433              		.loc 1 1182 0
 1434 0010 BD46     		mov	sp, r7
 1435              		@ sp needed
 1436 0012 80BD     		pop	{r7, pc}
 1437              	.L92:
 1438              		.align	2
 1439              	.L91:
 1440 0014 08000C40 		.word	1074528264
 1441 0018 FEFFFF7F 		.word	2147483646
 1442              		.cfi_endproc
 1443              	.LFE15:
 1444              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 1445              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 1446              		.align	2
 1447              		.global	CySysClkEcoReadStatus
 1448              		.code	16
 1449              		.thumb_func
 1450              		.type	CySysClkEcoReadStatus, %function
 1451              	CySysClkEcoReadStatus:
 1452              	.LFB16:
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
 1453              		.loc 1 1204 0
 1454              		.cfi_startproc
 1455 0000 80B5     		push	{r7, lr}
 1456              		.cfi_def_cfa_offset 8
 1457              		.cfi_offset 7, -8
 1458              		.cfi_offset 14, -4
 1459 0002 82B0     		sub	sp, sp, #8
 1460              		.cfi_def_cfa_offset 16
 1461 0004 00AF     		add	r7, sp, #0
 1462              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 48


1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
 1463              		.loc 1 1217 0
 1464 0006 064B     		ldr	r3, .L95
 1465 0008 1B68     		ldr	r3, [r3]
 1466 000a 0122     		mov	r2, #1
 1467 000c 1340     		and	r3, r2
 1468 000e 5A42     		neg	r2, r3
 1469 0010 5341     		adc	r3, r3, r2
 1470 0012 DBB2     		uxtb	r3, r3
 1471 0014 7B60     		str	r3, [r7, #4]
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
 1472              		.loc 1 1220 0
 1473 0016 7B68     		ldr	r3, [r7, #4]
1221:Generated_Source\PSoC4/CyLib.c ****     }
 1474              		.loc 1 1221 0
 1475 0018 181C     		mov	r0, r3
 1476 001a BD46     		mov	sp, r7
 1477 001c 02B0     		add	sp, sp, #8
 1478              		@ sp needed
 1479 001e 80BD     		pop	{r7, pc}
 1480              	.L96:
 1481              		.align	2
 1482              	.L95:
 1483 0020 0C000C40 		.word	1074528268
 1484              		.cfi_endproc
 1485              	.LFE16:
 1486              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 1487              		.section	.text.CySysClkConfigureEcoTrim,"ax",%progbits
 1488              		.align	2
 1489              		.global	CySysClkConfigureEcoTrim
 1490              		.code	16
 1491              		.thumb_func
 1492              		.type	CySysClkConfigureEcoTrim, %function
 1493              	CySysClkConfigureEcoTrim:
 1494              	.LFB17:
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 49


1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 50


1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
 1495              		.loc 1 1340 0
 1496              		.cfi_startproc
 1497 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 51


 1498              		.cfi_def_cfa_offset 12
 1499              		.cfi_offset 4, -12
 1500              		.cfi_offset 7, -8
 1501              		.cfi_offset 14, -4
 1502 0002 87B0     		sub	sp, sp, #28
 1503              		.cfi_def_cfa_offset 40
 1504 0004 00AF     		add	r7, sp, #0
 1505              		.cfi_def_cfa_register 7
 1506 0006 F860     		str	r0, [r7, #12]
 1507 0008 B960     		str	r1, [r7, #8]
 1508 000a 7A60     		str	r2, [r7, #4]
 1509 000c 3B60     		str	r3, [r7]
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 1510              		.loc 1 1344 0
 1511 000e 1723     		mov	r3, #23
 1512 0010 FC18     		add	r4, r7, r3
 1513 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 1514 0016 031C     		mov	r3, r0
 1515 0018 2370     		strb	r3, [r4]
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
 1516              		.loc 1 1346 0
 1517 001a 1D4B     		ldr	r3, .L98
 1518 001c 1B68     		ldr	r3, [r3]
 1519 001e 1F22     		mov	r2, #31
 1520 0020 9343     		bic	r3, r2
 1521 0022 3B61     		str	r3, [r7, #16]
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
 1522              		.loc 1 1347 0
 1523 0024 FB68     		ldr	r3, [r7, #12]
 1524 0026 0322     		mov	r2, #3
 1525 0028 1340     		and	r3, r2
 1526 002a 3A69     		ldr	r2, [r7, #16]
 1527 002c 1343     		orr	r3, r2
 1528 002e 3B61     		str	r3, [r7, #16]
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
 1529              		.loc 1 1348 0
 1530 0030 BB68     		ldr	r3, [r7, #8]
 1531 0032 9B00     		lsl	r3, r3, #2
 1532 0034 1C22     		mov	r2, #28
 1533 0036 1340     		and	r3, r2
 1534 0038 3A69     		ldr	r2, [r7, #16]
 1535 003a 1343     		orr	r3, r2
 1536 003c 3B61     		str	r3, [r7, #16]
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
 1537              		.loc 1 1349 0
 1538 003e 144B     		ldr	r3, .L98
 1539 0040 3A69     		ldr	r2, [r7, #16]
 1540 0042 1A60     		str	r2, [r3]
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
 1541              		.loc 1 1351 0
 1542 0044 134B     		ldr	r3, .L98+4
 1543 0046 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 52


 1544 0048 3F22     		mov	r2, #63
 1545 004a 9343     		bic	r3, r2
 1546 004c 3B61     		str	r3, [r7, #16]
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
 1547              		.loc 1 1354 0
 1548 004e 7B68     		ldr	r3, [r7, #4]
 1549 0050 0322     		mov	r2, #3
 1550 0052 1340     		and	r3, r2
 1551 0054 3A69     		ldr	r2, [r7, #16]
 1552 0056 1343     		orr	r3, r2
 1553 0058 3B61     		str	r3, [r7, #16]
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
 1554              		.loc 1 1355 0
 1555 005a 3B68     		ldr	r3, [r7]
 1556 005c 9B00     		lsl	r3, r3, #2
 1557 005e 0C22     		mov	r2, #12
 1558 0060 1340     		and	r3, r2
 1559 0062 3A69     		ldr	r2, [r7, #16]
 1560 0064 1343     		orr	r3, r2
 1561 0066 3B61     		str	r3, [r7, #16]
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
 1562              		.loc 1 1356 0
 1563 0068 BB6A     		ldr	r3, [r7, #40]
 1564 006a 1B01     		lsl	r3, r3, #4
 1565 006c 3022     		mov	r2, #48
 1566 006e 1340     		and	r3, r2
 1567 0070 3A69     		ldr	r2, [r7, #16]
 1568 0072 1343     		orr	r3, r2
 1569 0074 3B61     		str	r3, [r7, #16]
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
 1570              		.loc 1 1358 0
 1571 0076 074B     		ldr	r3, .L98+4
 1572 0078 3A69     		ldr	r2, [r7, #16]
 1573 007a 1A60     		str	r2, [r3]
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 1574              		.loc 1 1360 0
 1575 007c 1723     		mov	r3, #23
 1576 007e FB18     		add	r3, r7, r3
 1577 0080 1B78     		ldrb	r3, [r3]
 1578 0082 181C     		mov	r0, r3
 1579 0084 FFF7FEFF 		bl	CyExitCriticalSection
1361:Generated_Source\PSoC4/CyLib.c ****         }
 1580              		.loc 1 1361 0
 1581 0088 BD46     		mov	sp, r7
 1582 008a 07B0     		add	sp, sp, #28
 1583              		@ sp needed
 1584 008c 90BD     		pop	{r4, r7, pc}
 1585              	.L99:
 1586 008e C046     		.align	2
 1587              	.L98:
 1588 0090 0CFF0C40 		.word	1074593548
 1589 0094 10FF0C40 		.word	1074593552
 1590              		.cfi_endproc
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 53


 1591              	.LFE17:
 1592              		.size	CySysClkConfigureEcoTrim, .-CySysClkConfigureEcoTrim
 1593              		.global	__aeabi_uidiv
 1594              		.section	.text.CySysClkConfigureEcoDrive,"ax",%progbits
 1595              		.align	2
 1596              		.global	CySysClkConfigureEcoDrive
 1597              		.code	16
 1598              		.thumb_func
 1599              		.type	CySysClkConfigureEcoDrive, %function
 1600              	CySysClkConfigureEcoDrive:
 1601              	.LFB18:
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
 1602              		.loc 1 1391 0
 1603              		.cfi_startproc
 1604 0000 90B5     		push	{r4, r7, lr}
 1605              		.cfi_def_cfa_offset 12
 1606              		.cfi_offset 4, -12
 1607              		.cfi_offset 7, -8
 1608              		.cfi_offset 14, -4
 1609 0002 8FB0     		sub	sp, sp, #60
 1610              		.cfi_def_cfa_offset 72
 1611 0004 02AF     		add	r7, sp, #8
 1612              		.cfi_def_cfa 7, 64
 1613 0006 F860     		str	r0, [r7, #12]
 1614 0008 B960     		str	r1, [r7, #8]
 1615 000a 7A60     		str	r2, [r7, #4]
 1616 000c 3B60     		str	r3, [r7]
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 54


 1617              		.loc 1 1392 0
 1618 000e 0023     		mov	r3, #0
 1619 0010 FB62     		str	r3, [r7, #44]
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
 1620              		.loc 1 1403 0
 1621 0012 3A68     		ldr	r2, [r7]
 1622 0014 F423     		mov	r3, #244
 1623 0016 FF33     		add	r3, r3, #255
 1624 0018 9A42     		cmp	r2, r3
 1625 001a 07D9     		bls	.L101
 1626              		.loc 1 1403 0 is_stmt 0 discriminator 1
 1627 001c FB68     		ldr	r3, [r7, #12]
 1628 001e 634A     		ldr	r2, .L125
 1629 0020 9342     		cmp	r3, r2
 1630 0022 03D9     		bls	.L101
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
 1631              		.loc 1 1404 0 is_stmt 1
 1632 0024 FB68     		ldr	r3, [r7, #12]
 1633 0026 624A     		ldr	r2, .L125+4
 1634 0028 9342     		cmp	r3, r2
 1635 002a 02D9     		bls	.L102
 1636              	.L101:
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
 1637              		.loc 1 1406 0
 1638 002c 0123     		mov	r3, #1
 1639 002e FB62     		str	r3, [r7, #44]
 1640 0030 B6E0     		b	.L103
 1641              	.L102:
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
 1642              		.loc 1 1411 0
 1643 0032 3B68     		ldr	r3, [r7]
 1644 0034 5F4A     		ldr	r2, .L125+8
 1645 0036 9342     		cmp	r3, r2
 1646 0038 07D8     		bhi	.L104
 1647              		.loc 1 1411 0 is_stmt 0 discriminator 1
 1648 003a 3B68     		ldr	r3, [r7]
 1649 003c 181C     		mov	r0, r3
 1650 003e 6421     		mov	r1, #100
 1651 0040 FFF7FEFF 		bl	__aeabi_uidiv
 1652 0044 031C     		mov	r3, r0
 1653 0046 043B     		sub	r3, r3, #4
 1654 0048 00E0     		b	.L105
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 55


 1655              	.L104:
 1656              		.loc 1 1411 0 discriminator 2
 1657 004a 0723     		mov	r3, #7
 1658              	.L105:
 1659              		.loc 1 1411 0 discriminator 4
 1660 004c BB62     		str	r3, [r7, #40]
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
 1661              		.loc 1 1413 0 is_stmt 1 discriminator 4
 1662 004e 3B68     		ldr	r3, [r7]
 1663 0050 594A     		ldr	r2, .L125+12
 1664 0052 9342     		cmp	r3, r2
 1665 0054 02D8     		bhi	.L106
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
 1666              		.loc 1 1415 0
 1667 0056 0023     		mov	r3, #0
 1668 0058 BB62     		str	r3, [r7, #40]
 1669 005a 2CE0     		b	.L107
 1670              	.L106:
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
 1671              		.loc 1 1417 0
 1672 005c 3B68     		ldr	r3, [r7]
 1673 005e 574A     		ldr	r2, .L125+16
 1674 0060 9342     		cmp	r3, r2
 1675 0062 02D8     		bhi	.L108
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
 1676              		.loc 1 1419 0
 1677 0064 0123     		mov	r3, #1
 1678 0066 BB62     		str	r3, [r7, #40]
 1679 0068 25E0     		b	.L107
 1680              	.L108:
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
 1681              		.loc 1 1421 0
 1682 006a 3B68     		ldr	r3, [r7]
 1683 006c 544A     		ldr	r2, .L125+20
 1684 006e 9342     		cmp	r3, r2
 1685 0070 02D8     		bhi	.L109
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
 1686              		.loc 1 1423 0
 1687 0072 0223     		mov	r3, #2
 1688 0074 BB62     		str	r3, [r7, #40]
 1689 0076 1EE0     		b	.L107
 1690              	.L109:
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
 1691              		.loc 1 1425 0
 1692 0078 3B68     		ldr	r3, [r7]
 1693 007a 524A     		ldr	r2, .L125+24
 1694 007c 9342     		cmp	r3, r2
 1695 007e 02D8     		bhi	.L110
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 56


 1696              		.loc 1 1427 0
 1697 0080 0323     		mov	r3, #3
 1698 0082 BB62     		str	r3, [r7, #40]
 1699 0084 17E0     		b	.L107
 1700              	.L110:
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
 1701              		.loc 1 1429 0
 1702 0086 3A68     		ldr	r2, [r7]
 1703 0088 8023     		mov	r3, #128
 1704 008a DB00     		lsl	r3, r3, #3
 1705 008c 9A42     		cmp	r2, r3
 1706 008e 02D8     		bhi	.L111
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
 1707              		.loc 1 1431 0
 1708 0090 0423     		mov	r3, #4
 1709 0092 BB62     		str	r3, [r7, #40]
 1710 0094 0FE0     		b	.L107
 1711              	.L111:
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
 1712              		.loc 1 1433 0
 1713 0096 3B68     		ldr	r3, [r7]
 1714 0098 4B4A     		ldr	r2, .L125+28
 1715 009a 9342     		cmp	r3, r2
 1716 009c 02D8     		bhi	.L112
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
 1717              		.loc 1 1435 0
 1718 009e 0523     		mov	r3, #5
 1719 00a0 BB62     		str	r3, [r7, #40]
 1720 00a2 08E0     		b	.L107
 1721              	.L112:
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
 1722              		.loc 1 1437 0
 1723 00a4 3B68     		ldr	r3, [r7]
 1724 00a6 494A     		ldr	r2, .L125+32
 1725 00a8 9342     		cmp	r3, r2
 1726 00aa 02D8     		bhi	.L113
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
 1727              		.loc 1 1439 0
 1728 00ac 0623     		mov	r3, #6
 1729 00ae BB62     		str	r3, [r7, #40]
 1730 00b0 01E0     		b	.L107
 1731              	.L113:
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
 1732              		.loc 1 1443 0
 1733 00b2 0723     		mov	r3, #7
 1734 00b4 BB62     		str	r3, [r7, #40]
 1735              	.L107:
1444:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 57


1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
 1736              		.loc 1 1447 0
 1737 00b6 3B68     		ldr	r3, [r7]
 1738 00b8 3E4A     		ldr	r2, .L125+8
 1739 00ba 9342     		cmp	r3, r2
 1740 00bc 07D8     		bhi	.L114
 1741              		.loc 1 1447 0 is_stmt 0 discriminator 1
 1742 00be 3B68     		ldr	r3, [r7]
 1743 00c0 181C     		mov	r0, r3
 1744 00c2 C821     		mov	r1, #200
 1745 00c4 FFF7FEFF 		bl	__aeabi_uidiv
 1746 00c8 031C     		mov	r3, r0
 1747 00ca 023B     		sub	r3, r3, #2
 1748 00cc 00E0     		b	.L115
 1749              	.L114:
 1750              		.loc 1 1447 0 discriminator 2
 1751 00ce 0323     		mov	r3, #3
 1752              	.L115:
 1753              		.loc 1 1447 0 discriminator 4
 1754 00d0 FB61     		str	r3, [r7, #28]
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
 1755              		.loc 1 1450 0 is_stmt 1 discriminator 4
 1756 00d2 FB68     		ldr	r3, [r7, #12]
 1757 00d4 BA68     		ldr	r2, [r7, #8]
 1758 00d6 5A43     		mul	r2, r3
 1759 00d8 131C     		mov	r3, r2
 1760 00da 9B00     		lsl	r3, r3, #2
 1761 00dc 9B18     		add	r3, r3, r2
 1762 00de 1B01     		lsl	r3, r3, #4
 1763 00e0 9B1A     		sub	r3, r3, r2
 1764 00e2 181C     		mov	r0, r3
 1765 00e4 FA23     		mov	r3, #250
 1766 00e6 9900     		lsl	r1, r3, #2
 1767 00e8 FFF7FEFF 		bl	__aeabi_uidiv
 1768 00ec 031C     		mov	r3, r0
 1769 00ee 1C1C     		mov	r4, r3
 1770 00f0 FB68     		ldr	r3, [r7, #12]
 1771 00f2 BA68     		ldr	r2, [r7, #8]
 1772 00f4 5343     		mul	r3, r2
 1773 00f6 7A68     		ldr	r2, [r7, #4]
 1774 00f8 5343     		mul	r3, r2
 1775 00fa 181C     		mov	r0, r3
 1776 00fc FA23     		mov	r3, #250
 1777 00fe 9900     		lsl	r1, r3, #2
 1778 0100 FFF7FEFF 		bl	__aeabi_uidiv
 1779 0104 031C     		mov	r3, r0
 1780 0106 6343     		mul	r3, r4
 1781 0108 181C     		mov	r0, r3
 1782 010a 3149     		ldr	r1, .L125+36
 1783 010c FFF7FEFF 		bl	__aeabi_uidiv
 1784 0110 031C     		mov	r3, r0
 1785 0112 BB61     		str	r3, [r7, #24]
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 58


 1786              		.loc 1 1451 0 discriminator 4
 1787 0114 BB69     		ldr	r3, [r7, #24]
 1788 0116 032B     		cmp	r3, #3
 1789 0118 04D9     		bls	.L116
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
 1790              		.loc 1 1453 0
 1791 011a 0123     		mov	r3, #1
 1792 011c FB62     		str	r3, [r7, #44]
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
 1793              		.loc 1 1454 0
 1794 011e 0023     		mov	r3, #0
 1795 0120 3B62     		str	r3, [r7, #32]
 1796 0122 0BE0     		b	.L117
 1797              	.L116:
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
 1798              		.loc 1 1456 0
 1799 0124 BB69     		ldr	r3, [r7, #24]
 1800 0126 012B     		cmp	r3, #1
 1801 0128 02D9     		bls	.L118
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
 1802              		.loc 1 1458 0
 1803 012a BB69     		ldr	r3, [r7, #24]
 1804 012c 3B62     		str	r3, [r7, #32]
 1805 012e 05E0     		b	.L117
 1806              	.L118:
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
 1807              		.loc 1 1462 0
 1808 0130 BB69     		ldr	r3, [r7, #24]
 1809 0132 013B     		sub	r3, r3, #1
 1810 0134 5A1E     		sub	r2, r3, #1
 1811 0136 9341     		sbc	r3, r3, r2
 1812 0138 DBB2     		uxtb	r3, r3
 1813 013a 3B62     		str	r3, [r7, #32]
 1814              	.L117:
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
 1815              		.loc 1 1466 0
 1816 013c FB68     		ldr	r3, [r7, #12]
 1817 013e 254A     		ldr	r2, .L125+40
 1818 0140 9342     		cmp	r3, r2
 1819 0142 02D9     		bls	.L119
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
 1820              		.loc 1 1468 0
 1821 0144 0023     		mov	r3, #0
 1822 0146 7B62     		str	r3, [r7, #36]
 1823 0148 0FE0     		b	.L120
 1824              	.L119:
1469:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 59


1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
 1825              		.loc 1 1470 0
 1826 014a FB68     		ldr	r3, [r7, #12]
 1827 014c 224A     		ldr	r2, .L125+44
 1828 014e 9342     		cmp	r3, r2
 1829 0150 02D9     		bls	.L121
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
 1830              		.loc 1 1472 0
 1831 0152 0123     		mov	r3, #1
 1832 0154 7B62     		str	r3, [r7, #36]
 1833 0156 08E0     		b	.L120
 1834              	.L121:
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
 1835              		.loc 1 1474 0
 1836 0158 FB68     		ldr	r3, [r7, #12]
 1837 015a 204A     		ldr	r2, .L125+48
 1838 015c 9342     		cmp	r3, r2
 1839 015e 02D9     		bls	.L122
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
 1840              		.loc 1 1476 0
 1841 0160 0223     		mov	r3, #2
 1842 0162 7B62     		str	r3, [r7, #36]
 1843 0164 01E0     		b	.L120
 1844              	.L122:
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
 1845              		.loc 1 1480 0
 1846 0166 0323     		mov	r3, #3
 1847 0168 7B62     		str	r3, [r7, #36]
 1848              	.L120:
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
 1849              		.loc 1 1484 0
 1850 016a 7B6A     		ldr	r3, [r7, #36]
 1851 016c 7B61     		str	r3, [r7, #20]
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
 1852              		.loc 1 1486 0
 1853 016e F869     		ldr	r0, [r7, #28]
 1854 0170 B96A     		ldr	r1, [r7, #40]
 1855 0172 7A69     		ldr	r2, [r7, #20]
 1856 0174 7C6A     		ldr	r4, [r7, #36]
 1857 0176 3B6A     		ldr	r3, [r7, #32]
 1858 0178 0093     		str	r3, [sp]
 1859 017a 231C     		mov	r3, r4
 1860 017c FFF7FEFF 		bl	CySysClkConfigureEcoTrim
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
 1861              		.loc 1 1489 0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 60


 1862 0180 3B68     		ldr	r3, [r7]
 1863 0182 012B     		cmp	r3, #1
 1864 0184 06D8     		bhi	.L123
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
 1865              		.loc 1 1492 0
 1866 0186 164B     		ldr	r3, .L125+52
 1867 0188 154A     		ldr	r2, .L125+52
 1868 018a 1268     		ldr	r2, [r2]
 1869 018c 0221     		mov	r1, #2
 1870 018e 0A43     		orr	r2, r1
 1871 0190 1A60     		str	r2, [r3]
 1872 0192 05E0     		b	.L103
 1873              	.L123:
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
 1874              		.loc 1 1499 0
 1875 0194 124B     		ldr	r3, .L125+52
 1876 0196 124A     		ldr	r2, .L125+52
 1877 0198 1268     		ldr	r2, [r2]
 1878 019a 0221     		mov	r1, #2
 1879 019c 8A43     		bic	r2, r1
 1880 019e 1A60     		str	r2, [r3]
 1881              	.L103:
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
 1882              		.loc 1 1503 0
 1883 01a0 FB6A     		ldr	r3, [r7, #44]
1504:Generated_Source\PSoC4/CyLib.c ****         }
 1884              		.loc 1 1504 0
 1885 01a2 181C     		mov	r0, r3
 1886 01a4 BD46     		mov	sp, r7
 1887 01a6 0DB0     		add	sp, sp, #52
 1888              		@ sp needed
 1889 01a8 90BD     		pop	{r4, r7, pc}
 1890              	.L126:
 1891 01aa C046     		.align	2
 1892              	.L125:
 1893 01ac 9F0F0000 		.word	3999
 1894 01b0 35820000 		.word	33333
 1895 01b4 AF040000 		.word	1199
 1896 01b8 57020000 		.word	599
 1897 01bc BB020000 		.word	699
 1898 01c0 1F030000 		.word	799
 1899 01c4 83030000 		.word	899
 1900 01c8 7D040000 		.word	1149
 1901 01cc FA040000 		.word	1274
 1902 01d0 8074D21A 		.word	450000000
 1903 01d4 30750000 		.word	30000
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 61


 1904 01d8 C05D0000 		.word	24000
 1905 01dc 68420000 		.word	17000
 1906 01e0 08000C40 		.word	1074528264
 1907              		.cfi_endproc
 1908              	.LFE18:
 1909              		.size	CySysClkConfigureEcoDrive, .-CySysClkConfigureEcoDrive
 1910              		.section	.text.CySysClkPllStart,"ax",%progbits
 1911              		.align	2
 1912              		.global	CySysClkPllStart
 1913              		.code	16
 1914              		.thumb_func
 1915              		.type	CySysClkPllStart, %function
 1916              	CySysClkPllStart:
 1917              	.LFB19:
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
 1918              		.loc 1 1542 0
 1919              		.cfi_startproc
 1920 0000 90B5     		push	{r4, r7, lr}
 1921              		.cfi_def_cfa_offset 12
 1922              		.cfi_offset 4, -12
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 62


 1923              		.cfi_offset 7, -8
 1924              		.cfi_offset 14, -4
 1925 0002 87B0     		sub	sp, sp, #28
 1926              		.cfi_def_cfa_offset 40
 1927 0004 00AF     		add	r7, sp, #0
 1928              		.cfi_def_cfa_register 7
 1929 0006 7860     		str	r0, [r7, #4]
 1930 0008 3960     		str	r1, [r7]
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
 1931              		.loc 1 1543 0
 1932 000a FF23     		mov	r3, #255
 1933 000c 7B61     		str	r3, [r7, #20]
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1934              		.loc 1 1545 0
 1935 000e 0023     		mov	r3, #0
 1936 0010 3B61     		str	r3, [r7, #16]
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
 1937              		.loc 1 1547 0
 1938 0012 7B68     		ldr	r3, [r7, #4]
 1939 0014 012B     		cmp	r3, #1
 1940 0016 6FD8     		bhi	.L128
 1941              		.loc 1 1547 0 is_stmt 0 discriminator 1
 1942 0018 3B68     		ldr	r3, [r7]
 1943 001a 012B     		cmp	r3, #1
 1944 001c 6CD8     		bhi	.L128
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 1945              		.loc 1 1549 0 is_stmt 1
 1946 001e 0F23     		mov	r3, #15
 1947 0020 FC18     		add	r4, r7, r3
 1948 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 1949 0026 031C     		mov	r3, r0
 1950 0028 2370     		strb	r3, [r4]
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
 1951              		.loc 1 1552 0
 1952 002a 3748     		ldr	r0, .L135
 1953 002c 3649     		ldr	r1, .L135
 1954 002e 7A68     		ldr	r2, [r7, #4]
 1955 0030 131C     		mov	r3, r2
 1956 0032 5B00     		lsl	r3, r3, #1
 1957 0034 9B18     		add	r3, r3, r2
 1958 0036 9B00     		lsl	r3, r3, #2
 1959 0038 5B58     		ldr	r3, [r3, r1]
 1960 003a 344A     		ldr	r2, .L135+4
 1961 003c 1340     		and	r3, r2
 1962 003e 191C     		mov	r1, r3
 1963 0040 7A68     		ldr	r2, [r7, #4]
 1964 0042 131C     		mov	r3, r2
 1965 0044 5B00     		lsl	r3, r3, #1
 1966 0046 9B18     		add	r3, r3, r2
 1967 0048 9B00     		lsl	r3, r3, #2
 1968 004a 1950     		str	r1, [r3, r0]
1553:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 63


1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
 1969              		.loc 1 1555 0
 1970 004c 2E48     		ldr	r0, .L135
 1971 004e 2E49     		ldr	r1, .L135
 1972 0050 7A68     		ldr	r2, [r7, #4]
 1973 0052 131C     		mov	r3, r2
 1974 0054 5B00     		lsl	r3, r3, #1
 1975 0056 9B18     		add	r3, r3, r2
 1976 0058 9B00     		lsl	r3, r3, #2
 1977 005a 5B58     		ldr	r3, [r3, r1]
 1978 005c 8022     		mov	r2, #128
 1979 005e 1206     		lsl	r2, r2, #24
 1980 0060 1A43     		orr	r2, r3
 1981 0062 111C     		mov	r1, r2
 1982 0064 7A68     		ldr	r2, [r7, #4]
 1983 0066 131C     		mov	r3, r2
 1984 0068 5B00     		lsl	r3, r3, #1
 1985 006a 9B18     		add	r3, r3, r2
 1986 006c 9B00     		lsl	r3, r3, #2
 1987 006e 1950     		str	r1, [r3, r0]
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 1988              		.loc 1 1557 0
 1989 0070 0F23     		mov	r3, #15
 1990 0072 FB18     		add	r3, r7, r3
 1991 0074 1B78     		ldrb	r3, [r3]
 1992 0076 181C     		mov	r0, r3
 1993 0078 FFF7FEFF 		bl	CyExitCriticalSection
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
 1994              		.loc 1 1560 0
 1995 007c 0520     		mov	r0, #5
 1996 007e FFF7FEFF 		bl	CyDelayUs
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 1997              		.loc 1 1561 0
 1998 0082 0F23     		mov	r3, #15
 1999 0084 FC18     		add	r4, r7, r3
 2000 0086 FFF7FEFF 		bl	CyEnterCriticalSection
 2001 008a 031C     		mov	r3, r0
 2002 008c 2370     		strb	r3, [r4]
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
 2003              		.loc 1 1562 0
 2004 008e 1E48     		ldr	r0, .L135
 2005 0090 1D49     		ldr	r1, .L135
 2006 0092 7A68     		ldr	r2, [r7, #4]
 2007 0094 131C     		mov	r3, r2
 2008 0096 5B00     		lsl	r3, r3, #1
 2009 0098 9B18     		add	r3, r3, r2
 2010 009a 9B00     		lsl	r3, r3, #2
 2011 009c 5B58     		ldr	r3, [r3, r1]
 2012 009e 8022     		mov	r2, #128
 2013 00a0 D205     		lsl	r2, r2, #23
 2014 00a2 1A43     		orr	r2, r3
 2015 00a4 111C     		mov	r1, r2
 2016 00a6 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 64


 2017 00a8 131C     		mov	r3, r2
 2018 00aa 5B00     		lsl	r3, r3, #1
 2019 00ac 9B18     		add	r3, r3, r2
 2020 00ae 9B00     		lsl	r3, r3, #2
 2021 00b0 1950     		str	r1, [r3, r0]
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 2022              		.loc 1 1563 0
 2023 00b2 0F23     		mov	r3, #15
 2024 00b4 FB18     		add	r3, r7, r3
 2025 00b6 1B78     		ldrb	r3, [r3]
 2026 00b8 181C     		mov	r0, r3
 2027 00ba FFF7FEFF 		bl	CyExitCriticalSection
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
 2028              		.loc 1 1565 0
 2029 00be 3B68     		ldr	r3, [r7]
 2030 00c0 002B     		cmp	r3, #0
 2031 00c2 18D0     		beq	.L129
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
 2032              		.loc 1 1567 0
 2033 00c4 1023     		mov	r3, #16
 2034 00c6 3B61     		str	r3, [r7, #16]
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
 2035              		.loc 1 1569 0
 2036 00c8 12E0     		b	.L130
 2037              	.L132:
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
 2038              		.loc 1 1572 0
 2039 00ca 7B68     		ldr	r3, [r7, #4]
 2040 00cc 181C     		mov	r0, r3
 2041 00ce FFF7FEFF 		bl	CySysClkPllGetLockStatus
 2042 00d2 031E     		sub	r3, r0, #0
 2043 00d4 06D0     		beq	.L131
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
 2044              		.loc 1 1574 0
 2045 00d6 0023     		mov	r3, #0
 2046 00d8 3B61     		str	r3, [r7, #16]
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
 2047              		.loc 1 1575 0
 2048 00da 7B68     		ldr	r3, [r7, #4]
 2049 00dc 181C     		mov	r0, r3
 2050 00de FFF7FEFF 		bl	CySysClkPllGetUnlockStatus
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
 2051              		.loc 1 1576 0
 2052 00e2 08E0     		b	.L129
 2053              	.L131:
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
 2054              		.loc 1 1579 0
 2055 00e4 0120     		mov	r0, #1
 2056 00e6 FFF7FEFF 		bl	CyDelayUs
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 65


1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
 2057              		.loc 1 1580 0
 2058 00ea 7B69     		ldr	r3, [r7, #20]
 2059 00ec 013B     		sub	r3, r3, #1
 2060 00ee 7B61     		str	r3, [r7, #20]
 2061              	.L130:
1569:Generated_Source\PSoC4/CyLib.c ****                 {
 2062              		.loc 1 1569 0
 2063 00f0 7B69     		ldr	r3, [r7, #20]
 2064 00f2 002B     		cmp	r3, #0
 2065 00f4 E9D1     		bne	.L132
 2066              	.L129:
1565:Generated_Source\PSoC4/CyLib.c ****             {
 2067              		.loc 1 1565 0
 2068 00f6 01E0     		b	.L133
 2069              	.L128:
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
 2070              		.loc 1 1586 0
 2071 00f8 0123     		mov	r3, #1
 2072 00fa 3B61     		str	r3, [r7, #16]
 2073              	.L133:
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
 2074              		.loc 1 1589 0
 2075 00fc 3B69     		ldr	r3, [r7, #16]
1590:Generated_Source\PSoC4/CyLib.c ****     }
 2076              		.loc 1 1590 0
 2077 00fe 181C     		mov	r0, r3
 2078 0100 BD46     		mov	sp, r7
 2079 0102 07B0     		add	sp, sp, #28
 2080              		@ sp needed
 2081 0104 90BD     		pop	{r4, r7, pc}
 2082              	.L136:
 2083 0106 C046     		.align	2
 2084              	.L135:
 2085 0108 14000C40 		.word	1074528276
 2086 010c FFFFFFBF 		.word	-1073741825
 2087              		.cfi_endproc
 2088              	.LFE19:
 2089              		.size	CySysClkPllStart, .-CySysClkPllStart
 2090              		.section	.text.CySysClkPllGetLockStatus,"ax",%progbits
 2091              		.align	2
 2092              		.global	CySysClkPllGetLockStatus
 2093              		.code	16
 2094              		.thumb_func
 2095              		.type	CySysClkPllGetLockStatus, %function
 2096              	CySysClkPllGetLockStatus:
 2097              	.LFB20:
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 66


1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
 2098              		.loc 1 1609 0
 2099              		.cfi_startproc
 2100 0000 90B5     		push	{r4, r7, lr}
 2101              		.cfi_def_cfa_offset 12
 2102              		.cfi_offset 4, -12
 2103              		.cfi_offset 7, -8
 2104              		.cfi_offset 14, -4
 2105 0002 85B0     		sub	sp, sp, #20
 2106              		.cfi_def_cfa_offset 32
 2107 0004 00AF     		add	r7, sp, #0
 2108              		.cfi_def_cfa_register 7
 2109 0006 7860     		str	r0, [r7, #4]
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
 2110              		.loc 1 1613 0
 2111 0008 7B68     		ldr	r3, [r7, #4]
 2112 000a 012B     		cmp	r3, #1
 2113 000c 02D9     		bls	.L138
 2114              		.loc 1 1613 0 is_stmt 0 discriminator 1
 2115 000e 0020     		mov	r0, #0
 2116 0010 FFF7FEFF 		bl	CyHalt
 2117              	.L138:
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 2118              		.loc 1 1615 0 is_stmt 1
 2119 0014 0B23     		mov	r3, #11
 2120 0016 FC18     		add	r4, r7, r3
 2121 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 2122 001c 031C     		mov	r3, r0
 2123 001e 2370     		strb	r3, [r4]
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
 2124              		.loc 1 1618 0
 2125 0020 1149     		ldr	r1, .L141
 2126 0022 7A68     		ldr	r2, [r7, #4]
 2127 0024 131C     		mov	r3, r2
 2128 0026 5B00     		lsl	r3, r3, #1
 2129 0028 9B18     		add	r3, r3, r2
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 67


 2130 002a 9B00     		lsl	r3, r3, #2
 2131 002c CB18     		add	r3, r1, r3
 2132 002e 5B68     		ldr	r3, [r3, #4]
 2133 0030 0122     		mov	r2, #1
 2134 0032 1340     		and	r3, r2
 2135 0034 FB60     		str	r3, [r7, #12]
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
 2136              		.loc 1 1619 0
 2137 0036 FB68     		ldr	r3, [r7, #12]
 2138 0038 002B     		cmp	r3, #0
 2139 003a 0AD0     		beq	.L139
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
 2140              		.loc 1 1621 0
 2141 003c 0A49     		ldr	r1, .L141
 2142 003e 7A68     		ldr	r2, [r7, #4]
 2143 0040 131C     		mov	r3, r2
 2144 0042 5B00     		lsl	r3, r3, #1
 2145 0044 9B18     		add	r3, r3, r2
 2146 0046 9B00     		lsl	r3, r3, #2
 2147 0048 CB18     		add	r3, r1, r3
 2148 004a 5B68     		ldr	r3, [r3, #4]
 2149 004c 0122     		mov	r2, #1
 2150 004e 1340     		and	r3, r2
 2151 0050 FB60     		str	r3, [r7, #12]
 2152              	.L139:
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 2153              		.loc 1 1624 0
 2154 0052 0B23     		mov	r3, #11
 2155 0054 FB18     		add	r3, r7, r3
 2156 0056 1B78     		ldrb	r3, [r3]
 2157 0058 181C     		mov	r0, r3
 2158 005a FFF7FEFF 		bl	CyExitCriticalSection
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
 2159              		.loc 1 1626 0
 2160 005e FB68     		ldr	r3, [r7, #12]
1627:Generated_Source\PSoC4/CyLib.c ****     }
 2161              		.loc 1 1627 0
 2162 0060 181C     		mov	r0, r3
 2163 0062 BD46     		mov	sp, r7
 2164 0064 05B0     		add	sp, sp, #20
 2165              		@ sp needed
 2166 0066 90BD     		pop	{r4, r7, pc}
 2167              	.L142:
 2168              		.align	2
 2169              	.L141:
 2170 0068 14000C40 		.word	1074528276
 2171              		.cfi_endproc
 2172              	.LFE20:
 2173              		.size	CySysClkPllGetLockStatus, .-CySysClkPllGetLockStatus
 2174              		.section	.text.CySysClkPllStop,"ax",%progbits
 2175              		.align	2
 2176              		.global	CySysClkPllStop
 2177              		.code	16
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 68


 2178              		.thumb_func
 2179              		.type	CySysClkPllStop, %function
 2180              	CySysClkPllStop:
 2181              	.LFB21:
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
 2182              		.loc 1 1646 0
 2183              		.cfi_startproc
 2184 0000 90B5     		push	{r4, r7, lr}
 2185              		.cfi_def_cfa_offset 12
 2186              		.cfi_offset 4, -12
 2187              		.cfi_offset 7, -8
 2188              		.cfi_offset 14, -4
 2189 0002 85B0     		sub	sp, sp, #20
 2190              		.cfi_def_cfa_offset 32
 2191 0004 00AF     		add	r7, sp, #0
 2192              		.cfi_def_cfa_register 7
 2193 0006 7860     		str	r0, [r7, #4]
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
 2194              		.loc 1 1649 0
 2195 0008 7B68     		ldr	r3, [r7, #4]
 2196 000a 012B     		cmp	r3, #1
 2197 000c 1BD8     		bhi	.L143
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 2198              		.loc 1 1651 0
 2199 000e 0F23     		mov	r3, #15
 2200 0010 FC18     		add	r4, r7, r3
 2201 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 2202 0016 031C     		mov	r3, r0
 2203 0018 2370     		strb	r3, [r4]
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
 2204              		.loc 1 1652 0
 2205 001a 0C48     		ldr	r0, .L145
 2206 001c 0B49     		ldr	r1, .L145
 2207 001e 7A68     		ldr	r2, [r7, #4]
 2208 0020 131C     		mov	r3, r2
 2209 0022 5B00     		lsl	r3, r3, #1
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 69


 2210 0024 9B18     		add	r3, r3, r2
 2211 0026 9B00     		lsl	r3, r3, #2
 2212 0028 5B58     		ldr	r3, [r3, r1]
 2213 002a 9B00     		lsl	r3, r3, #2
 2214 002c 9908     		lsr	r1, r3, #2
 2215 002e 7A68     		ldr	r2, [r7, #4]
 2216 0030 131C     		mov	r3, r2
 2217 0032 5B00     		lsl	r3, r3, #1
 2218 0034 9B18     		add	r3, r3, r2
 2219 0036 9B00     		lsl	r3, r3, #2
 2220 0038 1950     		str	r1, [r3, r0]
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 2221              		.loc 1 1653 0
 2222 003a 0F23     		mov	r3, #15
 2223 003c FB18     		add	r3, r7, r3
 2224 003e 1B78     		ldrb	r3, [r3]
 2225 0040 181C     		mov	r0, r3
 2226 0042 FFF7FEFF 		bl	CyExitCriticalSection
 2227              	.L143:
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
 2228              		.loc 1 1655 0
 2229 0046 BD46     		mov	sp, r7
 2230 0048 05B0     		add	sp, sp, #20
 2231              		@ sp needed
 2232 004a 90BD     		pop	{r4, r7, pc}
 2233              	.L146:
 2234              		.align	2
 2235              	.L145:
 2236 004c 14000C40 		.word	1074528276
 2237              		.cfi_endproc
 2238              	.LFE21:
 2239              		.size	CySysClkPllStop, .-CySysClkPllStop
 2240              		.section	.text.CySysClkPllSetPQ,"ax",%progbits
 2241              		.align	2
 2242              		.global	CySysClkPllSetPQ
 2243              		.code	16
 2244              		.thumb_func
 2245              		.type	CySysClkPllSetPQ, %function
 2246              	CySysClkPllSetPQ:
 2247              	.LFB22:
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 70


1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
 2248              		.loc 1 1691 0
 2249              		.cfi_startproc
 2250 0000 90B5     		push	{r4, r7, lr}
 2251              		.cfi_def_cfa_offset 12
 2252              		.cfi_offset 4, -12
 2253              		.cfi_offset 7, -8
 2254              		.cfi_offset 14, -4
 2255 0002 89B0     		sub	sp, sp, #36
 2256              		.cfi_def_cfa_offset 48
 2257 0004 00AF     		add	r7, sp, #0
 2258              		.cfi_def_cfa_register 7
 2259 0006 F860     		str	r0, [r7, #12]
 2260 0008 B960     		str	r1, [r7, #8]
 2261 000a 7A60     		str	r2, [r7, #4]
 2262 000c 3B60     		str	r3, [r7]
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
 2263              		.loc 1 1695 0
 2264 000e 0123     		mov	r3, #1
 2265 0010 FB61     		str	r3, [r7, #28]
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 2266              		.loc 1 1697 0
 2267 0012 1B23     		mov	r3, #27
 2268 0014 FC18     		add	r4, r7, r3
 2269 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 2270 001a 031C     		mov	r3, r0
 2271 001c 2370     		strb	r3, [r4]
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
 2272              		.loc 1 1699 0
 2273 001e FB68     		ldr	r3, [r7, #12]
 2274 0020 181C     		mov	r0, r3
 2275 0022 FFF7FEFF 		bl	CySysClkPllConfigChangeAllowed
 2276 0026 031C     		mov	r3, r0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 71


 2277 0028 7B61     		str	r3, [r7, #20]
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
 2278              		.loc 1 1701 0
 2279 002a FB68     		ldr	r3, [r7, #12]
 2280 002c 012B     		cmp	r3, #1
 2281 002e 41D8     		bhi	.L148
 2282              		.loc 1 1701 0 is_stmt 0 discriminator 1
 2283 0030 BB68     		ldr	r3, [r7, #8]
 2284 0032 032B     		cmp	r3, #3
 2285 0034 3ED9     		bls	.L148
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
 2286              		.loc 1 1702 0 is_stmt 1
 2287 0036 BA68     		ldr	r2, [r7, #8]
 2288 0038 0423     		mov	r3, #4
 2289 003a FF33     		add	r3, r3, #255
 2290 003c 9A42     		cmp	r2, r3
 2291 003e 39D8     		bhi	.L148
 2292              		.loc 1 1702 0 is_stmt 0 discriminator 1
 2293 0040 7B68     		ldr	r3, [r7, #4]
 2294 0042 002B     		cmp	r3, #0
 2295 0044 36D0     		beq	.L148
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
 2296              		.loc 1 1703 0 is_stmt 1
 2297 0046 7B68     		ldr	r3, [r7, #4]
 2298 0048 402B     		cmp	r3, #64
 2299 004a 33D8     		bhi	.L148
 2300              		.loc 1 1703 0 is_stmt 0 discriminator 1
 2301 004c 3B68     		ldr	r3, [r7]
 2302 004e 012B     		cmp	r3, #1
 2303 0050 30D9     		bls	.L148
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
 2304              		.loc 1 1704 0 is_stmt 1
 2305 0052 3B68     		ldr	r3, [r7]
 2306 0054 032B     		cmp	r3, #3
 2307 0056 2DD8     		bhi	.L148
 2308              		.loc 1 1704 0 is_stmt 0 discriminator 1
 2309 0058 7B69     		ldr	r3, [r7, #20]
 2310 005a 002B     		cmp	r3, #0
 2311 005c 2AD1     		bne	.L148
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
 2312              		.loc 1 1708 0 is_stmt 1
 2313 005e 1B49     		ldr	r1, .L150
 2314 0060 FA68     		ldr	r2, [r7, #12]
 2315 0062 131C     		mov	r3, r2
 2316 0064 5B00     		lsl	r3, r3, #1
 2317 0066 9B18     		add	r3, r3, r2
 2318 0068 9B00     		lsl	r3, r3, #2
 2319 006a 5B58     		ldr	r3, [r3, r1]
 2320 006c 184A     		ldr	r2, .L150+4
 2321 006e 1340     		and	r3, r2
 2322 0070 3B61     		str	r3, [r7, #16]
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 72


1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
 2323              		.loc 1 1712 0
 2324 0072 BB68     		ldr	r3, [r7, #8]
 2325 0074 FF22     		mov	r2, #255
 2326 0076 1340     		and	r3, r2
 2327 0078 3A69     		ldr	r2, [r7, #16]
 2328 007a 1343     		orr	r3, r2
 2329 007c 3B61     		str	r3, [r7, #16]
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
 2330              		.loc 1 1713 0
 2331 007e 7B68     		ldr	r3, [r7, #4]
 2332 0080 013B     		sub	r3, r3, #1
 2333 0082 1A02     		lsl	r2, r3, #8
 2334 0084 FC23     		mov	r3, #252
 2335 0086 9B01     		lsl	r3, r3, #6
 2336 0088 1340     		and	r3, r2
 2337 008a 3A69     		ldr	r2, [r7, #16]
 2338 008c 1343     		orr	r3, r2
 2339 008e 3B61     		str	r3, [r7, #16]
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
 2340              		.loc 1 1714 0
 2341 0090 3B68     		ldr	r3, [r7]
 2342 0092 1A04     		lsl	r2, r3, #16
 2343 0094 E023     		mov	r3, #224
 2344 0096 DB02     		lsl	r3, r3, #11
 2345 0098 1340     		and	r3, r2
 2346 009a 3A69     		ldr	r2, [r7, #16]
 2347 009c 1343     		orr	r3, r2
 2348 009e 3B61     		str	r3, [r7, #16]
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
 2349              		.loc 1 1716 0
 2350 00a0 0A49     		ldr	r1, .L150
 2351 00a2 FA68     		ldr	r2, [r7, #12]
 2352 00a4 131C     		mov	r3, r2
 2353 00a6 5B00     		lsl	r3, r3, #1
 2354 00a8 9B18     		add	r3, r3, r2
 2355 00aa 9B00     		lsl	r3, r3, #2
 2356 00ac 3A69     		ldr	r2, [r7, #16]
 2357 00ae 5A50     		str	r2, [r3, r1]
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
 2358              		.loc 1 1718 0
 2359 00b0 0023     		mov	r3, #0
 2360 00b2 FB61     		str	r3, [r7, #28]
 2361              	.L148:
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 2362              		.loc 1 1721 0
 2363 00b4 1B23     		mov	r3, #27
 2364 00b6 FB18     		add	r3, r7, r3
 2365 00b8 1B78     		ldrb	r3, [r3]
 2366 00ba 181C     		mov	r0, r3
 2367 00bc FFF7FEFF 		bl	CyExitCriticalSection
1722:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 73


1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
 2368              		.loc 1 1723 0
 2369 00c0 FB69     		ldr	r3, [r7, #28]
1724:Generated_Source\PSoC4/CyLib.c ****     }
 2370              		.loc 1 1724 0
 2371 00c2 181C     		mov	r0, r3
 2372 00c4 BD46     		mov	sp, r7
 2373 00c6 09B0     		add	sp, sp, #36
 2374              		@ sp needed
 2375 00c8 90BD     		pop	{r4, r7, pc}
 2376              	.L151:
 2377 00ca C046     		.align	2
 2378              	.L150:
 2379 00cc 14000C40 		.word	1074528276
 2380 00d0 00C0F8FF 		.word	-475136
 2381              		.cfi_endproc
 2382              	.LFE22:
 2383              		.size	CySysClkPllSetPQ, .-CySysClkPllSetPQ
 2384              		.section	.text.CySysClkPllSetBypassMode,"ax",%progbits
 2385              		.align	2
 2386              		.global	CySysClkPllSetBypassMode
 2387              		.code	16
 2388              		.thumb_func
 2389              		.type	CySysClkPllSetBypassMode, %function
 2390              	CySysClkPllSetBypassMode:
 2391              	.LFB23:
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 74


1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
 2392              		.loc 1 1759 0
 2393              		.cfi_startproc
 2394 0000 90B5     		push	{r4, r7, lr}
 2395              		.cfi_def_cfa_offset 12
 2396              		.cfi_offset 4, -12
 2397              		.cfi_offset 7, -8
 2398              		.cfi_offset 14, -4
 2399 0002 85B0     		sub	sp, sp, #20
 2400              		.cfi_def_cfa_offset 32
 2401 0004 00AF     		add	r7, sp, #0
 2402              		.cfi_def_cfa_register 7
 2403 0006 7860     		str	r0, [r7, #4]
 2404 0008 3960     		str	r1, [r7]
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 2405              		.loc 1 1763 0
 2406 000a 0F23     		mov	r3, #15
 2407 000c FC18     		add	r4, r7, r3
 2408 000e FFF7FEFF 		bl	CyEnterCriticalSection
 2409 0012 031C     		mov	r3, r0
 2410 0014 2370     		strb	r3, [r4]
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
 2411              		.loc 1 1765 0
 2412 0016 7B68     		ldr	r3, [r7, #4]
 2413 0018 012B     		cmp	r3, #1
 2414 001a 19D8     		bhi	.L153
 2415              		.loc 1 1765 0 is_stmt 0 discriminator 1
 2416 001c 3B68     		ldr	r3, [r7]
 2417 001e 032B     		cmp	r3, #3
 2418 0020 16D8     		bhi	.L153
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
 2419              		.loc 1 1767 0 is_stmt 1
 2420 0022 1049     		ldr	r1, .L154
 2421 0024 7A68     		ldr	r2, [r7, #4]
 2422 0026 131C     		mov	r3, r2
 2423 0028 5B00     		lsl	r3, r3, #1
 2424 002a 9B18     		add	r3, r3, r2
 2425 002c 9B00     		lsl	r3, r3, #2
 2426 002e 5B58     		ldr	r3, [r3, r1]
 2427 0030 0D4A     		ldr	r2, .L154+4
 2428 0032 1340     		and	r3, r2
 2429 0034 BB60     		str	r3, [r7, #8]
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
 2430              		.loc 1 1768 0
 2431 0036 3B68     		ldr	r3, [r7]
 2432 0038 1B05     		lsl	r3, r3, #20
 2433 003a BA68     		ldr	r2, [r7, #8]
 2434 003c 1343     		orr	r3, r2
 2435 003e BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 75


1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
 2436              		.loc 1 1769 0
 2437 0040 0849     		ldr	r1, .L154
 2438 0042 7A68     		ldr	r2, [r7, #4]
 2439 0044 131C     		mov	r3, r2
 2440 0046 5B00     		lsl	r3, r3, #1
 2441 0048 9B18     		add	r3, r3, r2
 2442 004a 9B00     		lsl	r3, r3, #2
 2443 004c BA68     		ldr	r2, [r7, #8]
 2444 004e 5A50     		str	r2, [r3, r1]
 2445              	.L153:
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 2446              		.loc 1 1772 0
 2447 0050 0F23     		mov	r3, #15
 2448 0052 FB18     		add	r3, r7, r3
 2449 0054 1B78     		ldrb	r3, [r3]
 2450 0056 181C     		mov	r0, r3
 2451 0058 FFF7FEFF 		bl	CyExitCriticalSection
1773:Generated_Source\PSoC4/CyLib.c ****     }
 2452              		.loc 1 1773 0
 2453 005c BD46     		mov	sp, r7
 2454 005e 05B0     		add	sp, sp, #20
 2455              		@ sp needed
 2456 0060 90BD     		pop	{r4, r7, pc}
 2457              	.L155:
 2458 0062 C046     		.align	2
 2459              	.L154:
 2460 0064 14000C40 		.word	1074528276
 2461 0068 FFFFCFFF 		.word	-3145729
 2462              		.cfi_endproc
 2463              	.LFE23:
 2464              		.size	CySysClkPllSetBypassMode, .-CySysClkPllSetBypassMode
 2465              		.section	.text.CySysClkPllGetBypassMode,"ax",%progbits
 2466              		.align	2
 2467              		.code	16
 2468              		.thumb_func
 2469              		.type	CySysClkPllGetBypassMode, %function
 2470              	CySysClkPllGetBypassMode:
 2471              	.LFB24:
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 76


1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
 2472              		.loc 1 1792 0
 2473              		.cfi_startproc
 2474 0000 90B5     		push	{r4, r7, lr}
 2475              		.cfi_def_cfa_offset 12
 2476              		.cfi_offset 4, -12
 2477              		.cfi_offset 7, -8
 2478              		.cfi_offset 14, -4
 2479 0002 85B0     		sub	sp, sp, #20
 2480              		.cfi_def_cfa_offset 32
 2481 0004 00AF     		add	r7, sp, #0
 2482              		.cfi_def_cfa_register 7
 2483 0006 7860     		str	r0, [r7, #4]
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
 2484              		.loc 1 1796 0
 2485 0008 7B68     		ldr	r3, [r7, #4]
 2486 000a 012B     		cmp	r3, #1
 2487 000c 02D9     		bls	.L157
 2488              		.loc 1 1796 0 is_stmt 0 discriminator 1
 2489 000e 0020     		mov	r0, #0
 2490 0010 FFF7FEFF 		bl	CyHalt
 2491              	.L157:
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 2492              		.loc 1 1798 0 is_stmt 1
 2493 0014 0F23     		mov	r3, #15
 2494 0016 FC18     		add	r4, r7, r3
 2495 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 2496 001c 031C     		mov	r3, r0
 2497 001e 2370     		strb	r3, [r4]
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
 2498              		.loc 1 1800 0
 2499 0020 0C49     		ldr	r1, .L159
 2500 0022 7A68     		ldr	r2, [r7, #4]
 2501 0024 131C     		mov	r3, r2
 2502 0026 5B00     		lsl	r3, r3, #1
 2503 0028 9B18     		add	r3, r3, r2
 2504 002a 9B00     		lsl	r3, r3, #2
 2505 002c 5A58     		ldr	r2, [r3, r1]
 2506 002e C023     		mov	r3, #192
 2507 0030 9B03     		lsl	r3, r3, #14
 2508 0032 1340     		and	r3, r2
 2509 0034 BB60     		str	r3, [r7, #8]
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
 2510              		.loc 1 1801 0
 2511 0036 BB68     		ldr	r3, [r7, #8]
 2512 0038 1B0D     		lsr	r3, r3, #20
 2513 003a BB60     		str	r3, [r7, #8]
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 2514              		.loc 1 1803 0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 77


 2515 003c 0F23     		mov	r3, #15
 2516 003e FB18     		add	r3, r7, r3
 2517 0040 1B78     		ldrb	r3, [r3]
 2518 0042 181C     		mov	r0, r3
 2519 0044 FFF7FEFF 		bl	CyExitCriticalSection
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
 2520              		.loc 1 1805 0
 2521 0048 BB68     		ldr	r3, [r7, #8]
1806:Generated_Source\PSoC4/CyLib.c ****     }
 2522              		.loc 1 1806 0
 2523 004a 181C     		mov	r0, r3
 2524 004c BD46     		mov	sp, r7
 2525 004e 05B0     		add	sp, sp, #20
 2526              		@ sp needed
 2527 0050 90BD     		pop	{r4, r7, pc}
 2528              	.L160:
 2529 0052 C046     		.align	2
 2530              	.L159:
 2531 0054 14000C40 		.word	1074528276
 2532              		.cfi_endproc
 2533              	.LFE24:
 2534              		.size	CySysClkPllGetBypassMode, .-CySysClkPllGetBypassMode
 2535              		.section	.text.CySysClkPllConfigChangeAllowed,"ax",%progbits
 2536              		.align	2
 2537              		.code	16
 2538              		.thumb_func
 2539              		.type	CySysClkPllConfigChangeAllowed, %function
 2540              	CySysClkPllConfigChangeAllowed:
 2541              	.LFB25:
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
 2542              		.loc 1 1827 0
 2543              		.cfi_startproc
 2544 0000 80B5     		push	{r7, lr}
 2545              		.cfi_def_cfa_offset 8
 2546              		.cfi_offset 7, -8
 2547              		.cfi_offset 14, -4
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 78


 2548 0002 86B0     		sub	sp, sp, #24
 2549              		.cfi_def_cfa_offset 32
 2550 0004 00AF     		add	r7, sp, #0
 2551              		.cfi_def_cfa_register 7
 2552 0006 7860     		str	r0, [r7, #4]
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
 2553              		.loc 1 1830 0
 2554 0008 0423     		mov	r3, #4
 2555 000a 7B61     		str	r3, [r7, #20]
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
 2556              		.loc 1 1832 0
 2557 000c FFF7FEFF 		bl	CySysClkGetSysclkSource
 2558 0010 031C     		mov	r3, r0
 2559 0012 3B61     		str	r3, [r7, #16]
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
 2560              		.loc 1 1833 0
 2561 0014 7B68     		ldr	r3, [r7, #4]
 2562 0016 181C     		mov	r0, r3
 2563 0018 FFF7FEFF 		bl	CySysClkPllGetBypassMode
 2564 001c 031C     		mov	r3, r0
 2565 001e FB60     		str	r3, [r7, #12]
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
 2566              		.loc 1 1835 0
 2567 0020 FB68     		ldr	r3, [r7, #12]
 2568 0022 022B     		cmp	r3, #2
 2569 0024 0FD0     		beq	.L162
 2570              		.loc 1 1835 0 is_stmt 0 discriminator 1
 2571 0026 3A69     		ldr	r2, [r7, #16]
 2572 0028 8023     		mov	r3, #128
 2573 002a 9B02     		lsl	r3, r3, #10
 2574 002c 9A42     		cmp	r2, r3
 2575 002e 02D0     		beq	.L163
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
 2576              		.loc 1 1836 0 is_stmt 1
 2577 0030 7B68     		ldr	r3, [r7, #4]
 2578 0032 002B     		cmp	r3, #0
 2579 0034 07D0     		beq	.L162
 2580              	.L163:
 2581              		.loc 1 1836 0 is_stmt 0 discriminator 1
 2582 0036 3A69     		ldr	r2, [r7, #16]
 2583 0038 8023     		mov	r3, #128
 2584 003a 5B02     		lsl	r3, r3, #9
 2585 003c 9A42     		cmp	r2, r3
 2586 003e 04D0     		beq	.L164
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
 2587              		.loc 1 1837 0 is_stmt 1
 2588 0040 7B68     		ldr	r3, [r7, #4]
 2589 0042 012B     		cmp	r3, #1
 2590 0044 01D1     		bne	.L164
 2591              	.L162:
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
 2592              		.loc 1 1839 0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 79


 2593 0046 0023     		mov	r3, #0
 2594 0048 7B61     		str	r3, [r7, #20]
 2595              	.L164:
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
 2596              		.loc 1 1842 0
 2597 004a 7B69     		ldr	r3, [r7, #20]
1843:Generated_Source\PSoC4/CyLib.c ****     }
 2598              		.loc 1 1843 0
 2599 004c 181C     		mov	r0, r3
 2600 004e BD46     		mov	sp, r7
 2601 0050 06B0     		add	sp, sp, #24
 2602              		@ sp needed
 2603 0052 80BD     		pop	{r7, pc}
 2604              		.cfi_endproc
 2605              	.LFE25:
 2606              		.size	CySysClkPllConfigChangeAllowed, .-CySysClkPllConfigChangeAllowed
 2607              		.section	.text.CySysClkPllGetUnlockStatus,"ax",%progbits
 2608              		.align	2
 2609              		.global	CySysClkPllGetUnlockStatus
 2610              		.code	16
 2611              		.thumb_func
 2612              		.type	CySysClkPllGetUnlockStatus, %function
 2613              	CySysClkPllGetUnlockStatus:
 2614              	.LFB26:
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
 2615              		.loc 1 1865 0
 2616              		.cfi_startproc
 2617 0000 90B5     		push	{r4, r7, lr}
 2618              		.cfi_def_cfa_offset 12
 2619              		.cfi_offset 4, -12
 2620              		.cfi_offset 7, -8
 2621              		.cfi_offset 14, -4
 2622 0002 85B0     		sub	sp, sp, #20
 2623              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 80


 2624 0004 00AF     		add	r7, sp, #0
 2625              		.cfi_def_cfa_register 7
 2626 0006 7860     		str	r0, [r7, #4]
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
 2627              		.loc 1 1866 0
 2628 0008 0023     		mov	r3, #0
 2629 000a FB60     		str	r3, [r7, #12]
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 2630              		.loc 1 1869 0
 2631 000c 0B23     		mov	r3, #11
 2632 000e FC18     		add	r4, r7, r3
 2633 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 2634 0014 031C     		mov	r3, r0
 2635 0016 2370     		strb	r3, [r4]
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
 2636              		.loc 1 1871 0
 2637 0018 1549     		ldr	r1, .L168
 2638 001a 7A68     		ldr	r2, [r7, #4]
 2639 001c 131C     		mov	r3, r2
 2640 001e 5B00     		lsl	r3, r3, #1
 2641 0020 9B18     		add	r3, r3, r2
 2642 0022 9B00     		lsl	r3, r3, #2
 2643 0024 CB18     		add	r3, r1, r3
 2644 0026 0833     		add	r3, r3, #8
 2645 0028 1B68     		ldr	r3, [r3]
 2646 002a 1022     		mov	r2, #16
 2647 002c 1340     		and	r3, r2
 2648 002e FB60     		str	r3, [r7, #12]
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
 2649              		.loc 1 1872 0
 2650 0030 0F48     		ldr	r0, .L168
 2651 0032 0F49     		ldr	r1, .L168
 2652 0034 7A68     		ldr	r2, [r7, #4]
 2653 0036 131C     		mov	r3, r2
 2654 0038 5B00     		lsl	r3, r3, #1
 2655 003a 9B18     		add	r3, r3, r2
 2656 003c 9B00     		lsl	r3, r3, #2
 2657 003e CB18     		add	r3, r1, r3
 2658 0040 0833     		add	r3, r3, #8
 2659 0042 1B68     		ldr	r3, [r3]
 2660 0044 1022     		mov	r2, #16
 2661 0046 1A43     		orr	r2, r3
 2662 0048 111C     		mov	r1, r2
 2663 004a 7A68     		ldr	r2, [r7, #4]
 2664 004c 131C     		mov	r3, r2
 2665 004e 5B00     		lsl	r3, r3, #1
 2666 0050 9B18     		add	r3, r3, r2
 2667 0052 9B00     		lsl	r3, r3, #2
 2668 0054 C318     		add	r3, r0, r3
 2669 0056 0833     		add	r3, r3, #8
 2670 0058 1960     		str	r1, [r3]
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 2671              		.loc 1 1874 0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 81


 2672 005a 0B23     		mov	r3, #11
 2673 005c FB18     		add	r3, r7, r3
 2674 005e 1B78     		ldrb	r3, [r3]
 2675 0060 181C     		mov	r0, r3
 2676 0062 FFF7FEFF 		bl	CyExitCriticalSection
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
 2677              		.loc 1 1876 0
 2678 0066 FB68     		ldr	r3, [r7, #12]
1877:Generated_Source\PSoC4/CyLib.c ****     }
 2679              		.loc 1 1877 0
 2680 0068 181C     		mov	r0, r3
 2681 006a BD46     		mov	sp, r7
 2682 006c 05B0     		add	sp, sp, #20
 2683              		@ sp needed
 2684 006e 90BD     		pop	{r4, r7, pc}
 2685              	.L169:
 2686              		.align	2
 2687              	.L168:
 2688 0070 14000C40 		.word	1074528276
 2689              		.cfi_endproc
 2690              	.LFE26:
 2691              		.size	CySysClkPllGetUnlockStatus, .-CySysClkPllGetUnlockStatus
 2692              		.global	__aeabi_idiv
 2693              		.section	.text.CySysClkPllSetFrequency,"ax",%progbits
 2694              		.align	2
 2695              		.global	CySysClkPllSetFrequency
 2696              		.code	16
 2697              		.thumb_func
 2698              		.type	CySysClkPllSetFrequency, %function
 2699              	CySysClkPllSetFrequency:
 2700              	.LFB27:
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 82


1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
 2701              		.loc 1 1917 0
 2702              		.cfi_startproc
 2703 0000 80B5     		push	{r7, lr}
 2704              		.cfi_def_cfa_offset 8
 2705              		.cfi_offset 7, -8
 2706              		.cfi_offset 14, -4
 2707 0002 8EB0     		sub	sp, sp, #56
 2708              		.cfi_def_cfa_offset 64
 2709 0004 00AF     		add	r7, sp, #0
 2710              		.cfi_def_cfa_register 7
 2711 0006 F860     		str	r0, [r7, #12]
 2712 0008 B960     		str	r1, [r7, #8]
 2713 000a 7A60     		str	r2, [r7, #4]
 2714 000c 3B60     		str	r3, [r7]
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
 2715              		.loc 1 1921 0
 2716 000e 0023     		mov	r3, #0
 2717 0010 7B63     		str	r3, [r7, #52]
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
 2718              		.loc 1 1922 0
 2719 0012 0023     		mov	r3, #0
 2720 0014 3B63     		str	r3, [r7, #48]
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
 2721              		.loc 1 1931 0
 2722 0016 0123     		mov	r3, #1
 2723 0018 BB62     		str	r3, [r7, #40]
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
 2724              		.loc 1 1934 0
 2725 001a FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 83


 2726 001c 181C     		mov	r0, r3
 2727 001e FFF7FEFF 		bl	CySysClkPllConfigChangeAllowed
 2728 0022 031C     		mov	r3, r0
 2729 0024 7B62     		str	r3, [r7, #36]
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
 2730              		.loc 1 1936 0
 2731 0026 FB68     		ldr	r3, [r7, #12]
 2732 0028 012B     		cmp	r3, #1
 2733 002a 00D9     		bls	.LCB2341
 2734 002c 91E0     		b	.L171	@long jump
 2735              	.LCB2341:
 2736              		.loc 1 1936 0 is_stmt 0 discriminator 1
 2737 002e BB68     		ldr	r3, [r7, #8]
 2738 0030 4A4A     		ldr	r2, .L180
 2739 0032 9342     		cmp	r3, r2
 2740 0034 00D8     		bhi	.LCB2345
 2741 0036 8CE0     		b	.L171	@long jump
 2742              	.LCB2345:
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
 2743              		.loc 1 1937 0 is_stmt 1
 2744 0038 BA68     		ldr	r2, [r7, #8]
 2745 003a C023     		mov	r3, #192
 2746 003c 1B02     		lsl	r3, r3, #8
 2747 003e 9A42     		cmp	r2, r3
 2748 0040 00D9     		bls	.LCB2350
 2749 0042 86E0     		b	.L171	@long jump
 2750              	.LCB2350:
 2751              		.loc 1 1937 0 is_stmt 0 discriminator 1
 2752 0044 7B68     		ldr	r3, [r7, #4]
 2753 0046 464A     		ldr	r2, .L180+4
 2754 0048 9342     		cmp	r3, r2
 2755 004a 00D8     		bhi	.LCB2354
 2756 004c 81E0     		b	.L171	@long jump
 2757              	.LCB2354:
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
 2758              		.loc 1 1938 0 is_stmt 1
 2759 004e 7A68     		ldr	r2, [r7, #4]
 2760 0050 C023     		mov	r3, #192
 2761 0052 1B02     		lsl	r3, r3, #8
 2762 0054 9A42     		cmp	r2, r3
 2763 0056 00D9     		bls	.LCB2359
 2764 0058 7BE0     		b	.L171	@long jump
 2765              	.LCB2359:
 2766              		.loc 1 1938 0 is_stmt 0 discriminator 1
 2767 005a 3B68     		ldr	r3, [r7]
 2768 005c 032B     		cmp	r3, #3
 2769 005e 00D9     		bls	.LCB2362
 2770 0060 77E0     		b	.L171	@long jump
 2771              	.LCB2362:
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
 2772              		.loc 1 1939 0 is_stmt 1
 2773 0062 7B6A     		ldr	r3, [r7, #36]
 2774 0064 002B     		cmp	r3, #0
 2775 0066 00D0     		beq	.LCB2365
 2776 0068 73E0     		b	.L171	@long jump
 2777              	.LCB2365:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 84


1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
 2778              		.loc 1 1944 0
 2779 006a BB68     		ldr	r3, [r7, #8]
 2780 006c 3D4A     		ldr	r2, .L180+8
 2781 006e 9446     		mov	ip, r2
 2782 0070 6344     		add	r3, r3, ip
 2783 0072 181C     		mov	r0, r3
 2784 0074 3C49     		ldr	r1, .L180+12
 2785 0076 FFF7FEFF 		bl	__aeabi_uidiv
 2786 007a 031C     		mov	r3, r0
 2787 007c 3B62     		str	r3, [r7, #32]
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
 2788              		.loc 1 1945 0
 2789 007e 3B6A     		ldr	r3, [r7, #32]
 2790 0080 002B     		cmp	r3, #0
 2791 0082 01D0     		beq	.L172
 2792              		.loc 1 1945 0 is_stmt 0 discriminator 1
 2793 0084 3B6A     		ldr	r3, [r7, #32]
 2794 0086 00E0     		b	.L173
 2795              	.L172:
 2796              		.loc 1 1945 0 discriminator 2
 2797 0088 0123     		mov	r3, #1
 2798              	.L173:
 2799              		.loc 1 1945 0 discriminator 4
 2800 008a 3B62     		str	r3, [r7, #32]
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
 2801              		.loc 1 1948 0 is_stmt 1 discriminator 4
 2802 008c BB68     		ldr	r3, [r7, #8]
 2803 008e 181C     		mov	r0, r3
 2804 0090 FA23     		mov	r3, #250
 2805 0092 9900     		lsl	r1, r3, #2
 2806 0094 FFF7FEFF 		bl	__aeabi_uidiv
 2807 0098 031C     		mov	r3, r0
 2808 009a FB61     		str	r3, [r7, #28]
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
 2809              		.loc 1 1949 0 discriminator 4
 2810 009c FB69     		ldr	r3, [r7, #28]
 2811 009e 402B     		cmp	r3, #64
 2812 00a0 00D9     		bls	.L174
 2813 00a2 4023     		mov	r3, #64
 2814              	.L174:
 2815 00a4 FB61     		str	r3, [r7, #28]
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
 2816              		.loc 1 1951 0 discriminator 4
 2817 00a6 3A6A     		ldr	r2, [r7, #32]
 2818 00a8 FB69     		ldr	r3, [r7, #28]
 2819 00aa 9A42     		cmp	r2, r3
 2820 00ac 51D8     		bhi	.L171
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 85


 2821              		.loc 1 1953 0
 2822 00ae 3B6A     		ldr	r3, [r7, #32]
 2823 00b0 FB62     		str	r3, [r7, #44]
 2824 00b2 31E0     		b	.L175
 2825              	.L178:
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
 2826              		.loc 1 1958 0
 2827 00b4 7B68     		ldr	r3, [r7, #4]
 2828 00b6 FA6A     		ldr	r2, [r7, #44]
 2829 00b8 5A43     		mul	r2, r3
 2830 00ba BB68     		ldr	r3, [r7, #8]
 2831 00bc 5B08     		lsr	r3, r3, #1
 2832 00be D318     		add	r3, r2, r3
 2833 00c0 181C     		mov	r0, r3
 2834 00c2 B968     		ldr	r1, [r7, #8]
 2835 00c4 FFF7FEFF 		bl	__aeabi_uidiv
 2836 00c8 031C     		mov	r3, r0
 2837 00ca BB61     		str	r3, [r7, #24]
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
 2838              		.loc 1 1961 0
 2839 00cc BB68     		ldr	r3, [r7, #8]
 2840 00ce BA69     		ldr	r2, [r7, #24]
 2841 00d0 5343     		mul	r3, r2
 2842 00d2 181C     		mov	r0, r3
 2843 00d4 F96A     		ldr	r1, [r7, #44]
 2844 00d6 FFF7FEFF 		bl	__aeabi_uidiv
 2845 00da 031C     		mov	r3, r0
 2846 00dc 7B61     		str	r3, [r7, #20]
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
 2847              		.loc 1 1964 0
 2848 00de 7A69     		ldr	r2, [r7, #20]
 2849 00e0 7B68     		ldr	r3, [r7, #4]
 2850 00e2 D31A     		sub	r3, r2, r3
 2851 00e4 214A     		ldr	r2, .L180+16
 2852 00e6 5A43     		mul	r2, r3
 2853 00e8 7B68     		ldr	r3, [r7, #4]
 2854 00ea 101C     		mov	r0, r2
 2855 00ec 191C     		mov	r1, r3
 2856 00ee FFF7FEFF 		bl	__aeabi_idiv
 2857 00f2 031C     		mov	r3, r0
 2858 00f4 3B61     		str	r3, [r7, #16]
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
 2859              		.loc 1 1967 0
 2860 00f6 3B6C     		ldr	r3, [r7, #64]
 2861 00f8 5A42     		neg	r2, r3
 2862 00fa 3B69     		ldr	r3, [r7, #16]
 2863 00fc 9A42     		cmp	r2, r3
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 86


 2864 00fe 08DC     		bgt	.L176
 2865              		.loc 1 1967 0 is_stmt 0 discriminator 1
 2866 0100 3A6C     		ldr	r2, [r7, #64]
 2867 0102 3B69     		ldr	r3, [r7, #16]
 2868 0104 9A42     		cmp	r2, r3
 2869 0106 04DB     		blt	.L176
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
 2870              		.loc 1 1969 0 is_stmt 1
 2871 0108 FB6A     		ldr	r3, [r7, #44]
 2872 010a 7B63     		str	r3, [r7, #52]
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
 2873              		.loc 1 1970 0
 2874 010c BB69     		ldr	r3, [r7, #24]
 2875 010e 3B63     		str	r3, [r7, #48]
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
 2876              		.loc 1 1971 0
 2877 0110 06E0     		b	.L177
 2878              	.L176:
1953:Generated_Source\PSoC4/CyLib.c ****                 {
 2879              		.loc 1 1953 0 discriminator 2
 2880 0112 FB6A     		ldr	r3, [r7, #44]
 2881 0114 0133     		add	r3, r3, #1
 2882 0116 FB62     		str	r3, [r7, #44]
 2883              	.L175:
1953:Generated_Source\PSoC4/CyLib.c ****                 {
 2884              		.loc 1 1953 0 is_stmt 0 discriminator 1
 2885 0118 FA6A     		ldr	r2, [r7, #44]
 2886 011a FB69     		ldr	r3, [r7, #28]
 2887 011c 9A42     		cmp	r2, r3
 2888 011e C9D9     		bls	.L178
 2889              	.L177:
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
 2890              		.loc 1 1976 0 is_stmt 1
 2891 0120 3B6B     		ldr	r3, [r7, #48]
 2892 0122 002B     		cmp	r3, #0
 2893 0124 15D0     		beq	.L171
 2894              		.loc 1 1976 0 is_stmt 0 discriminator 1
 2895 0126 7B6B     		ldr	r3, [r7, #52]
 2896 0128 002B     		cmp	r3, #0
 2897 012a 12D0     		beq	.L171
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
 2898              		.loc 1 1978 0 is_stmt 1
 2899 012c F968     		ldr	r1, [r7, #12]
 2900 012e 3A6B     		ldr	r2, [r7, #48]
 2901 0130 7B6B     		ldr	r3, [r7, #52]
 2902 0132 081C     		mov	r0, r1
 2903 0134 111C     		mov	r1, r2
 2904 0136 1A1C     		mov	r2, r3
 2905 0138 0223     		mov	r3, #2
 2906 013a FFF7FEFF 		bl	CySysClkPllSetPQ
 2907 013e 031E     		sub	r3, r0, #0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 87


 2908 0140 07D1     		bne	.L171
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
 2909              		.loc 1 1980 0
 2910 0142 FA68     		ldr	r2, [r7, #12]
 2911 0144 3B68     		ldr	r3, [r7]
 2912 0146 101C     		mov	r0, r2
 2913 0148 191C     		mov	r1, r3
 2914 014a FFF7FEFF 		bl	CySysClkPllSetOutputDivider
 2915 014e 031C     		mov	r3, r0
 2916 0150 BB62     		str	r3, [r7, #40]
 2917              	.L171:
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
 2918              		.loc 1 1987 0
 2919 0152 BB6A     		ldr	r3, [r7, #40]
1988:Generated_Source\PSoC4/CyLib.c ****     }
 2920              		.loc 1 1988 0
 2921 0154 181C     		mov	r0, r3
 2922 0156 BD46     		mov	sp, r7
 2923 0158 0EB0     		add	sp, sp, #56
 2924              		@ sp needed
 2925 015a 80BD     		pop	{r7, pc}
 2926              	.L181:
 2927              		.align	2
 2928              	.L180:
 2929 015c E7030000 		.word	999
 2930 0160 E3570000 		.word	22499
 2931 0164 B70B0000 		.word	2999
 2932 0168 B80B0000 		.word	3000
 2933 016c 40420F00 		.word	1000000
 2934              		.cfi_endproc
 2935              	.LFE27:
 2936              		.size	CySysClkPllSetFrequency, .-CySysClkPllSetFrequency
 2937              		.section	.text.CySysClkPllSetSource,"ax",%progbits
 2938              		.align	2
 2939              		.global	CySysClkPllSetSource
 2940              		.code	16
 2941              		.thumb_func
 2942              		.type	CySysClkPllSetSource, %function
 2943              	CySysClkPllSetSource:
 2944              	.LFB28:
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 88


1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
 2945              		.loc 1 2015 0
 2946              		.cfi_startproc
 2947 0000 90B5     		push	{r4, r7, lr}
 2948              		.cfi_def_cfa_offset 12
 2949              		.cfi_offset 4, -12
 2950              		.cfi_offset 7, -8
 2951              		.cfi_offset 14, -4
 2952 0002 85B0     		sub	sp, sp, #20
 2953              		.cfi_def_cfa_offset 32
 2954 0004 00AF     		add	r7, sp, #0
 2955              		.cfi_def_cfa_register 7
 2956 0006 7860     		str	r0, [r7, #4]
 2957 0008 3960     		str	r1, [r7]
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 2958              		.loc 1 2019 0
 2959 000a 0F23     		mov	r3, #15
 2960 000c FC18     		add	r4, r7, r3
 2961 000e FFF7FEFF 		bl	CyEnterCriticalSection
 2962 0012 031C     		mov	r3, r0
 2963 0014 2370     		strb	r3, [r4]
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
 2964              		.loc 1 2021 0
 2965 0016 7B68     		ldr	r3, [r7, #4]
 2966 0018 012B     		cmp	r3, #1
 2967 001a 24D8     		bhi	.L183
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
 2968              		.loc 1 2023 0
 2969 001c 164B     		ldr	r3, .L184
 2970 001e 1968     		ldr	r1, [r3]
 2971 0020 7B68     		ldr	r3, [r7, #4]
 2972 0022 5A1C     		add	r2, r3, #1
 2973 0024 131C     		mov	r3, r2
 2974 0026 5B00     		lsl	r3, r3, #1
 2975 0028 9B18     		add	r3, r3, r2
 2976 002a 1A1C     		mov	r2, r3
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 89


 2977 002c 0723     		mov	r3, #7
 2978 002e 9340     		lsl	r3, r3, r2
 2979 0030 DB43     		mvn	r3, r3
 2980 0032 0B40     		and	r3, r1
 2981 0034 BB60     		str	r3, [r7, #8]
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
 2982              		.loc 1 2024 0
 2983 0036 7B68     		ldr	r3, [r7, #4]
 2984 0038 5A1C     		add	r2, r3, #1
 2985 003a 131C     		mov	r3, r2
 2986 003c 5B00     		lsl	r3, r3, #1
 2987 003e 9B18     		add	r3, r3, r2
 2988 0040 1A1C     		mov	r2, r3
 2989 0042 3B68     		ldr	r3, [r7]
 2990 0044 9340     		lsl	r3, r3, r2
 2991 0046 191C     		mov	r1, r3
 2992 0048 7B68     		ldr	r3, [r7, #4]
 2993 004a 5A1C     		add	r2, r3, #1
 2994 004c 131C     		mov	r3, r2
 2995 004e 5B00     		lsl	r3, r3, #1
 2996 0050 9B18     		add	r3, r3, r2
 2997 0052 1A1C     		mov	r2, r3
 2998 0054 0723     		mov	r3, #7
 2999 0056 9340     		lsl	r3, r3, r2
 3000 0058 0B40     		and	r3, r1
 3001 005a BA68     		ldr	r2, [r7, #8]
 3002 005c 1343     		orr	r3, r2
 3003 005e BB60     		str	r3, [r7, #8]
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
 3004              		.loc 1 2025 0
 3005 0060 054B     		ldr	r3, .L184
 3006 0062 BA68     		ldr	r2, [r7, #8]
 3007 0064 1A60     		str	r2, [r3]
 3008              	.L183:
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 3009              		.loc 1 2028 0
 3010 0066 0F23     		mov	r3, #15
 3011 0068 FB18     		add	r3, r7, r3
 3012 006a 1B78     		ldrb	r3, [r3]
 3013 006c 181C     		mov	r0, r3
 3014 006e FFF7FEFF 		bl	CyExitCriticalSection
2029:Generated_Source\PSoC4/CyLib.c ****     }
 3015              		.loc 1 2029 0
 3016 0072 BD46     		mov	sp, r7
 3017 0074 05B0     		add	sp, sp, #20
 3018              		@ sp needed
 3019 0076 90BD     		pop	{r4, r7, pc}
 3020              	.L185:
 3021              		.align	2
 3022              	.L184:
 3023 0078 00010B40 		.word	1074462976
 3024              		.cfi_endproc
 3025              	.LFE28:
 3026              		.size	CySysClkPllSetSource, .-CySysClkPllSetSource
 3027              		.section	.text.CySysClkPllSetOutputDivider,"ax",%progbits
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 90


 3028              		.align	2
 3029              		.global	CySysClkPllSetOutputDivider
 3030              		.code	16
 3031              		.thumb_func
 3032              		.type	CySysClkPllSetOutputDivider, %function
 3033              	CySysClkPllSetOutputDivider:
 3034              	.LFB29:
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
 3035              		.loc 1 2059 0
 3036              		.cfi_startproc
 3037 0000 90B5     		push	{r4, r7, lr}
 3038              		.cfi_def_cfa_offset 12
 3039              		.cfi_offset 4, -12
 3040              		.cfi_offset 7, -8
 3041              		.cfi_offset 14, -4
 3042 0002 87B0     		sub	sp, sp, #28
 3043              		.cfi_def_cfa_offset 40
 3044 0004 00AF     		add	r7, sp, #0
 3045              		.cfi_def_cfa_register 7
 3046 0006 7860     		str	r0, [r7, #4]
 3047 0008 3960     		str	r1, [r7]
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
 3048              		.loc 1 2062 0
 3049 000a 0123     		mov	r3, #1
 3050 000c 7B61     		str	r3, [r7, #20]
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 91


2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 3051              		.loc 1 2066 0
 3052 000e 1323     		mov	r3, #19
 3053 0010 FC18     		add	r4, r7, r3
 3054 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 3055 0016 031C     		mov	r3, r0
 3056 0018 2370     		strb	r3, [r4]
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
 3057              		.loc 1 2068 0
 3058 001a 7B68     		ldr	r3, [r7, #4]
 3059 001c 181C     		mov	r0, r3
 3060 001e FFF7FEFF 		bl	CySysClkPllConfigChangeAllowed
 3061 0022 031C     		mov	r3, r0
 3062 0024 FB60     		str	r3, [r7, #12]
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
 3063              		.loc 1 2070 0
 3064 0026 7B68     		ldr	r3, [r7, #4]
 3065 0028 012B     		cmp	r3, #1
 3066 002a 20D8     		bhi	.L187
 3067              		.loc 1 2070 0 is_stmt 0 discriminator 1
 3068 002c FB68     		ldr	r3, [r7, #12]
 3069 002e 002B     		cmp	r3, #0
 3070 0030 1DD1     		bne	.L187
 3071              		.loc 1 2070 0 discriminator 2
 3072 0032 3B68     		ldr	r3, [r7]
 3073 0034 032B     		cmp	r3, #3
 3074 0036 1AD8     		bhi	.L187
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
 3075              		.loc 1 2072 0 is_stmt 1
 3076 0038 1249     		ldr	r1, .L189
 3077 003a 7A68     		ldr	r2, [r7, #4]
 3078 003c 131C     		mov	r3, r2
 3079 003e 5B00     		lsl	r3, r3, #1
 3080 0040 9B18     		add	r3, r3, r2
 3081 0042 9B00     		lsl	r3, r3, #2
 3082 0044 5B58     		ldr	r3, [r3, r1]
 3083 0046 104A     		ldr	r2, .L189+4
 3084 0048 1340     		and	r3, r2
 3085 004a BB60     		str	r3, [r7, #8]
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
 3086              		.loc 1 2073 0
 3087 004c 3B68     		ldr	r3, [r7]
 3088 004e 9B03     		lsl	r3, r3, #14
 3089 0050 1B04     		lsl	r3, r3, #16
 3090 0052 1B0C     		lsr	r3, r3, #16
 3091 0054 BA68     		ldr	r2, [r7, #8]
 3092 0056 1343     		orr	r3, r2
 3093 0058 BB60     		str	r3, [r7, #8]
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
 3094              		.loc 1 2075 0
 3095 005a 0A49     		ldr	r1, .L189
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 92


 3096 005c 7A68     		ldr	r2, [r7, #4]
 3097 005e 131C     		mov	r3, r2
 3098 0060 5B00     		lsl	r3, r3, #1
 3099 0062 9B18     		add	r3, r3, r2
 3100 0064 9B00     		lsl	r3, r3, #2
 3101 0066 BA68     		ldr	r2, [r7, #8]
 3102 0068 5A50     		str	r2, [r3, r1]
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
 3103              		.loc 1 2077 0
 3104 006a 0023     		mov	r3, #0
 3105 006c 7B61     		str	r3, [r7, #20]
 3106              	.L187:
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 3107              		.loc 1 2080 0
 3108 006e 1323     		mov	r3, #19
 3109 0070 FB18     		add	r3, r7, r3
 3110 0072 1B78     		ldrb	r3, [r3]
 3111 0074 181C     		mov	r0, r3
 3112 0076 FFF7FEFF 		bl	CyExitCriticalSection
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
 3113              		.loc 1 2082 0
 3114 007a 7B69     		ldr	r3, [r7, #20]
2083:Generated_Source\PSoC4/CyLib.c ****     }
 3115              		.loc 1 2083 0
 3116 007c 181C     		mov	r0, r3
 3117 007e BD46     		mov	sp, r7
 3118 0080 07B0     		add	sp, sp, #28
 3119              		@ sp needed
 3120 0082 90BD     		pop	{r4, r7, pc}
 3121              	.L190:
 3122              		.align	2
 3123              	.L189:
 3124 0084 14000C40 		.word	1074528276
 3125 0088 FF3FFFFF 		.word	-49153
 3126              		.cfi_endproc
 3127              	.LFE29:
 3128              		.size	CySysClkPllSetOutputDivider, .-CySysClkPllSetOutputDivider
 3129              		.section	.text.CySysLvdEnable,"ax",%progbits
 3130              		.align	2
 3131              		.global	CySysLvdEnable
 3132              		.code	16
 3133              		.thumb_func
 3134              		.type	CySysLvdEnable, %function
 3135              	CySysLvdEnable:
 3136              	.LFB30:
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 93


2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
 3137              		.loc 1 2119 0
 3138              		.cfi_startproc
 3139 0000 80B5     		push	{r7, lr}
 3140              		.cfi_def_cfa_offset 8
 3141              		.cfi_offset 7, -8
 3142              		.cfi_offset 14, -4
 3143 0002 82B0     		sub	sp, sp, #8
 3144              		.cfi_def_cfa_offset 16
 3145 0004 00AF     		add	r7, sp, #0
 3146              		.cfi_def_cfa_register 7
 3147 0006 7860     		str	r0, [r7, #4]
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 3148              		.loc 1 2121 0
 3149 0008 134B     		ldr	r3, .L192
 3150 000a 134A     		ldr	r2, .L192
 3151 000c 1268     		ldr	r2, [r2]
 3152 000e 0221     		mov	r1, #2
 3153 0010 8A43     		bic	r2, r1
 3154 0012 1A60     		str	r2, [r3]
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 3155              		.loc 1 2124 0
 3156 0014 114B     		ldr	r3, .L192+4
 3157 0016 114A     		ldr	r2, .L192+4
 3158 0018 1268     		ldr	r2, [r2]
 3159 001a 1E21     		mov	r1, #30
 3160 001c 8A43     		bic	r2, r1
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 94


 3161 001e 111C     		mov	r1, r2
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 3162              		.loc 1 2125 0
 3163 0020 7A68     		ldr	r2, [r7, #4]
 3164 0022 5200     		lsl	r2, r2, #1
 3165 0024 1E20     		mov	r0, #30
 3166 0026 0240     		and	r2, r0
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 3167              		.loc 1 2124 0
 3168 0028 0A43     		orr	r2, r1
 3169 002a 1A60     		str	r2, [r3]
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 3170              		.loc 1 2128 0
 3171 002c 0B4B     		ldr	r3, .L192+4
 3172 002e 0B4A     		ldr	r2, .L192+4
 3173 0030 1268     		ldr	r2, [r2]
 3174 0032 0121     		mov	r1, #1
 3175 0034 0A43     		orr	r2, r1
 3176 0036 1A60     		str	r2, [r3]
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 3177              		.loc 1 2131 0
 3178 0038 FA23     		mov	r3, #250
 3179 003a 9B00     		lsl	r3, r3, #2
 3180 003c 181C     		mov	r0, r3
 3181 003e FFF7FEFF 		bl	CyDelayUs
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 3182              		.loc 1 2134 0
 3183 0042 FFF7FEFF 		bl	CySysLvdClearInterrupt
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 3184              		.loc 1 2137 0
 3185 0046 044B     		ldr	r3, .L192
 3186 0048 034A     		ldr	r2, .L192
 3187 004a 1268     		ldr	r2, [r2]
 3188 004c 0221     		mov	r1, #2
 3189 004e 0A43     		orr	r2, r1
 3190 0050 1A60     		str	r2, [r3]
2138:Generated_Source\PSoC4/CyLib.c ****     }
 3191              		.loc 1 2138 0
 3192 0052 BD46     		mov	sp, r7
 3193 0054 02B0     		add	sp, sp, #8
 3194              		@ sp needed
 3195 0056 80BD     		pop	{r7, pc}
 3196              	.L193:
 3197              		.align	2
 3198              	.L192:
 3199 0058 08000B40 		.word	1074462728
 3200 005c 18000B40 		.word	1074462744
 3201              		.cfi_endproc
 3202              	.LFE30:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 95


 3203              		.size	CySysLvdEnable, .-CySysLvdEnable
 3204              		.section	.text.CySysLvdDisable,"ax",%progbits
 3205              		.align	2
 3206              		.global	CySysLvdDisable
 3207              		.code	16
 3208              		.thumb_func
 3209              		.type	CySysLvdDisable, %function
 3210              	CySysLvdDisable:
 3211              	.LFB31:
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
 3212              		.loc 1 2149 0
 3213              		.cfi_startproc
 3214 0000 80B5     		push	{r7, lr}
 3215              		.cfi_def_cfa_offset 8
 3216              		.cfi_offset 7, -8
 3217              		.cfi_offset 14, -4
 3218 0002 00AF     		add	r7, sp, #0
 3219              		.cfi_def_cfa_register 7
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 3220              		.loc 1 2150 0
 3221 0004 064B     		ldr	r3, .L195
 3222 0006 064A     		ldr	r2, .L195
 3223 0008 1268     		ldr	r2, [r2]
 3224 000a 0221     		mov	r1, #2
 3225 000c 8A43     		bic	r2, r1
 3226 000e 1A60     		str	r2, [r3]
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 3227              		.loc 1 2151 0
 3228 0010 044B     		ldr	r3, .L195+4
 3229 0012 044A     		ldr	r2, .L195+4
 3230 0014 1268     		ldr	r2, [r2]
 3231 0016 0121     		mov	r1, #1
 3232 0018 8A43     		bic	r2, r1
 3233 001a 1A60     		str	r2, [r3]
2152:Generated_Source\PSoC4/CyLib.c ****     }
 3234              		.loc 1 2152 0
 3235 001c BD46     		mov	sp, r7
 3236              		@ sp needed
 3237 001e 80BD     		pop	{r7, pc}
 3238              	.L196:
 3239              		.align	2
 3240              	.L195:
 3241 0020 08000B40 		.word	1074462728
 3242 0024 18000B40 		.word	1074462744
 3243              		.cfi_endproc
 3244              	.LFE31:
 3245              		.size	CySysLvdDisable, .-CySysLvdDisable
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 96


 3246              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 3247              		.align	2
 3248              		.global	CySysLvdGetInterruptSource
 3249              		.code	16
 3250              		.thumb_func
 3251              		.type	CySysLvdGetInterruptSource, %function
 3252              	CySysLvdGetInterruptSource:
 3253              	.LFB32:
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
 3254              		.loc 1 2167 0
 3255              		.cfi_startproc
 3256 0000 80B5     		push	{r7, lr}
 3257              		.cfi_def_cfa_offset 8
 3258              		.cfi_offset 7, -8
 3259              		.cfi_offset 14, -4
 3260 0002 00AF     		add	r7, sp, #0
 3261              		.cfi_def_cfa_register 7
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 3262              		.loc 1 2168 0
 3263 0004 034B     		ldr	r3, .L199
 3264 0006 1B68     		ldr	r3, [r3]
 3265 0008 0222     		mov	r2, #2
 3266 000a 1340     		and	r3, r2
2169:Generated_Source\PSoC4/CyLib.c ****     }
 3267              		.loc 1 2169 0
 3268 000c 181C     		mov	r0, r3
 3269 000e BD46     		mov	sp, r7
 3270              		@ sp needed
 3271 0010 80BD     		pop	{r7, pc}
 3272              	.L200:
 3273 0012 C046     		.align	2
 3274              	.L199:
 3275 0014 04000B40 		.word	1074462724
 3276              		.cfi_endproc
 3277              	.LFE32:
 3278              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 3279              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 3280              		.align	2
 3281              		.global	CySysLvdClearInterrupt
 3282              		.code	16
 3283              		.thumb_func
 3284              		.type	CySysLvdClearInterrupt, %function
 3285              	CySysLvdClearInterrupt:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 97


 3286              	.LFB33:
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
 3287              		.loc 1 2183 0
 3288              		.cfi_startproc
 3289 0000 80B5     		push	{r7, lr}
 3290              		.cfi_def_cfa_offset 8
 3291              		.cfi_offset 7, -8
 3292              		.cfi_offset 14, -4
 3293 0002 00AF     		add	r7, sp, #0
 3294              		.cfi_def_cfa_register 7
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 3295              		.loc 1 2184 0
 3296 0004 024B     		ldr	r3, .L202
 3297 0006 0222     		mov	r2, #2
 3298 0008 1A60     		str	r2, [r3]
2185:Generated_Source\PSoC4/CyLib.c ****     }
 3299              		.loc 1 2185 0
 3300 000a BD46     		mov	sp, r7
 3301              		@ sp needed
 3302 000c 80BD     		pop	{r7, pc}
 3303              	.L203:
 3304 000e C046     		.align	2
 3305              	.L202:
 3306 0010 04000B40 		.word	1074462724
 3307              		.cfi_endproc
 3308              	.LFE33:
 3309              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 3310              		.section	.text.CySysGetResetReason,"ax",%progbits
 3311              		.align	2
 3312              		.global	CySysGetResetReason
 3313              		.code	16
 3314              		.thumb_func
 3315              		.type	CySysGetResetReason, %function
 3316              	CySysGetResetReason:
 3317              	.LFB34:
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 98


2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 3318              		.loc 1 2209 0
 3319              		.cfi_startproc
 3320 0000 80B5     		push	{r7, lr}
 3321              		.cfi_def_cfa_offset 8
 3322              		.cfi_offset 7, -8
 3323              		.cfi_offset 14, -4
 3324 0002 84B0     		sub	sp, sp, #16
 3325              		.cfi_def_cfa_offset 24
 3326 0004 00AF     		add	r7, sp, #0
 3327              		.cfi_def_cfa_register 7
 3328 0006 7860     		str	r0, [r7, #4]
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 3329              		.loc 1 2212 0
 3330 0008 7B68     		ldr	r3, [r7, #4]
 3331 000a 1922     		mov	r2, #25
 3332 000c 1340     		and	r3, r2
 3333 000e 7B60     		str	r3, [r7, #4]
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 3334              		.loc 1 2213 0
 3335 0010 064B     		ldr	r3, .L206
 3336 0012 1B68     		ldr	r3, [r3]
 3337 0014 1922     		mov	r2, #25
 3338 0016 1340     		and	r3, r2
 3339 0018 FB60     		str	r3, [r7, #12]
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 3340              		.loc 1 2215 0
 3341 001a 044B     		ldr	r3, .L206
 3342 001c 7A68     		ldr	r2, [r7, #4]
 3343 001e 1A60     		str	r2, [r3]
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 3344              		.loc 1 2217 0
 3345 0020 FB68     		ldr	r3, [r7, #12]
2218:Generated_Source\PSoC4/CyLib.c **** }
 3346              		.loc 1 2218 0
 3347 0022 181C     		mov	r0, r3
 3348 0024 BD46     		mov	sp, r7
 3349 0026 04B0     		add	sp, sp, #16
 3350              		@ sp needed
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 99


 3351 0028 80BD     		pop	{r7, pc}
 3352              	.L207:
 3353 002a C046     		.align	2
 3354              	.L206:
 3355 002c 00030B40 		.word	1074463488
 3356              		.cfi_endproc
 3357              	.LFE34:
 3358              		.size	CySysGetResetReason, .-CySysGetResetReason
 3359              		.section	.text.CyDisableInts,"ax",%progbits
 3360              		.align	2
 3361              		.global	CyDisableInts
 3362              		.code	16
 3363              		.thumb_func
 3364              		.type	CyDisableInts, %function
 3365              	CyDisableInts:
 3366              	.LFB35:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 3367              		.loc 1 2232 0
 3368              		.cfi_startproc
 3369 0000 80B5     		push	{r7, lr}
 3370              		.cfi_def_cfa_offset 8
 3371              		.cfi_offset 7, -8
 3372              		.cfi_offset 14, -4
 3373 0002 82B0     		sub	sp, sp, #8
 3374              		.cfi_def_cfa_offset 16
 3375 0004 00AF     		add	r7, sp, #0
 3376              		.cfi_def_cfa_register 7
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 3377              		.loc 1 2236 0
 3378 0006 064B     		ldr	r3, .L210
 3379 0008 1B68     		ldr	r3, [r3]
 3380 000a 7B60     		str	r3, [r7, #4]
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 3381              		.loc 1 2239 0
 3382 000c 044B     		ldr	r3, .L210
 3383 000e 0122     		mov	r2, #1
 3384 0010 5242     		neg	r2, r2
 3385 0012 1A60     		str	r2, [r3]
2240:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 100


2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
 3386              		.loc 1 2241 0
 3387 0014 7B68     		ldr	r3, [r7, #4]
2242:Generated_Source\PSoC4/CyLib.c **** }
 3388              		.loc 1 2242 0
 3389 0016 181C     		mov	r0, r3
 3390 0018 BD46     		mov	sp, r7
 3391 001a 02B0     		add	sp, sp, #8
 3392              		@ sp needed
 3393 001c 80BD     		pop	{r7, pc}
 3394              	.L211:
 3395 001e C046     		.align	2
 3396              	.L210:
 3397 0020 80E100E0 		.word	-536813184
 3398              		.cfi_endproc
 3399              	.LFE35:
 3400              		.size	CyDisableInts, .-CyDisableInts
 3401              		.section	.text.CyEnableInts,"ax",%progbits
 3402              		.align	2
 3403              		.global	CyEnableInts
 3404              		.code	16
 3405              		.thumb_func
 3406              		.type	CyEnableInts, %function
 3407              	CyEnableInts:
 3408              	.LFB36:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 3409              		.loc 1 2255 0
 3410              		.cfi_startproc
 3411 0000 80B5     		push	{r7, lr}
 3412              		.cfi_def_cfa_offset 8
 3413              		.cfi_offset 7, -8
 3414              		.cfi_offset 14, -4
 3415 0002 82B0     		sub	sp, sp, #8
 3416              		.cfi_def_cfa_offset 16
 3417 0004 00AF     		add	r7, sp, #0
 3418              		.cfi_def_cfa_register 7
 3419 0006 7860     		str	r0, [r7, #4]
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 3420              		.loc 1 2256 0
 3421 0008 024B     		ldr	r3, .L213
 3422 000a 7A68     		ldr	r2, [r7, #4]
 3423 000c 1A60     		str	r2, [r3]
2257:Generated_Source\PSoC4/CyLib.c **** }
 3424              		.loc 1 2257 0
 3425 000e BD46     		mov	sp, r7
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 101


 3426 0010 02B0     		add	sp, sp, #8
 3427              		@ sp needed
 3428 0012 80BD     		pop	{r7, pc}
 3429              	.L214:
 3430              		.align	2
 3431              	.L213:
 3432 0014 00E100E0 		.word	-536813312
 3433              		.cfi_endproc
 3434              	.LFE36:
 3435              		.size	CyEnableInts, .-CyEnableInts
 3436              		.section	.text.CyIntSetSysVector,"ax",%progbits
 3437              		.align	2
 3438              		.global	CyIntSetSysVector
 3439              		.code	16
 3440              		.thumb_func
 3441              		.type	CyIntSetSysVector, %function
 3442              	CyIntSetSysVector:
 3443              	.LFB37:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
 3444              		.loc 1 2280 0
 3445              		.cfi_startproc
 3446 0000 80B5     		push	{r7, lr}
 3447              		.cfi_def_cfa_offset 8
 3448              		.cfi_offset 7, -8
 3449              		.cfi_offset 14, -4
 3450 0002 84B0     		sub	sp, sp, #16
 3451              		.cfi_def_cfa_offset 24
 3452 0004 00AF     		add	r7, sp, #0
 3453              		.cfi_def_cfa_register 7
 3454 0006 021C     		mov	r2, r0
 3455 0008 3960     		str	r1, [r7]
 3456 000a FB1D     		add	r3, r7, #7
 3457 000c 1A70     		strb	r2, [r3]
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 102


 3458              		.loc 1 2282 0
 3459 000e 8023     		mov	r3, #128
 3460 0010 9B05     		lsl	r3, r3, #22
 3461 0012 FB60     		str	r3, [r7, #12]
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 3462              		.loc 1 2284 0
 3463 0014 FB1D     		add	r3, r7, #7
 3464 0016 1B78     		ldrb	r3, [r3]
 3465 0018 0F2B     		cmp	r3, #15
 3466 001a 02D9     		bls	.L216
 3467              		.loc 1 2284 0 is_stmt 0 discriminator 1
 3468 001c 0020     		mov	r0, #0
 3469 001e FFF7FEFF 		bl	CyHalt
 3470              	.L216:
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 3471              		.loc 1 2287 0 is_stmt 1
 3472 0022 FB1D     		add	r3, r7, #7
 3473 0024 1B78     		ldrb	r3, [r3]
 3474 0026 9B00     		lsl	r3, r3, #2
 3475 0028 FA68     		ldr	r2, [r7, #12]
 3476 002a D318     		add	r3, r2, r3
 3477 002c 1B68     		ldr	r3, [r3]
 3478 002e BB60     		str	r3, [r7, #8]
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 3479              		.loc 1 2290 0
 3480 0030 FB1D     		add	r3, r7, #7
 3481 0032 1B78     		ldrb	r3, [r3]
 3482 0034 9B00     		lsl	r3, r3, #2
 3483 0036 FA68     		ldr	r2, [r7, #12]
 3484 0038 D318     		add	r3, r2, r3
 3485 003a 3A68     		ldr	r2, [r7]
 3486 003c 1A60     		str	r2, [r3]
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 3487              		.loc 1 2292 0
 3488 003e BB68     		ldr	r3, [r7, #8]
2293:Generated_Source\PSoC4/CyLib.c **** }
 3489              		.loc 1 2293 0
 3490 0040 181C     		mov	r0, r3
 3491 0042 BD46     		mov	sp, r7
 3492 0044 04B0     		add	sp, sp, #16
 3493              		@ sp needed
 3494 0046 80BD     		pop	{r7, pc}
 3495              		.cfi_endproc
 3496              	.LFE37:
 3497              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 3498              		.section	.text.CyIntGetSysVector,"ax",%progbits
 3499              		.align	2
 3500              		.global	CyIntGetSysVector
 3501              		.code	16
 3502              		.thumb_func
 3503              		.type	CyIntGetSysVector, %function
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 103


 3504              	CyIntGetSysVector:
 3505              	.LFB38:
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
 3506              		.loc 1 2314 0
 3507              		.cfi_startproc
 3508 0000 80B5     		push	{r7, lr}
 3509              		.cfi_def_cfa_offset 8
 3510              		.cfi_offset 7, -8
 3511              		.cfi_offset 14, -4
 3512 0002 84B0     		sub	sp, sp, #16
 3513              		.cfi_def_cfa_offset 24
 3514 0004 00AF     		add	r7, sp, #0
 3515              		.cfi_def_cfa_register 7
 3516 0006 021C     		mov	r2, r0
 3517 0008 FB1D     		add	r3, r7, #7
 3518 000a 1A70     		strb	r2, [r3]
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 3519              		.loc 1 2315 0
 3520 000c 8023     		mov	r3, #128
 3521 000e 9B05     		lsl	r3, r3, #22
 3522 0010 FB60     		str	r3, [r7, #12]
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 3523              		.loc 1 2317 0
 3524 0012 FB1D     		add	r3, r7, #7
 3525 0014 1B78     		ldrb	r3, [r3]
 3526 0016 0F2B     		cmp	r3, #15
 3527 0018 02D9     		bls	.L219
 3528              		.loc 1 2317 0 is_stmt 0 discriminator 1
 3529 001a 0020     		mov	r0, #0
 3530 001c FFF7FEFF 		bl	CyHalt
 3531              	.L219:
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 3532              		.loc 1 2319 0 is_stmt 1
 3533 0020 FB1D     		add	r3, r7, #7
 3534 0022 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 104


 3535 0024 9B00     		lsl	r3, r3, #2
 3536 0026 FA68     		ldr	r2, [r7, #12]
 3537 0028 D318     		add	r3, r2, r3
 3538 002a 1B68     		ldr	r3, [r3]
2320:Generated_Source\PSoC4/CyLib.c **** }
 3539              		.loc 1 2320 0
 3540 002c 181C     		mov	r0, r3
 3541 002e BD46     		mov	sp, r7
 3542 0030 04B0     		add	sp, sp, #16
 3543              		@ sp needed
 3544 0032 80BD     		pop	{r7, pc}
 3545              		.cfi_endproc
 3546              	.LFE38:
 3547              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 3548              		.section	.text.CyIntSetVector,"ax",%progbits
 3549              		.align	2
 3550              		.global	CyIntSetVector
 3551              		.code	16
 3552              		.thumb_func
 3553              		.type	CyIntSetVector, %function
 3554              	CyIntSetVector:
 3555              	.LFB39:
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
 3556              		.loc 1 2336 0
 3557              		.cfi_startproc
 3558 0000 80B5     		push	{r7, lr}
 3559              		.cfi_def_cfa_offset 8
 3560              		.cfi_offset 7, -8
 3561              		.cfi_offset 14, -4
 3562 0002 84B0     		sub	sp, sp, #16
 3563              		.cfi_def_cfa_offset 24
 3564 0004 00AF     		add	r7, sp, #0
 3565              		.cfi_def_cfa_register 7
 3566 0006 021C     		mov	r2, r0
 3567 0008 3960     		str	r1, [r7]
 3568 000a FB1D     		add	r3, r7, #7
 3569 000c 1A70     		strb	r2, [r3]
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 3570              		.loc 1 2338 0
 3571 000e 8023     		mov	r3, #128
 3572 0010 9B05     		lsl	r3, r3, #22
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 105


 3573 0012 FB60     		str	r3, [r7, #12]
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 3574              		.loc 1 2340 0
 3575 0014 FB1D     		add	r3, r7, #7
 3576 0016 1B78     		ldrb	r3, [r3]
 3577 0018 1F2B     		cmp	r3, #31
 3578 001a 02D9     		bls	.L222
 3579              		.loc 1 2340 0 is_stmt 0 discriminator 1
 3580 001c 0020     		mov	r0, #0
 3581 001e FFF7FEFF 		bl	CyHalt
 3582              	.L222:
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 3583              		.loc 1 2343 0 is_stmt 1
 3584 0022 FB1D     		add	r3, r7, #7
 3585 0024 1B78     		ldrb	r3, [r3]
 3586 0026 1033     		add	r3, r3, #16
 3587 0028 9B00     		lsl	r3, r3, #2
 3588 002a FA68     		ldr	r2, [r7, #12]
 3589 002c D318     		add	r3, r2, r3
 3590 002e 1B68     		ldr	r3, [r3]
 3591 0030 BB60     		str	r3, [r7, #8]
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 3592              		.loc 1 2346 0
 3593 0032 FB1D     		add	r3, r7, #7
 3594 0034 1B78     		ldrb	r3, [r3]
 3595 0036 1033     		add	r3, r3, #16
 3596 0038 9B00     		lsl	r3, r3, #2
 3597 003a FA68     		ldr	r2, [r7, #12]
 3598 003c D318     		add	r3, r2, r3
 3599 003e 3A68     		ldr	r2, [r7]
 3600 0040 1A60     		str	r2, [r3]
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 3601              		.loc 1 2348 0
 3602 0042 BB68     		ldr	r3, [r7, #8]
2349:Generated_Source\PSoC4/CyLib.c **** }
 3603              		.loc 1 2349 0
 3604 0044 181C     		mov	r0, r3
 3605 0046 BD46     		mov	sp, r7
 3606 0048 04B0     		add	sp, sp, #16
 3607              		@ sp needed
 3608 004a 80BD     		pop	{r7, pc}
 3609              		.cfi_endproc
 3610              	.LFE39:
 3611              		.size	CyIntSetVector, .-CyIntSetVector
 3612              		.section	.text.CyIntGetVector,"ax",%progbits
 3613              		.align	2
 3614              		.global	CyIntGetVector
 3615              		.code	16
 3616              		.thumb_func
 3617              		.type	CyIntGetVector, %function
 3618              	CyIntGetVector:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 106


 3619              	.LFB40:
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
 3620              		.loc 1 2364 0
 3621              		.cfi_startproc
 3622 0000 80B5     		push	{r7, lr}
 3623              		.cfi_def_cfa_offset 8
 3624              		.cfi_offset 7, -8
 3625              		.cfi_offset 14, -4
 3626 0002 84B0     		sub	sp, sp, #16
 3627              		.cfi_def_cfa_offset 24
 3628 0004 00AF     		add	r7, sp, #0
 3629              		.cfi_def_cfa_register 7
 3630 0006 021C     		mov	r2, r0
 3631 0008 FB1D     		add	r3, r7, #7
 3632 000a 1A70     		strb	r2, [r3]
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 3633              		.loc 1 2365 0
 3634 000c 8023     		mov	r3, #128
 3635 000e 9B05     		lsl	r3, r3, #22
 3636 0010 FB60     		str	r3, [r7, #12]
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 3637              		.loc 1 2367 0
 3638 0012 FB1D     		add	r3, r7, #7
 3639 0014 1B78     		ldrb	r3, [r3]
 3640 0016 1F2B     		cmp	r3, #31
 3641 0018 02D9     		bls	.L225
 3642              		.loc 1 2367 0 is_stmt 0 discriminator 1
 3643 001a 0020     		mov	r0, #0
 3644 001c FFF7FEFF 		bl	CyHalt
 3645              	.L225:
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 3646              		.loc 1 2369 0 is_stmt 1
 3647 0020 FB1D     		add	r3, r7, #7
 3648 0022 1B78     		ldrb	r3, [r3]
 3649 0024 1033     		add	r3, r3, #16
 3650 0026 9B00     		lsl	r3, r3, #2
 3651 0028 FA68     		ldr	r2, [r7, #12]
 3652 002a D318     		add	r3, r2, r3
 3653 002c 1B68     		ldr	r3, [r3]
2370:Generated_Source\PSoC4/CyLib.c **** }
 3654              		.loc 1 2370 0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 107


 3655 002e 181C     		mov	r0, r3
 3656 0030 BD46     		mov	sp, r7
 3657 0032 04B0     		add	sp, sp, #16
 3658              		@ sp needed
 3659 0034 80BD     		pop	{r7, pc}
 3660              		.cfi_endproc
 3661              	.LFE40:
 3662              		.size	CyIntGetVector, .-CyIntGetVector
 3663              		.section	.text.CyIntSetPriority,"ax",%progbits
 3664              		.align	2
 3665              		.global	CyIntSetPriority
 3666              		.code	16
 3667              		.thumb_func
 3668              		.type	CyIntSetPriority, %function
 3669              	CyIntSetPriority:
 3670              	.LFB41:
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
 3671              		.loc 1 2383 0
 3672              		.cfi_startproc
 3673 0000 90B5     		push	{r4, r7, lr}
 3674              		.cfi_def_cfa_offset 12
 3675              		.cfi_offset 4, -12
 3676              		.cfi_offset 7, -8
 3677              		.cfi_offset 14, -4
 3678 0002 87B0     		sub	sp, sp, #28
 3679              		.cfi_def_cfa_offset 40
 3680 0004 00AF     		add	r7, sp, #0
 3681              		.cfi_def_cfa_register 7
 3682 0006 021C     		mov	r2, r0
 3683 0008 FB1D     		add	r3, r7, #7
 3684 000a 1A70     		strb	r2, [r3]
 3685 000c BB1D     		add	r3, r7, #6
 3686 000e 0A1C     		add	r2, r1, #0
 3687 0010 1A70     		strb	r2, [r3]
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 3688              		.loc 1 2388 0
 3689 0012 BB1D     		add	r3, r7, #6
 3690 0014 1B78     		ldrb	r3, [r3]
 3691 0016 032B     		cmp	r3, #3
 3692 0018 02D9     		bls	.L228
 3693              		.loc 1 2388 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 108


 3694 001a 0020     		mov	r0, #0
 3695 001c FFF7FEFF 		bl	CyHalt
 3696              	.L228:
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 3697              		.loc 1 2389 0 is_stmt 1
 3698 0020 FB1D     		add	r3, r7, #7
 3699 0022 1B78     		ldrb	r3, [r3]
 3700 0024 1F2B     		cmp	r3, #31
 3701 0026 02D9     		bls	.L229
 3702              		.loc 1 2389 0 is_stmt 0 discriminator 1
 3703 0028 0020     		mov	r0, #0
 3704 002a FFF7FEFF 		bl	CyHalt
 3705              	.L229:
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 3706              		.loc 1 2391 0 is_stmt 1
 3707 002e FB1D     		add	r3, r7, #7
 3708 0030 1B78     		ldrb	r3, [r3]
 3709 0032 0322     		mov	r2, #3
 3710 0034 1340     		and	r3, r2
 3711 0036 DB00     		lsl	r3, r3, #3
 3712 0038 0633     		add	r3, r3, #6
 3713 003a 7B61     		str	r3, [r7, #20]
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 3714              		.loc 1 2393 0
 3715 003c 1323     		mov	r3, #19
 3716 003e FC18     		add	r4, r7, r3
 3717 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 3718 0044 031C     		mov	r3, r0
 3719 0046 2370     		strb	r3, [r4]
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 3720              		.loc 1 2395 0
 3721 0048 FB1D     		add	r3, r7, #7
 3722 004a 1B78     		ldrb	r3, [r3]
 3723 004c 9B08     		lsr	r3, r3, #2
 3724 004e DBB2     		uxtb	r3, r3
 3725 0050 9B00     		lsl	r3, r3, #2
 3726 0052 144A     		ldr	r2, .L230
 3727 0054 9446     		mov	ip, r2
 3728 0056 6344     		add	r3, r3, ip
 3729 0058 1B68     		ldr	r3, [r3]
 3730 005a FB60     		str	r3, [r7, #12]
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 3731              		.loc 1 2396 0
 3732 005c 7B69     		ldr	r3, [r7, #20]
 3733 005e 0322     		mov	r2, #3
 3734 0060 9A40     		lsl	r2, r2, r3
 3735 0062 131C     		mov	r3, r2
 3736 0064 DA43     		mvn	r2, r3
 3737 0066 FB68     		ldr	r3, [r7, #12]
 3738 0068 1340     		and	r3, r2
 3739 006a FB60     		str	r3, [r7, #12]
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 3740              		.loc 1 2397 0
 3741 006c BB1D     		add	r3, r7, #6
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 109


 3742 006e 1A78     		ldrb	r2, [r3]
 3743 0070 7B69     		ldr	r3, [r7, #20]
 3744 0072 9A40     		lsl	r2, r2, r3
 3745 0074 131C     		mov	r3, r2
 3746 0076 FA68     		ldr	r2, [r7, #12]
 3747 0078 1343     		orr	r3, r2
 3748 007a FB60     		str	r3, [r7, #12]
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 3749              		.loc 1 2398 0
 3750 007c FB1D     		add	r3, r7, #7
 3751 007e 1B78     		ldrb	r3, [r3]
 3752 0080 9B08     		lsr	r3, r3, #2
 3753 0082 DBB2     		uxtb	r3, r3
 3754 0084 9B00     		lsl	r3, r3, #2
 3755 0086 074A     		ldr	r2, .L230
 3756 0088 9446     		mov	ip, r2
 3757 008a 6344     		add	r3, r3, ip
 3758 008c FA68     		ldr	r2, [r7, #12]
 3759 008e 1A60     		str	r2, [r3]
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 3760              		.loc 1 2400 0
 3761 0090 1323     		mov	r3, #19
 3762 0092 FB18     		add	r3, r7, r3
 3763 0094 1B78     		ldrb	r3, [r3]
 3764 0096 181C     		mov	r0, r3
 3765 0098 FFF7FEFF 		bl	CyExitCriticalSection
2401:Generated_Source\PSoC4/CyLib.c **** }
 3766              		.loc 1 2401 0
 3767 009c BD46     		mov	sp, r7
 3768 009e 07B0     		add	sp, sp, #28
 3769              		@ sp needed
 3770 00a0 90BD     		pop	{r4, r7, pc}
 3771              	.L231:
 3772 00a2 C046     		.align	2
 3773              	.L230:
 3774 00a4 00E400E0 		.word	-536812544
 3775              		.cfi_endproc
 3776              	.LFE41:
 3777              		.size	CyIntSetPriority, .-CyIntSetPriority
 3778              		.section	.text.CyIntGetPriority,"ax",%progbits
 3779              		.align	2
 3780              		.global	CyIntGetPriority
 3781              		.code	16
 3782              		.thumb_func
 3783              		.type	CyIntGetPriority, %function
 3784              	CyIntGetPriority:
 3785              	.LFB42:
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 110


2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
 3786              		.loc 1 2417 0
 3787              		.cfi_startproc
 3788 0000 80B5     		push	{r7, lr}
 3789              		.cfi_def_cfa_offset 8
 3790              		.cfi_offset 7, -8
 3791              		.cfi_offset 14, -4
 3792 0002 84B0     		sub	sp, sp, #16
 3793              		.cfi_def_cfa_offset 24
 3794 0004 00AF     		add	r7, sp, #0
 3795              		.cfi_def_cfa_register 7
 3796 0006 021C     		mov	r2, r0
 3797 0008 FB1D     		add	r3, r7, #7
 3798 000a 1A70     		strb	r2, [r3]
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 3799              		.loc 1 2420 0
 3800 000c FB1D     		add	r3, r7, #7
 3801 000e 1B78     		ldrb	r3, [r3]
 3802 0010 1F2B     		cmp	r3, #31
 3803 0012 02D9     		bls	.L233
 3804              		.loc 1 2420 0 is_stmt 0 discriminator 1
 3805 0014 0020     		mov	r0, #0
 3806 0016 FFF7FEFF 		bl	CyHalt
 3807              	.L233:
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 3808              		.loc 1 2422 0 is_stmt 1
 3809 001a FB1D     		add	r3, r7, #7
 3810 001c 1B78     		ldrb	r3, [r3]
 3811 001e 9B08     		lsr	r3, r3, #2
 3812 0020 DBB2     		uxtb	r3, r3
 3813 0022 9B00     		lsl	r3, r3, #2
 3814 0024 0C4A     		ldr	r2, .L235
 3815 0026 9446     		mov	ip, r2
 3816 0028 6344     		add	r3, r3, ip
 3817 002a 1B68     		ldr	r3, [r3]
 3818 002c FA1D     		add	r2, r7, #7
 3819 002e 1278     		ldrb	r2, [r2]
 3820 0030 0321     		mov	r1, #3
 3821 0032 0A40     		and	r2, r1
 3822 0034 D200     		lsl	r2, r2, #3
 3823 0036 0632     		add	r2, r2, #6
 3824 0038 D340     		lsr	r3, r3, r2
 3825 003a 1A1C     		mov	r2, r3
 3826 003c 0F23     		mov	r3, #15
 3827 003e FB18     		add	r3, r7, r3
 3828 0040 1A70     		strb	r2, [r3]
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 111


 3829              		.loc 1 2424 0
 3830 0042 0F23     		mov	r3, #15
 3831 0044 FB18     		add	r3, r7, r3
 3832 0046 1B78     		ldrb	r3, [r3]
 3833 0048 0322     		mov	r2, #3
 3834 004a 1340     		and	r3, r2
 3835 004c DBB2     		uxtb	r3, r3
2425:Generated_Source\PSoC4/CyLib.c **** }
 3836              		.loc 1 2425 0
 3837 004e 181C     		mov	r0, r3
 3838 0050 BD46     		mov	sp, r7
 3839 0052 04B0     		add	sp, sp, #16
 3840              		@ sp needed
 3841 0054 80BD     		pop	{r7, pc}
 3842              	.L236:
 3843 0056 C046     		.align	2
 3844              	.L235:
 3845 0058 00E400E0 		.word	-536812544
 3846              		.cfi_endproc
 3847              	.LFE42:
 3848              		.size	CyIntGetPriority, .-CyIntGetPriority
 3849              		.section	.text.CyIntEnable,"ax",%progbits
 3850              		.align	2
 3851              		.global	CyIntEnable
 3852              		.code	16
 3853              		.thumb_func
 3854              		.type	CyIntEnable, %function
 3855              	CyIntEnable:
 3856              	.LFB43:
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 3857              		.loc 1 2438 0
 3858              		.cfi_startproc
 3859 0000 80B5     		push	{r7, lr}
 3860              		.cfi_def_cfa_offset 8
 3861              		.cfi_offset 7, -8
 3862              		.cfi_offset 14, -4
 3863 0002 82B0     		sub	sp, sp, #8
 3864              		.cfi_def_cfa_offset 16
 3865 0004 00AF     		add	r7, sp, #0
 3866              		.cfi_def_cfa_register 7
 3867 0006 021C     		mov	r2, r0
 3868 0008 FB1D     		add	r3, r7, #7
 3869 000a 1A70     		strb	r2, [r3]
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 3870              		.loc 1 2439 0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 112


 3871 000c 054B     		ldr	r3, .L238
 3872 000e FA1D     		add	r2, r7, #7
 3873 0010 1278     		ldrb	r2, [r2]
 3874 0012 1F21     		mov	r1, #31
 3875 0014 0A40     		and	r2, r1
 3876 0016 0121     		mov	r1, #1
 3877 0018 9140     		lsl	r1, r1, r2
 3878 001a 0A1C     		mov	r2, r1
 3879 001c 1A60     		str	r2, [r3]
2440:Generated_Source\PSoC4/CyLib.c **** }
 3880              		.loc 1 2440 0
 3881 001e BD46     		mov	sp, r7
 3882 0020 02B0     		add	sp, sp, #8
 3883              		@ sp needed
 3884 0022 80BD     		pop	{r7, pc}
 3885              	.L239:
 3886              		.align	2
 3887              	.L238:
 3888 0024 00E100E0 		.word	-536813312
 3889              		.cfi_endproc
 3890              	.LFE43:
 3891              		.size	CyIntEnable, .-CyIntEnable
 3892              		.section	.text.CyIntGetState,"ax",%progbits
 3893              		.align	2
 3894              		.global	CyIntGetState
 3895              		.code	16
 3896              		.thumb_func
 3897              		.type	CyIntGetState, %function
 3898              	CyIntGetState:
 3899              	.LFB44:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 3900              		.loc 1 2456 0
 3901              		.cfi_startproc
 3902 0000 80B5     		push	{r7, lr}
 3903              		.cfi_def_cfa_offset 8
 3904              		.cfi_offset 7, -8
 3905              		.cfi_offset 14, -4
 3906 0002 82B0     		sub	sp, sp, #8
 3907              		.cfi_def_cfa_offset 16
 3908 0004 00AF     		add	r7, sp, #0
 3909              		.cfi_def_cfa_register 7
 3910 0006 021C     		mov	r2, r0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 113


 3911 0008 FB1D     		add	r3, r7, #7
 3912 000a 1A70     		strb	r2, [r3]
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 3913              		.loc 1 2458 0
 3914 000c 074B     		ldr	r3, .L242
 3915 000e 1A68     		ldr	r2, [r3]
 3916 0010 FB1D     		add	r3, r7, #7
 3917 0012 1B78     		ldrb	r3, [r3]
 3918 0014 1F21     		mov	r1, #31
 3919 0016 0B40     		and	r3, r1
 3920 0018 DA40     		lsr	r2, r2, r3
 3921 001a 131C     		mov	r3, r2
 3922 001c DBB2     		uxtb	r3, r3
 3923 001e 0122     		mov	r2, #1
 3924 0020 1340     		and	r3, r2
 3925 0022 DBB2     		uxtb	r3, r3
2459:Generated_Source\PSoC4/CyLib.c **** }
 3926              		.loc 1 2459 0
 3927 0024 181C     		mov	r0, r3
 3928 0026 BD46     		mov	sp, r7
 3929 0028 02B0     		add	sp, sp, #8
 3930              		@ sp needed
 3931 002a 80BD     		pop	{r7, pc}
 3932              	.L243:
 3933              		.align	2
 3934              	.L242:
 3935 002c 00E100E0 		.word	-536813312
 3936              		.cfi_endproc
 3937              	.LFE44:
 3938              		.size	CyIntGetState, .-CyIntGetState
 3939              		.section	.text.CyIntDisable,"ax",%progbits
 3940              		.align	2
 3941              		.global	CyIntDisable
 3942              		.code	16
 3943              		.thumb_func
 3944              		.type	CyIntDisable, %function
 3945              	CyIntDisable:
 3946              	.LFB45:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 3947              		.loc 1 2472 0
 3948              		.cfi_startproc
 3949 0000 80B5     		push	{r7, lr}
 3950              		.cfi_def_cfa_offset 8
 3951              		.cfi_offset 7, -8
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 114


 3952              		.cfi_offset 14, -4
 3953 0002 82B0     		sub	sp, sp, #8
 3954              		.cfi_def_cfa_offset 16
 3955 0004 00AF     		add	r7, sp, #0
 3956              		.cfi_def_cfa_register 7
 3957 0006 021C     		mov	r2, r0
 3958 0008 FB1D     		add	r3, r7, #7
 3959 000a 1A70     		strb	r2, [r3]
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 3960              		.loc 1 2473 0
 3961 000c 054B     		ldr	r3, .L245
 3962 000e FA1D     		add	r2, r7, #7
 3963 0010 1278     		ldrb	r2, [r2]
 3964 0012 1F21     		mov	r1, #31
 3965 0014 0A40     		and	r2, r1
 3966 0016 0121     		mov	r1, #1
 3967 0018 9140     		lsl	r1, r1, r2
 3968 001a 0A1C     		mov	r2, r1
 3969 001c 1A60     		str	r2, [r3]
2474:Generated_Source\PSoC4/CyLib.c **** }
 3970              		.loc 1 2474 0
 3971 001e BD46     		mov	sp, r7
 3972 0020 02B0     		add	sp, sp, #8
 3973              		@ sp needed
 3974 0022 80BD     		pop	{r7, pc}
 3975              	.L246:
 3976              		.align	2
 3977              	.L245:
 3978 0024 80E100E0 		.word	-536813184
 3979              		.cfi_endproc
 3980              	.LFE45:
 3981              		.size	CyIntDisable, .-CyIntDisable
 3982              		.section	.text.CyIntSetPending,"ax",%progbits
 3983              		.align	2
 3984              		.global	CyIntSetPending
 3985              		.code	16
 3986              		.thumb_func
 3987              		.type	CyIntSetPending, %function
 3988              	CyIntSetPending:
 3989              	.LFB46:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 3990              		.loc 1 2486 0
 3991              		.cfi_startproc
 3992 0000 80B5     		push	{r7, lr}
 3993              		.cfi_def_cfa_offset 8
 3994              		.cfi_offset 7, -8
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 115


 3995              		.cfi_offset 14, -4
 3996 0002 82B0     		sub	sp, sp, #8
 3997              		.cfi_def_cfa_offset 16
 3998 0004 00AF     		add	r7, sp, #0
 3999              		.cfi_def_cfa_register 7
 4000 0006 021C     		mov	r2, r0
 4001 0008 FB1D     		add	r3, r7, #7
 4002 000a 1A70     		strb	r2, [r3]
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 4003              		.loc 1 2487 0
 4004 000c 054B     		ldr	r3, .L248
 4005 000e FA1D     		add	r2, r7, #7
 4006 0010 1278     		ldrb	r2, [r2]
 4007 0012 1F21     		mov	r1, #31
 4008 0014 0A40     		and	r2, r1
 4009 0016 0121     		mov	r1, #1
 4010 0018 9140     		lsl	r1, r1, r2
 4011 001a 0A1C     		mov	r2, r1
 4012 001c 1A60     		str	r2, [r3]
2488:Generated_Source\PSoC4/CyLib.c **** }
 4013              		.loc 1 2488 0
 4014 001e BD46     		mov	sp, r7
 4015 0020 02B0     		add	sp, sp, #8
 4016              		@ sp needed
 4017 0022 80BD     		pop	{r7, pc}
 4018              	.L249:
 4019              		.align	2
 4020              	.L248:
 4021 0024 00E200E0 		.word	-536813056
 4022              		.cfi_endproc
 4023              	.LFE46:
 4024              		.size	CyIntSetPending, .-CyIntSetPending
 4025              		.section	.text.CyIntClearPending,"ax",%progbits
 4026              		.align	2
 4027              		.global	CyIntClearPending
 4028              		.code	16
 4029              		.thumb_func
 4030              		.type	CyIntClearPending, %function
 4031              	CyIntClearPending:
 4032              	.LFB47:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 4033              		.loc 1 2501 0
 4034              		.cfi_startproc
 4035 0000 80B5     		push	{r7, lr}
 4036              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 116


 4037              		.cfi_offset 7, -8
 4038              		.cfi_offset 14, -4
 4039 0002 82B0     		sub	sp, sp, #8
 4040              		.cfi_def_cfa_offset 16
 4041 0004 00AF     		add	r7, sp, #0
 4042              		.cfi_def_cfa_register 7
 4043 0006 021C     		mov	r2, r0
 4044 0008 FB1D     		add	r3, r7, #7
 4045 000a 1A70     		strb	r2, [r3]
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 4046              		.loc 1 2502 0
 4047 000c 054B     		ldr	r3, .L251
 4048 000e FA1D     		add	r2, r7, #7
 4049 0010 1278     		ldrb	r2, [r2]
 4050 0012 1F21     		mov	r1, #31
 4051 0014 0A40     		and	r2, r1
 4052 0016 0121     		mov	r1, #1
 4053 0018 9140     		lsl	r1, r1, r2
 4054 001a 0A1C     		mov	r2, r1
 4055 001c 1A60     		str	r2, [r3]
2503:Generated_Source\PSoC4/CyLib.c **** }
 4056              		.loc 1 2503 0
 4057 001e BD46     		mov	sp, r7
 4058 0020 02B0     		add	sp, sp, #8
 4059              		@ sp needed
 4060 0022 80BD     		pop	{r7, pc}
 4061              	.L252:
 4062              		.align	2
 4063              	.L251:
 4064 0024 80E200E0 		.word	-536812928
 4065              		.cfi_endproc
 4066              	.LFE47:
 4067              		.size	CyIntClearPending, .-CyIntClearPending
 4068              		.section	.text.CyHalt,"ax",%progbits
 4069              		.align	2
 4070              		.global	CyHalt
 4071              		.code	16
 4072              		.thumb_func
 4073              		.type	CyHalt, %function
 4074              	CyHalt:
 4075              	.LFB48:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 4076              		.loc 1 2516 0
 4077              		.cfi_startproc
 4078 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 117


 4079              		.cfi_def_cfa_offset 8
 4080              		.cfi_offset 7, -8
 4081              		.cfi_offset 14, -4
 4082 0002 82B0     		sub	sp, sp, #8
 4083              		.cfi_def_cfa_offset 16
 4084 0004 00AF     		add	r7, sp, #0
 4085              		.cfi_def_cfa_register 7
 4086 0006 021C     		mov	r2, r0
 4087 0008 FB1D     		add	r3, r7, #7
 4088 000a 1A70     		strb	r2, [r3]
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 4089              		.loc 1 2525 0
 4090              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 4091 000c 01BE     		    bkpt    1
 4092              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 4093              		.loc 1 2529 0
 4094              		.code	16
 4095 000e BD46     		mov	sp, r7
 4096 0010 02B0     		add	sp, sp, #8
 4097              		@ sp needed
 4098 0012 80BD     		pop	{r7, pc}
 4099              		.cfi_endproc
 4100              	.LFE48:
 4101              		.size	CyHalt, .-CyHalt
 4102              		.section	.text.CySoftwareReset,"ax",%progbits
 4103              		.align	2
 4104              		.global	CySoftwareReset
 4105              		.code	16
 4106              		.thumb_func
 4107              		.type	CySoftwareReset, %function
 4108              	CySoftwareReset:
 4109              	.LFB49:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 4110              		.loc 1 2540 0
 4111              		.cfi_startproc
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 118


 4112 0000 80B5     		push	{r7, lr}
 4113              		.cfi_def_cfa_offset 8
 4114              		.cfi_offset 7, -8
 4115              		.cfi_offset 14, -4
 4116 0002 00AF     		add	r7, sp, #0
 4117              		.cfi_def_cfa_register 7
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 4118              		.loc 1 2545 0
 4119 0004 044B     		ldr	r3, .L255
 4120 0006 044A     		ldr	r2, .L255
 4121 0008 1268     		ldr	r2, [r2]
 4122 000a 1204     		lsl	r2, r2, #16
 4123 000c 120C     		lsr	r2, r2, #16
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 4124              		.loc 1 2546 0
 4125 000e 0349     		ldr	r1, .L255+4
 4126 0010 0A43     		orr	r2, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 4127              		.loc 1 2545 0
 4128 0012 1A60     		str	r2, [r3]
2547:Generated_Source\PSoC4/CyLib.c **** }
 4129              		.loc 1 2547 0
 4130 0014 BD46     		mov	sp, r7
 4131              		@ sp needed
 4132 0016 80BD     		pop	{r7, pc}
 4133              	.L256:
 4134              		.align	2
 4135              	.L255:
 4136 0018 0CED00E0 		.word	-536810228
 4137 001c 0400FA05 		.word	100270084
 4138              		.cfi_endproc
 4139              	.LFE49:
 4140              		.size	CySoftwareReset, .-CySoftwareReset
 4141              		.section	.text.CyDelay,"ax",%progbits
 4142              		.align	2
 4143              		.global	CyDelay
 4144              		.code	16
 4145              		.thumb_func
 4146              		.type	CyDelay, %function
 4147              	CyDelay:
 4148              	.LFB50:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 119


2560:Generated_Source\PSoC4/CyLib.c **** {
 4149              		.loc 1 2560 0
 4150              		.cfi_startproc
 4151 0000 80B5     		push	{r7, lr}
 4152              		.cfi_def_cfa_offset 8
 4153              		.cfi_offset 7, -8
 4154              		.cfi_offset 14, -4
 4155 0002 82B0     		sub	sp, sp, #8
 4156              		.cfi_def_cfa_offset 16
 4157 0004 00AF     		add	r7, sp, #0
 4158              		.cfi_def_cfa_register 7
 4159 0006 7860     		str	r0, [r7, #4]
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 4160              		.loc 1 2561 0
 4161 0008 09E0     		b	.L258
 4162              	.L259:
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 4163              		.loc 1 2566 0
 4164 000a 0C4B     		ldr	r3, .L260
 4165 000c 1B68     		ldr	r3, [r3]
 4166 000e 181C     		mov	r0, r3
 4167 0010 FFF7FEFF 		bl	CyDelayCycles
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 4168              		.loc 1 2567 0
 4169 0014 7B68     		ldr	r3, [r7, #4]
 4170 0016 0A4A     		ldr	r2, .L260+4
 4171 0018 9446     		mov	ip, r2
 4172 001a 6344     		add	r3, r3, ip
 4173 001c 7B60     		str	r3, [r7, #4]
 4174              	.L258:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 4175              		.loc 1 2561 0
 4176 001e 7A68     		ldr	r2, [r7, #4]
 4177 0020 8023     		mov	r3, #128
 4178 0022 1B02     		lsl	r3, r3, #8
 4179 0024 9A42     		cmp	r2, r3
 4180 0026 F0D8     		bhi	.L259
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 4181              		.loc 1 2570 0
 4182 0028 064B     		ldr	r3, .L260+8
 4183 002a 1B68     		ldr	r3, [r3]
 4184 002c 7A68     		ldr	r2, [r7, #4]
 4185 002e 5343     		mul	r3, r2
 4186 0030 181C     		mov	r0, r3
 4187 0032 FFF7FEFF 		bl	CyDelayCycles
2571:Generated_Source\PSoC4/CyLib.c **** }
 4188              		.loc 1 2571 0
 4189 0036 BD46     		mov	sp, r7
 4190 0038 02B0     		add	sp, sp, #8
 4191              		@ sp needed
 4192 003a 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 120


 4193              	.L261:
 4194              		.align	2
 4195              	.L260:
 4196 003c 00000000 		.word	cydelay32kMs
 4197 0040 0080FFFF 		.word	-32768
 4198 0044 00000000 		.word	cydelayFreqKhz
 4199              		.cfi_endproc
 4200              	.LFE50:
 4201              		.size	CyDelay, .-CyDelay
 4202              		.section	.text.CyDelayUs,"ax",%progbits
 4203              		.align	2
 4204              		.global	CyDelayUs
 4205              		.code	16
 4206              		.thumb_func
 4207              		.type	CyDelayUs, %function
 4208              	CyDelayUs:
 4209              	.LFB51:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 4210              		.loc 1 2583 0
 4211              		.cfi_startproc
 4212 0000 80B5     		push	{r7, lr}
 4213              		.cfi_def_cfa_offset 8
 4214              		.cfi_offset 7, -8
 4215              		.cfi_offset 14, -4
 4216 0002 82B0     		sub	sp, sp, #8
 4217              		.cfi_def_cfa_offset 16
 4218 0004 00AF     		add	r7, sp, #0
 4219              		.cfi_def_cfa_register 7
 4220 0006 021C     		mov	r2, r0
 4221 0008 BB1D     		add	r3, r7, #6
 4222 000a 1A80     		strh	r2, [r3]
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 4223              		.loc 1 2584 0
 4224 000c BB1D     		add	r3, r7, #6
 4225 000e 1B88     		ldrh	r3, [r3]
 4226 0010 044A     		ldr	r2, .L263
 4227 0012 1278     		ldrb	r2, [r2]
 4228 0014 5343     		mul	r3, r2
 4229 0016 181C     		mov	r0, r3
 4230 0018 FFF7FEFF 		bl	CyDelayCycles
2585:Generated_Source\PSoC4/CyLib.c **** }
 4231              		.loc 1 2585 0
 4232 001c BD46     		mov	sp, r7
 4233 001e 02B0     		add	sp, sp, #8
 4234              		@ sp needed
 4235 0020 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 121


 4236              	.L264:
 4237 0022 C046     		.align	2
 4238              	.L263:
 4239 0024 00000000 		.word	cydelayFreqMhz
 4240              		.cfi_endproc
 4241              	.LFE51:
 4242              		.size	CyDelayUs, .-CyDelayUs
 4243              		.section	.text.CyDelayFreq,"ax",%progbits
 4244              		.align	2
 4245              		.global	CyDelayFreq
 4246              		.code	16
 4247              		.thumb_func
 4248              		.type	CyDelayFreq, %function
 4249              	CyDelayFreq:
 4250              	.LFB52:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 4251              		.loc 1 2597 0
 4252              		.cfi_startproc
 4253 0000 80B5     		push	{r7, lr}
 4254              		.cfi_def_cfa_offset 8
 4255              		.cfi_offset 7, -8
 4256              		.cfi_offset 14, -4
 4257 0002 82B0     		sub	sp, sp, #8
 4258              		.cfi_def_cfa_offset 16
 4259 0004 00AF     		add	r7, sp, #0
 4260              		.cfi_def_cfa_register 7
 4261 0006 7860     		str	r0, [r7, #4]
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 4262              		.loc 1 2598 0
 4263 0008 7B68     		ldr	r3, [r7, #4]
 4264 000a 002B     		cmp	r3, #0
 4265 000c 03D0     		beq	.L266
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 4266              		.loc 1 2600 0
 4267 000e 154B     		ldr	r3, .L268
 4268 0010 7A68     		ldr	r2, [r7, #4]
 4269 0012 1A60     		str	r2, [r3]
 4270 0014 02E0     		b	.L267
 4271              	.L266:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 4272              		.loc 1 2604 0
 4273 0016 134B     		ldr	r3, .L268
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 122


 4274 0018 134A     		ldr	r2, .L268+4
 4275 001a 1A60     		str	r2, [r3]
 4276              	.L267:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 4277              		.loc 1 2607 0
 4278 001c 114B     		ldr	r3, .L268
 4279 001e 1B68     		ldr	r3, [r3]
 4280 0020 124A     		ldr	r2, .L268+8
 4281 0022 9446     		mov	ip, r2
 4282 0024 6344     		add	r3, r3, ip
 4283 0026 181C     		mov	r0, r3
 4284 0028 1149     		ldr	r1, .L268+12
 4285 002a FFF7FEFF 		bl	__aeabi_uidiv
 4286 002e 031C     		mov	r3, r0
 4287 0030 DAB2     		uxtb	r2, r3
 4288 0032 104B     		ldr	r3, .L268+16
 4289 0034 1A70     		strb	r2, [r3]
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 4290              		.loc 1 2608 0
 4291 0036 0B4B     		ldr	r3, .L268
 4292 0038 1B68     		ldr	r3, [r3]
 4293 003a 0F4A     		ldr	r2, .L268+20
 4294 003c 9446     		mov	ip, r2
 4295 003e 6344     		add	r3, r3, ip
 4296 0040 181C     		mov	r0, r3
 4297 0042 FA23     		mov	r3, #250
 4298 0044 9900     		lsl	r1, r3, #2
 4299 0046 FFF7FEFF 		bl	__aeabi_uidiv
 4300 004a 031C     		mov	r3, r0
 4301 004c 1A1C     		mov	r2, r3
 4302 004e 0B4B     		ldr	r3, .L268+24
 4303 0050 1A60     		str	r2, [r3]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 4304              		.loc 1 2609 0
 4305 0052 0A4B     		ldr	r3, .L268+24
 4306 0054 1B68     		ldr	r3, [r3]
 4307 0056 DA03     		lsl	r2, r3, #15
 4308 0058 094B     		ldr	r3, .L268+28
 4309 005a 1A60     		str	r2, [r3]
2610:Generated_Source\PSoC4/CyLib.c **** }
 4310              		.loc 1 2610 0
 4311 005c BD46     		mov	sp, r7
 4312 005e 02B0     		add	sp, sp, #8
 4313              		@ sp needed
 4314 0060 80BD     		pop	{r7, pc}
 4315              	.L269:
 4316 0062 C046     		.align	2
 4317              	.L268:
 4318 0064 00000000 		.word	cydelayFreqHz
 4319 0068 00366E01 		.word	24000000
 4320 006c 3F420F00 		.word	999999
 4321 0070 40420F00 		.word	1000000
 4322 0074 00000000 		.word	cydelayFreqMhz
 4323 0078 E7030000 		.word	999
 4324 007c 00000000 		.word	cydelayFreqKhz
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 123


 4325 0080 00000000 		.word	cydelay32kMs
 4326              		.cfi_endproc
 4327              	.LFE52:
 4328              		.size	CyDelayFreq, .-CyDelayFreq
 4329              		.section	.text.CySysTickStart,"ax",%progbits
 4330              		.align	2
 4331              		.global	CySysTickStart
 4332              		.code	16
 4333              		.thumb_func
 4334              		.type	CySysTickStart, %function
 4335              	CySysTickStart:
 4336              	.LFB53:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
 4337              		.loc 1 2629 0
 4338              		.cfi_startproc
 4339 0000 80B5     		push	{r7, lr}
 4340              		.cfi_def_cfa_offset 8
 4341              		.cfi_offset 7, -8
 4342              		.cfi_offset 14, -4
 4343 0002 00AF     		add	r7, sp, #0
 4344              		.cfi_def_cfa_register 7
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 4345              		.loc 1 2630 0
 4346 0004 064B     		ldr	r3, .L272
 4347 0006 1B68     		ldr	r3, [r3]
 4348 0008 002B     		cmp	r3, #0
 4349 000a 04D1     		bne	.L271
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 4350              		.loc 1 2632 0
 4351 000c FFF7FEFF 		bl	CySysTickInit
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 4352              		.loc 1 2633 0
 4353 0010 034B     		ldr	r3, .L272
 4354 0012 0122     		mov	r2, #1
 4355 0014 1A60     		str	r2, [r3]
 4356              	.L271:
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 124


2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 4357              		.loc 1 2636 0
 4358 0016 FFF7FEFF 		bl	CySysTickEnable
2637:Generated_Source\PSoC4/CyLib.c **** }
 4359              		.loc 1 2637 0
 4360 001a BD46     		mov	sp, r7
 4361              		@ sp needed
 4362 001c 80BD     		pop	{r7, pc}
 4363              	.L273:
 4364 001e C046     		.align	2
 4365              	.L272:
 4366 0020 00000000 		.word	CySysTickInitVar
 4367              		.cfi_endproc
 4368              	.LFE53:
 4369              		.size	CySysTickStart, .-CySysTickStart
 4370              		.section	.text.CySysTickInit,"ax",%progbits
 4371              		.align	2
 4372              		.global	CySysTickInit
 4373              		.code	16
 4374              		.thumb_func
 4375              		.type	CySysTickInit, %function
 4376              	CySysTickInit:
 4377              	.LFB54:
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
 4378              		.loc 1 2658 0
 4379              		.cfi_startproc
 4380 0000 80B5     		push	{r7, lr}
 4381              		.cfi_def_cfa_offset 8
 4382              		.cfi_offset 7, -8
 4383              		.cfi_offset 14, -4
 4384 0002 82B0     		sub	sp, sp, #8
 4385              		.cfi_def_cfa_offset 16
 4386 0004 00AF     		add	r7, sp, #0
 4387              		.cfi_def_cfa_register 7
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 125


 4388              		.loc 1 2661 0
 4389 0006 0023     		mov	r3, #0
 4390 0008 7B60     		str	r3, [r7, #4]
 4391 000a 07E0     		b	.L275
 4392              	.L276:
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 4393              		.loc 1 2663 0 discriminator 3
 4394 000c 124B     		ldr	r3, .L277
 4395 000e 7A68     		ldr	r2, [r7, #4]
 4396 0010 9200     		lsl	r2, r2, #2
 4397 0012 0021     		mov	r1, #0
 4398 0014 D150     		str	r1, [r2, r3]
2661:Generated_Source\PSoC4/CyLib.c ****     {
 4399              		.loc 1 2661 0 discriminator 3
 4400 0016 7B68     		ldr	r3, [r7, #4]
 4401 0018 0133     		add	r3, r3, #1
 4402 001a 7B60     		str	r3, [r7, #4]
 4403              	.L275:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 4404              		.loc 1 2661 0 is_stmt 0 discriminator 1
 4405 001c 7B68     		ldr	r3, [r7, #4]
 4406 001e 042B     		cmp	r3, #4
 4407 0020 F4D9     		bls	.L276
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 4408              		.loc 1 2666 0 is_stmt 1
 4409 0022 0E4B     		ldr	r3, .L277+4
 4410 0024 0F20     		mov	r0, #15
 4411 0026 191C     		mov	r1, r3
 4412 0028 FFF7FEFF 		bl	CyIntSetSysVector
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
 4413              		.loc 1 2669 0
 4414 002c 0120     		mov	r0, #1
 4415 002e FFF7FEFF 		bl	CySysTickSetClockSource
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 4416              		.loc 1 2672 0
 4417 0032 0B4B     		ldr	r3, .L277+8
 4418 0034 1B68     		ldr	r3, [r3]
 4419 0036 181C     		mov	r0, r3
 4420 0038 FA23     		mov	r3, #250
 4421 003a 9900     		lsl	r1, r3, #2
 4422 003c FFF7FEFF 		bl	__aeabi_uidiv
 4423 0040 031C     		mov	r3, r0
 4424 0042 181C     		mov	r0, r3
 4425 0044 FFF7FEFF 		bl	CySysTickSetReload
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 4426              		.loc 1 2673 0
 4427 0048 FFF7FEFF 		bl	CySysTickClear
2674:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 4428              		.loc 1 2674 0
 4429 004c 0F20     		mov	r0, #15
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 126


 4430 004e FFF7FEFF 		bl	CyIntEnable
2675:Generated_Source\PSoC4/CyLib.c **** }
 4431              		.loc 1 2675 0
 4432 0052 BD46     		mov	sp, r7
 4433 0054 02B0     		add	sp, sp, #8
 4434              		@ sp needed
 4435 0056 80BD     		pop	{r7, pc}
 4436              	.L278:
 4437              		.align	2
 4438              	.L277:
 4439 0058 00000000 		.word	CySysTickCallbacks
 4440 005c 00000000 		.word	CySysTickServiceCallbacks
 4441 0060 00000000 		.word	cydelayFreqHz
 4442              		.cfi_endproc
 4443              	.LFE54:
 4444              		.size	CySysTickInit, .-CySysTickInit
 4445              		.section	.text.CySysTickEnable,"ax",%progbits
 4446              		.align	2
 4447              		.global	CySysTickEnable
 4448              		.code	16
 4449              		.thumb_func
 4450              		.type	CySysTickEnable, %function
 4451              	CySysTickEnable:
 4452              	.LFB55:
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** 
2678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2681:Generated_Source\PSoC4/CyLib.c **** *
2682:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2685:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2688:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2689:Generated_Source\PSoC4/CyLib.c **** {
 4453              		.loc 1 2689 0
 4454              		.cfi_startproc
 4455 0000 80B5     		push	{r7, lr}
 4456              		.cfi_def_cfa_offset 8
 4457              		.cfi_offset 7, -8
 4458              		.cfi_offset 14, -4
 4459 0002 00AF     		add	r7, sp, #0
 4460              		.cfi_def_cfa_register 7
2690:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 4461              		.loc 1 2690 0
 4462 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2691:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 4463              		.loc 1 2691 0
 4464 0008 034B     		ldr	r3, .L280
 4465 000a 034A     		ldr	r2, .L280
 4466 000c 1268     		ldr	r2, [r2]
 4467 000e 0121     		mov	r1, #1
 4468 0010 0A43     		orr	r2, r1
 4469 0012 1A60     		str	r2, [r3]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 127


2692:Generated_Source\PSoC4/CyLib.c **** }
 4470              		.loc 1 2692 0
 4471 0014 BD46     		mov	sp, r7
 4472              		@ sp needed
 4473 0016 80BD     		pop	{r7, pc}
 4474              	.L281:
 4475              		.align	2
 4476              	.L280:
 4477 0018 10E000E0 		.word	-536813552
 4478              		.cfi_endproc
 4479              	.LFE55:
 4480              		.size	CySysTickEnable, .-CySysTickEnable
 4481              		.section	.text.CySysTickStop,"ax",%progbits
 4482              		.align	2
 4483              		.global	CySysTickStop
 4484              		.code	16
 4485              		.thumb_func
 4486              		.type	CySysTickStop, %function
 4487              	CySysTickStop:
 4488              	.LFB56:
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2696:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2697:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2698:Generated_Source\PSoC4/CyLib.c **** *
2699:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2702:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2705:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2706:Generated_Source\PSoC4/CyLib.c **** {
 4489              		.loc 1 2706 0
 4490              		.cfi_startproc
 4491 0000 80B5     		push	{r7, lr}
 4492              		.cfi_def_cfa_offset 8
 4493              		.cfi_offset 7, -8
 4494              		.cfi_offset 14, -4
 4495 0002 00AF     		add	r7, sp, #0
 4496              		.cfi_def_cfa_register 7
2707:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 4497              		.loc 1 2707 0
 4498 0004 034B     		ldr	r3, .L283
 4499 0006 034A     		ldr	r2, .L283
 4500 0008 1268     		ldr	r2, [r2]
 4501 000a 0121     		mov	r1, #1
 4502 000c 8A43     		bic	r2, r1
 4503 000e 1A60     		str	r2, [r3]
2708:Generated_Source\PSoC4/CyLib.c **** }
 4504              		.loc 1 2708 0
 4505 0010 BD46     		mov	sp, r7
 4506              		@ sp needed
 4507 0012 80BD     		pop	{r7, pc}
 4508              	.L284:
 4509              		.align	2
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 128


 4510              	.L283:
 4511 0014 10E000E0 		.word	-536813552
 4512              		.cfi_endproc
 4513              	.LFE56:
 4514              		.size	CySysTickStop, .-CySysTickStop
 4515              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 4516              		.align	2
 4517              		.global	CySysTickEnableInterrupt
 4518              		.code	16
 4519              		.thumb_func
 4520              		.type	CySysTickEnableInterrupt, %function
 4521              	CySysTickEnableInterrupt:
 4522              	.LFB57:
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** 
2711:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2712:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2713:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2718:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2719:Generated_Source\PSoC4/CyLib.c **** *
2720:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2722:Generated_Source\PSoC4/CyLib.c **** {
 4523              		.loc 1 2722 0
 4524              		.cfi_startproc
 4525 0000 80B5     		push	{r7, lr}
 4526              		.cfi_def_cfa_offset 8
 4527              		.cfi_offset 7, -8
 4528              		.cfi_offset 14, -4
 4529 0002 00AF     		add	r7, sp, #0
 4530              		.cfi_def_cfa_register 7
2723:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 4531              		.loc 1 2723 0
 4532 0004 034B     		ldr	r3, .L286
 4533 0006 034A     		ldr	r2, .L286
 4534 0008 1268     		ldr	r2, [r2]
 4535 000a 0221     		mov	r1, #2
 4536 000c 0A43     		orr	r2, r1
 4537 000e 1A60     		str	r2, [r3]
2724:Generated_Source\PSoC4/CyLib.c **** }
 4538              		.loc 1 2724 0
 4539 0010 BD46     		mov	sp, r7
 4540              		@ sp needed
 4541 0012 80BD     		pop	{r7, pc}
 4542              	.L287:
 4543              		.align	2
 4544              	.L286:
 4545 0014 10E000E0 		.word	-536813552
 4546              		.cfi_endproc
 4547              	.LFE57:
 4548              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 4549              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 4550              		.align	2
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 129


 4551              		.global	CySysTickDisableInterrupt
 4552              		.code	16
 4553              		.thumb_func
 4554              		.type	CySysTickDisableInterrupt, %function
 4555              	CySysTickDisableInterrupt:
 4556              	.LFB58:
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** 
2727:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2728:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2729:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2732:Generated_Source\PSoC4/CyLib.c **** *
2733:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2734:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2735:Generated_Source\PSoC4/CyLib.c **** *
2736:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2737:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2738:Generated_Source\PSoC4/CyLib.c **** {
 4557              		.loc 1 2738 0
 4558              		.cfi_startproc
 4559 0000 80B5     		push	{r7, lr}
 4560              		.cfi_def_cfa_offset 8
 4561              		.cfi_offset 7, -8
 4562              		.cfi_offset 14, -4
 4563 0002 00AF     		add	r7, sp, #0
 4564              		.cfi_def_cfa_register 7
2739:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 4565              		.loc 1 2739 0
 4566 0004 034B     		ldr	r3, .L289
 4567 0006 034A     		ldr	r2, .L289
 4568 0008 1268     		ldr	r2, [r2]
 4569 000a 0221     		mov	r1, #2
 4570 000c 8A43     		bic	r2, r1
 4571 000e 1A60     		str	r2, [r3]
2740:Generated_Source\PSoC4/CyLib.c **** }
 4572              		.loc 1 2740 0
 4573 0010 BD46     		mov	sp, r7
 4574              		@ sp needed
 4575 0012 80BD     		pop	{r7, pc}
 4576              	.L290:
 4577              		.align	2
 4578              	.L289:
 4579 0014 10E000E0 		.word	-536813552
 4580              		.cfi_endproc
 4581              	.LFE58:
 4582              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 4583              		.section	.text.CySysTickSetReload,"ax",%progbits
 4584              		.align	2
 4585              		.global	CySysTickSetReload
 4586              		.code	16
 4587              		.thumb_func
 4588              		.type	CySysTickSetReload, %function
 4589              	CySysTickSetReload:
 4590              	.LFB59:
2741:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 130


2742:Generated_Source\PSoC4/CyLib.c **** 
2743:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2744:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2745:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2746:Generated_Source\PSoC4/CyLib.c **** *
2747:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2748:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2749:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2752:Generated_Source\PSoC4/CyLib.c **** *
2753:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2755:Generated_Source\PSoC4/CyLib.c **** {
 4591              		.loc 1 2755 0
 4592              		.cfi_startproc
 4593 0000 80B5     		push	{r7, lr}
 4594              		.cfi_def_cfa_offset 8
 4595              		.cfi_offset 7, -8
 4596              		.cfi_offset 14, -4
 4597 0002 82B0     		sub	sp, sp, #8
 4598              		.cfi_def_cfa_offset 16
 4599 0004 00AF     		add	r7, sp, #0
 4600              		.cfi_def_cfa_register 7
 4601 0006 7860     		str	r0, [r7, #4]
2756:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 4602              		.loc 1 2756 0
 4603 0008 034B     		ldr	r3, .L292
 4604 000a 7A68     		ldr	r2, [r7, #4]
 4605 000c 1202     		lsl	r2, r2, #8
 4606 000e 120A     		lsr	r2, r2, #8
 4607 0010 1A60     		str	r2, [r3]
2757:Generated_Source\PSoC4/CyLib.c **** }
 4608              		.loc 1 2757 0
 4609 0012 BD46     		mov	sp, r7
 4610 0014 02B0     		add	sp, sp, #8
 4611              		@ sp needed
 4612 0016 80BD     		pop	{r7, pc}
 4613              	.L293:
 4614              		.align	2
 4615              	.L292:
 4616 0018 14E000E0 		.word	-536813548
 4617              		.cfi_endproc
 4618              	.LFE59:
 4619              		.size	CySysTickSetReload, .-CySysTickSetReload
 4620              		.section	.text.CySysTickGetReload,"ax",%progbits
 4621              		.align	2
 4622              		.global	CySysTickGetReload
 4623              		.code	16
 4624              		.thumb_func
 4625              		.type	CySysTickGetReload, %function
 4626              	CySysTickGetReload:
 4627              	.LFB60:
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 131


2762:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \return
2767:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2771:Generated_Source\PSoC4/CyLib.c **** {
 4628              		.loc 1 2771 0
 4629              		.cfi_startproc
 4630 0000 80B5     		push	{r7, lr}
 4631              		.cfi_def_cfa_offset 8
 4632              		.cfi_offset 7, -8
 4633              		.cfi_offset 14, -4
 4634 0002 00AF     		add	r7, sp, #0
 4635              		.cfi_def_cfa_register 7
2772:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 4636              		.loc 1 2772 0
 4637 0004 034B     		ldr	r3, .L296
 4638 0006 1B68     		ldr	r3, [r3]
 4639 0008 1B02     		lsl	r3, r3, #8
 4640 000a 1B0A     		lsr	r3, r3, #8
2773:Generated_Source\PSoC4/CyLib.c **** }
 4641              		.loc 1 2773 0
 4642 000c 181C     		mov	r0, r3
 4643 000e BD46     		mov	sp, r7
 4644              		@ sp needed
 4645 0010 80BD     		pop	{r7, pc}
 4646              	.L297:
 4647 0012 C046     		.align	2
 4648              	.L296:
 4649 0014 14E000E0 		.word	-536813548
 4650              		.cfi_endproc
 4651              	.LFE60:
 4652              		.size	CySysTickGetReload, .-CySysTickGetReload
 4653              		.section	.text.CySysTickGetValue,"ax",%progbits
 4654              		.align	2
 4655              		.global	CySysTickGetValue
 4656              		.code	16
 4657              		.thumb_func
 4658              		.type	CySysTickGetValue, %function
 4659              	CySysTickGetValue:
 4660              	.LFB61:
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** * \return
2783:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2784:Generated_Source\PSoC4/CyLib.c **** *
2785:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 132


2786:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2787:Generated_Source\PSoC4/CyLib.c **** {
 4661              		.loc 1 2787 0
 4662              		.cfi_startproc
 4663 0000 80B5     		push	{r7, lr}
 4664              		.cfi_def_cfa_offset 8
 4665              		.cfi_offset 7, -8
 4666              		.cfi_offset 14, -4
 4667 0002 00AF     		add	r7, sp, #0
 4668              		.cfi_def_cfa_register 7
2788:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 4669              		.loc 1 2788 0
 4670 0004 034B     		ldr	r3, .L300
 4671 0006 1B68     		ldr	r3, [r3]
 4672 0008 1B02     		lsl	r3, r3, #8
 4673 000a 1B0A     		lsr	r3, r3, #8
2789:Generated_Source\PSoC4/CyLib.c **** }
 4674              		.loc 1 2789 0
 4675 000c 181C     		mov	r0, r3
 4676 000e BD46     		mov	sp, r7
 4677              		@ sp needed
 4678 0010 80BD     		pop	{r7, pc}
 4679              	.L301:
 4680 0012 C046     		.align	2
 4681              	.L300:
 4682 0014 18E000E0 		.word	-536813544
 4683              		.cfi_endproc
 4684              	.LFE61:
 4685              		.size	CySysTickGetValue, .-CySysTickGetValue
 4686              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 4687              		.align	2
 4688              		.global	CySysTickSetClockSource
 4689              		.code	16
 4690              		.thumb_func
 4691              		.type	CySysTickSetClockSource, %function
 4692              	CySysTickSetClockSource:
 4693              	.LFB62:
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** 
2792:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2793:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2794:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2795:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2796:Generated_Source\PSoC4/CyLib.c ****     *
2797:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2798:Generated_Source\PSoC4/CyLib.c ****     *
2799:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2800:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2801:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2802:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2803:Generated_Source\PSoC4/CyLib.c ****     *
2804:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2805:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2806:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2807:Generated_Source\PSoC4/CyLib.c ****     *
2808:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2809:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 133


2810:Generated_Source\PSoC4/CyLib.c ****     *
2811:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2812:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2814:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2816:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2817:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2818:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2819:Generated_Source\PSoC4/CyLib.c ****     {
 4694              		.loc 1 2819 0
 4695              		.cfi_startproc
 4696 0000 80B5     		push	{r7, lr}
 4697              		.cfi_def_cfa_offset 8
 4698              		.cfi_offset 7, -8
 4699              		.cfi_offset 14, -4
 4700 0002 82B0     		sub	sp, sp, #8
 4701              		.cfi_def_cfa_offset 16
 4702 0004 00AF     		add	r7, sp, #0
 4703              		.cfi_def_cfa_register 7
 4704 0006 7860     		str	r0, [r7, #4]
2820:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 4705              		.loc 1 2820 0
 4706 0008 7B68     		ldr	r3, [r7, #4]
 4707 000a 012B     		cmp	r3, #1
 4708 000c 06D1     		bne	.L303
2821:Generated_Source\PSoC4/CyLib.c ****         {
2822:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 4709              		.loc 1 2822 0
 4710 000e 084B     		ldr	r3, .L305
 4711 0010 074A     		ldr	r2, .L305
 4712 0012 1268     		ldr	r2, [r2]
 4713 0014 0421     		mov	r1, #4
 4714 0016 0A43     		orr	r2, r1
 4715 0018 1A60     		str	r2, [r3]
 4716 001a 05E0     		b	.L302
 4717              	.L303:
2823:Generated_Source\PSoC4/CyLib.c ****         }
2824:Generated_Source\PSoC4/CyLib.c ****         else
2825:Generated_Source\PSoC4/CyLib.c ****         {
2826:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 4718              		.loc 1 2826 0
 4719 001c 044B     		ldr	r3, .L305
 4720 001e 044A     		ldr	r2, .L305
 4721 0020 1268     		ldr	r2, [r2]
 4722 0022 0421     		mov	r1, #4
 4723 0024 8A43     		bic	r2, r1
 4724 0026 1A60     		str	r2, [r3]
 4725              	.L302:
2827:Generated_Source\PSoC4/CyLib.c ****         }
2828:Generated_Source\PSoC4/CyLib.c ****     }
 4726              		.loc 1 2828 0
 4727 0028 BD46     		mov	sp, r7
 4728 002a 02B0     		add	sp, sp, #8
 4729              		@ sp needed
 4730 002c 80BD     		pop	{r7, pc}
 4731              	.L306:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 134


 4732 002e C046     		.align	2
 4733              	.L305:
 4734 0030 10E000E0 		.word	-536813552
 4735              		.cfi_endproc
 4736              	.LFE62:
 4737              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 4738              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 4739              		.align	2
 4740              		.global	CySysTickGetClockSource
 4741              		.code	16
 4742              		.thumb_func
 4743              		.type	CySysTickGetClockSource, %function
 4744              	CySysTickGetClockSource:
 4745              	.LFB63:
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     
2831:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2832:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2833:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2834:Generated_Source\PSoC4/CyLib.c ****     *
2835:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2836:Generated_Source\PSoC4/CyLib.c ****     *
2837:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2839:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2841:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2842:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2843:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2844:Generated_Source\PSoC4/CyLib.c ****     {
 4746              		.loc 1 2844 0
 4747              		.cfi_startproc
 4748 0000 80B5     		push	{r7, lr}
 4749              		.cfi_def_cfa_offset 8
 4750              		.cfi_offset 7, -8
 4751              		.cfi_offset 14, -4
 4752 0002 00AF     		add	r7, sp, #0
 4753              		.cfi_def_cfa_register 7
2845:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 4754              		.loc 1 2845 0
 4755 0004 034B     		ldr	r3, .L309
 4756 0006 1B68     		ldr	r3, [r3]
 4757 0008 9B08     		lsr	r3, r3, #2
 4758 000a 0122     		mov	r2, #1
 4759 000c 1340     		and	r3, r2
2846:Generated_Source\PSoC4/CyLib.c ****     }
 4760              		.loc 1 2846 0
 4761 000e 181C     		mov	r0, r3
 4762 0010 BD46     		mov	sp, r7
 4763              		@ sp needed
 4764 0012 80BD     		pop	{r7, pc}
 4765              	.L310:
 4766              		.align	2
 4767              	.L309:
 4768 0014 10E000E0 		.word	-536813552
 4769              		.cfi_endproc
 4770              	.LFE63:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 135


 4771              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 4772              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 4773              		.align	2
 4774              		.global	CySysTickGetCountFlag
 4775              		.code	16
 4776              		.thumb_func
 4777              		.type	CySysTickGetCountFlag, %function
 4778              	CySysTickGetCountFlag:
 4779              	.LFB64:
2847:Generated_Source\PSoC4/CyLib.c ****     
2848:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** 
2851:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2852:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2853:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2854:Generated_Source\PSoC4/CyLib.c **** *
2855:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2856:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2857:Generated_Source\PSoC4/CyLib.c **** *
2858:Generated_Source\PSoC4/CyLib.c **** * \return
2859:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2863:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2864:Generated_Source\PSoC4/CyLib.c **** *
2865:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2866:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2867:Generated_Source\PSoC4/CyLib.c **** {
 4780              		.loc 1 2867 0
 4781              		.cfi_startproc
 4782 0000 80B5     		push	{r7, lr}
 4783              		.cfi_def_cfa_offset 8
 4784              		.cfi_offset 7, -8
 4785              		.cfi_offset 14, -4
 4786 0002 00AF     		add	r7, sp, #0
 4787              		.cfi_def_cfa_register 7
2868:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 4788              		.loc 1 2868 0
 4789 0004 034B     		ldr	r3, .L313
 4790 0006 1B68     		ldr	r3, [r3]
 4791 0008 1B0C     		lsr	r3, r3, #16
 4792 000a 0122     		mov	r2, #1
 4793 000c 1340     		and	r3, r2
2869:Generated_Source\PSoC4/CyLib.c **** }
 4794              		.loc 1 2869 0
 4795 000e 181C     		mov	r0, r3
 4796 0010 BD46     		mov	sp, r7
 4797              		@ sp needed
 4798 0012 80BD     		pop	{r7, pc}
 4799              	.L314:
 4800              		.align	2
 4801              	.L313:
 4802 0014 10E000E0 		.word	-536813552
 4803              		.cfi_endproc
 4804              	.LFE64:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 136


 4805              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 4806              		.section	.text.CySysTickClear,"ax",%progbits
 4807              		.align	2
 4808              		.global	CySysTickClear
 4809              		.code	16
 4810              		.thumb_func
 4811              		.type	CySysTickClear, %function
 4812              	CySysTickClear:
 4813              	.LFB65:
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** 
2872:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2873:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2874:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2880:Generated_Source\PSoC4/CyLib.c **** {
 4814              		.loc 1 2880 0
 4815              		.cfi_startproc
 4816 0000 80B5     		push	{r7, lr}
 4817              		.cfi_def_cfa_offset 8
 4818              		.cfi_offset 7, -8
 4819              		.cfi_offset 14, -4
 4820 0002 00AF     		add	r7, sp, #0
 4821              		.cfi_def_cfa_register 7
2881:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 4822              		.loc 1 2881 0
 4823 0004 024B     		ldr	r3, .L316
 4824 0006 0022     		mov	r2, #0
 4825 0008 1A60     		str	r2, [r3]
2882:Generated_Source\PSoC4/CyLib.c **** }
 4826              		.loc 1 2882 0
 4827 000a BD46     		mov	sp, r7
 4828              		@ sp needed
 4829 000c 80BD     		pop	{r7, pc}
 4830              	.L317:
 4831 000e C046     		.align	2
 4832              	.L316:
 4833 0010 18E000E0 		.word	-536813544
 4834              		.cfi_endproc
 4835              	.LFE65:
 4836              		.size	CySysTickClear, .-CySysTickClear
 4837              		.section	.text.CySysTickSetCallback,"ax",%progbits
 4838              		.align	2
 4839              		.global	CySysTickSetCallback
 4840              		.code	16
 4841              		.thumb_func
 4842              		.type	CySysTickSetCallback, %function
 4843              	CySysTickSetCallback:
 4844              	.LFB66:
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** 
2885:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2886:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 137


2887:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2888:Generated_Source\PSoC4/CyLib.c **** *
2889:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2890:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2891:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2892:Generated_Source\PSoC4/CyLib.c **** *
2893:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2894:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2895:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2896:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2897:Generated_Source\PSoC4/CyLib.c **** *  functions.
2898:Generated_Source\PSoC4/CyLib.c **** *
2899:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2900:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2903:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2904:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** * \return
2907:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2908:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2909:Generated_Source\PSoC4/CyLib.c **** *
2910:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2911:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2914:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2915:Generated_Source\PSoC4/CyLib.c **** {
 4845              		.loc 1 2915 0
 4846              		.cfi_startproc
 4847 0000 80B5     		push	{r7, lr}
 4848              		.cfi_def_cfa_offset 8
 4849              		.cfi_offset 7, -8
 4850              		.cfi_offset 14, -4
 4851 0002 84B0     		sub	sp, sp, #16
 4852              		.cfi_def_cfa_offset 24
 4853 0004 00AF     		add	r7, sp, #0
 4854              		.cfi_def_cfa_register 7
 4855 0006 7860     		str	r0, [r7, #4]
 4856 0008 3960     		str	r1, [r7]
2916:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2917:Generated_Source\PSoC4/CyLib.c **** 
2918:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 4857              		.loc 1 2918 0
 4858 000a 074B     		ldr	r3, .L320
 4859 000c 7A68     		ldr	r2, [r7, #4]
 4860 000e 9200     		lsl	r2, r2, #2
 4861 0010 D358     		ldr	r3, [r2, r3]
 4862 0012 FB60     		str	r3, [r7, #12]
2919:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 4863              		.loc 1 2919 0
 4864 0014 044B     		ldr	r3, .L320
 4865 0016 7A68     		ldr	r2, [r7, #4]
 4866 0018 9200     		lsl	r2, r2, #2
 4867 001a 3968     		ldr	r1, [r7]
 4868 001c D150     		str	r1, [r2, r3]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 138


2920:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 4869              		.loc 1 2920 0
 4870 001e FB68     		ldr	r3, [r7, #12]
2921:Generated_Source\PSoC4/CyLib.c **** }
 4871              		.loc 1 2921 0
 4872 0020 181C     		mov	r0, r3
 4873 0022 BD46     		mov	sp, r7
 4874 0024 04B0     		add	sp, sp, #16
 4875              		@ sp needed
 4876 0026 80BD     		pop	{r7, pc}
 4877              	.L321:
 4878              		.align	2
 4879              	.L320:
 4880 0028 00000000 		.word	CySysTickCallbacks
 4881              		.cfi_endproc
 4882              	.LFE66:
 4883              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 4884              		.section	.text.CySysTickGetCallback,"ax",%progbits
 4885              		.align	2
 4886              		.global	CySysTickGetCallback
 4887              		.code	16
 4888              		.thumb_func
 4889              		.type	CySysTickGetCallback, %function
 4890              	CySysTickGetCallback:
 4891              	.LFB67:
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** 
2924:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2925:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2926:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2927:Generated_Source\PSoC4/CyLib.c **** *
2928:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2929:Generated_Source\PSoC4/CyLib.c **** *
2930:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2931:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2932:Generated_Source\PSoC4/CyLib.c **** *
2933:Generated_Source\PSoC4/CyLib.c **** * \return
2934:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2935:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2938:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2939:Generated_Source\PSoC4/CyLib.c **** {
 4892              		.loc 1 2939 0
 4893              		.cfi_startproc
 4894 0000 80B5     		push	{r7, lr}
 4895              		.cfi_def_cfa_offset 8
 4896              		.cfi_offset 7, -8
 4897              		.cfi_offset 14, -4
 4898 0002 82B0     		sub	sp, sp, #8
 4899              		.cfi_def_cfa_offset 16
 4900 0004 00AF     		add	r7, sp, #0
 4901              		.cfi_def_cfa_register 7
 4902 0006 7860     		str	r0, [r7, #4]
2940:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 4903              		.loc 1 2940 0
 4904 0008 034B     		ldr	r3, .L324
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 139


 4905 000a 7A68     		ldr	r2, [r7, #4]
 4906 000c 9200     		lsl	r2, r2, #2
 4907 000e D358     		ldr	r3, [r2, r3]
2941:Generated_Source\PSoC4/CyLib.c **** }
 4908              		.loc 1 2941 0
 4909 0010 181C     		mov	r0, r3
 4910 0012 BD46     		mov	sp, r7
 4911 0014 02B0     		add	sp, sp, #8
 4912              		@ sp needed
 4913 0016 80BD     		pop	{r7, pc}
 4914              	.L325:
 4915              		.align	2
 4916              	.L324:
 4917 0018 00000000 		.word	CySysTickCallbacks
 4918              		.cfi_endproc
 4919              	.LFE67:
 4920              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 4921              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 4922              		.align	2
 4923              		.code	16
 4924              		.thumb_func
 4925              		.type	CySysTickServiceCallbacks, %function
 4926              	CySysTickServiceCallbacks:
 4927              	.LFB68:
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2945:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2946:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2947:Generated_Source\PSoC4/CyLib.c **** *
2948:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2949:Generated_Source\PSoC4/CyLib.c **** *
2950:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2951:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2952:Generated_Source\PSoC4/CyLib.c **** {
 4928              		.loc 1 2952 0
 4929              		.cfi_startproc
 4930 0000 80B5     		push	{r7, lr}
 4931              		.cfi_def_cfa_offset 8
 4932              		.cfi_offset 7, -8
 4933              		.cfi_offset 14, -4
 4934 0002 82B0     		sub	sp, sp, #8
 4935              		.cfi_def_cfa_offset 16
 4936 0004 00AF     		add	r7, sp, #0
 4937              		.cfi_def_cfa_register 7
2953:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2954:Generated_Source\PSoC4/CyLib.c **** 
2955:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2956:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 4938              		.loc 1 2956 0
 4939 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 4940 000a 031E     		sub	r3, r0, #0
 4941 000c 012B     		cmp	r3, #1
 4942 000e 13D1     		bne	.L326
2957:Generated_Source\PSoC4/CyLib.c ****     {
2958:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 4943              		.loc 1 2958 0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 140


 4944 0010 0023     		mov	r3, #0
 4945 0012 7B60     		str	r3, [r7, #4]
 4946 0014 0DE0     		b	.L328
 4947              	.L330:
2959:Generated_Source\PSoC4/CyLib.c ****         {
2960:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 4948              		.loc 1 2960 0
 4949 0016 0A4B     		ldr	r3, .L331
 4950 0018 7A68     		ldr	r2, [r7, #4]
 4951 001a 9200     		lsl	r2, r2, #2
 4952 001c D358     		ldr	r3, [r2, r3]
 4953 001e 002B     		cmp	r3, #0
 4954 0020 04D0     		beq	.L329
2961:Generated_Source\PSoC4/CyLib.c ****             {
2962:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 4955              		.loc 1 2962 0
 4956 0022 074B     		ldr	r3, .L331
 4957 0024 7A68     		ldr	r2, [r7, #4]
 4958 0026 9200     		lsl	r2, r2, #2
 4959 0028 D358     		ldr	r3, [r2, r3]
 4960 002a 9847     		blx	r3
 4961              	.L329:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 4962              		.loc 1 2958 0 discriminator 2
 4963 002c 7B68     		ldr	r3, [r7, #4]
 4964 002e 0133     		add	r3, r3, #1
 4965 0030 7B60     		str	r3, [r7, #4]
 4966              	.L328:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 4967              		.loc 1 2958 0 is_stmt 0 discriminator 1
 4968 0032 7B68     		ldr	r3, [r7, #4]
 4969 0034 042B     		cmp	r3, #4
 4970 0036 EED9     		bls	.L330
 4971              	.L326:
2963:Generated_Source\PSoC4/CyLib.c ****             }
2964:Generated_Source\PSoC4/CyLib.c ****         }
2965:Generated_Source\PSoC4/CyLib.c ****     }
2966:Generated_Source\PSoC4/CyLib.c **** }
 4972              		.loc 1 2966 0 is_stmt 1
 4973 0038 BD46     		mov	sp, r7
 4974 003a 02B0     		add	sp, sp, #8
 4975              		@ sp needed
 4976 003c 80BD     		pop	{r7, pc}
 4977              	.L332:
 4978 003e C046     		.align	2
 4979              	.L331:
 4980 0040 00000000 		.word	CySysTickCallbacks
 4981              		.cfi_endproc
 4982              	.LFE68:
 4983              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 4984              		.section	.text.CyGetUniqueId,"ax",%progbits
 4985              		.align	2
 4986              		.global	CyGetUniqueId
 4987              		.code	16
 4988              		.thumb_func
 4989              		.type	CyGetUniqueId, %function
 4990              	CyGetUniqueId:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 141


 4991              	.LFB69:
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** 
2969:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2970:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2971:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2972:Generated_Source\PSoC4/CyLib.c **** *
2973:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2974:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2975:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2976:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2979:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2980:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2983:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2984:Generated_Source\PSoC4/CyLib.c **** {
 4992              		.loc 1 2984 0
 4993              		.cfi_startproc
 4994 0000 80B5     		push	{r7, lr}
 4995              		.cfi_def_cfa_offset 8
 4996              		.cfi_offset 7, -8
 4997              		.cfi_offset 14, -4
 4998 0002 82B0     		sub	sp, sp, #8
 4999              		.cfi_def_cfa_offset 16
 5000 0004 00AF     		add	r7, sp, #0
 5001              		.cfi_def_cfa_register 7
 5002 0006 7860     		str	r0, [r7, #4]
2985:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 5003              		.loc 1 2986 0
 5004 0008 254B     		ldr	r3, .L334
 5005 000a 1B78     		ldrb	r3, [r3]
 5006 000c DBB2     		uxtb	r3, r3
 5007 000e 1A1C     		mov	r2, r3
 5008 0010 7B68     		ldr	r3, [r7, #4]
 5009 0012 1A60     		str	r2, [r3]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 5010              		.loc 1 2987 0
 5011 0014 234B     		ldr	r3, .L334+4
 5012 0016 1B78     		ldrb	r3, [r3]
 5013 0018 DBB2     		uxtb	r3, r3
 5014 001a 1A02     		lsl	r2, r3, #8
 5015 001c 7B68     		ldr	r3, [r7, #4]
 5016 001e 1B68     		ldr	r3, [r3]
 5017 0020 1A43     		orr	r2, r3
 5018 0022 7B68     		ldr	r3, [r7, #4]
 5019 0024 1A60     		str	r2, [r3]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 5020              		.loc 1 2988 0
 5021 0026 204B     		ldr	r3, .L334+8
 5022 0028 1B78     		ldrb	r3, [r3]
 5023 002a DBB2     		uxtb	r3, r3
 5024 002c 1A04     		lsl	r2, r3, #16
 5025 002e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 142


 5026 0030 1B68     		ldr	r3, [r3]
 5027 0032 1A43     		orr	r2, r3
 5028 0034 7B68     		ldr	r3, [r7, #4]
 5029 0036 1A60     		str	r2, [r3]
2989:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 5030              		.loc 1 2989 0
 5031 0038 1C4B     		ldr	r3, .L334+12
 5032 003a 1B78     		ldrb	r3, [r3]
 5033 003c DBB2     		uxtb	r3, r3
 5034 003e 1A06     		lsl	r2, r3, #24
 5035 0040 7B68     		ldr	r3, [r7, #4]
 5036 0042 1B68     		ldr	r3, [r3]
 5037 0044 1A43     		orr	r2, r3
 5038 0046 7B68     		ldr	r3, [r7, #4]
 5039 0048 1A60     		str	r2, [r3]
2990:Generated_Source\PSoC4/CyLib.c **** 
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 5040              		.loc 1 2991 0
 5041 004a 7B68     		ldr	r3, [r7, #4]
 5042 004c 0433     		add	r3, r3, #4
 5043 004e 184A     		ldr	r2, .L334+16
 5044 0050 1278     		ldrb	r2, [r2]
 5045 0052 D2B2     		uxtb	r2, r2
 5046 0054 1A60     		str	r2, [r3]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 5047              		.loc 1 2992 0
 5048 0056 174B     		ldr	r3, .L334+20
 5049 0058 1B78     		ldrb	r3, [r3]
 5050 005a DBB2     		uxtb	r3, r3
 5051 005c 1902     		lsl	r1, r3, #8
 5052 005e 7B68     		ldr	r3, [r7, #4]
 5053 0060 0433     		add	r3, r3, #4
 5054 0062 7A68     		ldr	r2, [r7, #4]
 5055 0064 0432     		add	r2, r2, #4
 5056 0066 1268     		ldr	r2, [r2]
 5057 0068 0A43     		orr	r2, r1
 5058 006a 1A60     		str	r2, [r3]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 5059              		.loc 1 2993 0
 5060 006c 124B     		ldr	r3, .L334+24
 5061 006e 1B78     		ldrb	r3, [r3]
 5062 0070 DBB2     		uxtb	r3, r3
 5063 0072 1904     		lsl	r1, r3, #16
 5064 0074 7B68     		ldr	r3, [r7, #4]
 5065 0076 0433     		add	r3, r3, #4
 5066 0078 7A68     		ldr	r2, [r7, #4]
 5067 007a 0432     		add	r2, r2, #4
 5068 007c 1268     		ldr	r2, [r2]
 5069 007e 0A43     		orr	r2, r1
 5070 0080 1A60     		str	r2, [r3]
2994:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 5071              		.loc 1 2994 0
 5072 0082 0E4B     		ldr	r3, .L334+28
 5073 0084 1B78     		ldrb	r3, [r3]
 5074 0086 DBB2     		uxtb	r3, r3
 5075 0088 1906     		lsl	r1, r3, #24
 5076 008a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 143


 5077 008c 0433     		add	r3, r3, #4
 5078 008e 7A68     		ldr	r2, [r7, #4]
 5079 0090 0432     		add	r2, r2, #4
 5080 0092 1268     		ldr	r2, [r2]
 5081 0094 0A43     		orr	r2, r1
 5082 0096 1A60     		str	r2, [r3]
2995:Generated_Source\PSoC4/CyLib.c **** #else
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2999:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3000:Generated_Source\PSoC4/CyLib.c **** 
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3004:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3005:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3006:Generated_Source\PSoC4/CyLib.c **** }
 5083              		.loc 1 3006 0
 5084 0098 BD46     		mov	sp, r7
 5085 009a 02B0     		add	sp, sp, #8
 5086              		@ sp needed
 5087 009c 80BD     		pop	{r7, pc}
 5088              	.L335:
 5089 009e C046     		.align	2
 5090              	.L334:
 5091 00a0 78F2FF0F 		.word	268431992
 5092 00a4 79F2FF0F 		.word	268431993
 5093 00a8 7AF2FF0F 		.word	268431994
 5094 00ac 7BF2FF0F 		.word	268431995
 5095 00b0 7CF2FF0F 		.word	268431996
 5096 00b4 7DF2FF0F 		.word	268431997
 5097 00b8 7EF2FF0F 		.word	268431998
 5098 00bc 7FF2FF0F 		.word	268431999
 5099              		.cfi_endproc
 5100              	.LFE69:
 5101              		.size	CyGetUniqueId, .-CyGetUniqueId
 5102              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 5103              		.align	2
 5104              		.global	CySysSetRamAccessArbPriority
 5105              		.code	16
 5106              		.thumb_func
 5107              		.type	CySysSetRamAccessArbPriority, %function
 5108              	CySysSetRamAccessArbPriority:
 5109              	.LFB70:
3007:Generated_Source\PSoC4/CyLib.c **** 
3008:Generated_Source\PSoC4/CyLib.c **** 
3009:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3010:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3011:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3012:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3013:Generated_Source\PSoC4/CyLib.c ****     *
3014:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3015:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3016:Generated_Source\PSoC4/CyLib.c ****     *  details.
3017:Generated_Source\PSoC4/CyLib.c ****     *
3018:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 144


3019:Generated_Source\PSoC4/CyLib.c ****     *
3020:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3021:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3022:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3023:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3024:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3025:Generated_Source\PSoC4/CyLib.c ****     *
3026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3027:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3028:Generated_Source\PSoC4/CyLib.c ****     {
 5110              		.loc 1 3028 0
 5111              		.cfi_startproc
 5112 0000 80B5     		push	{r7, lr}
 5113              		.cfi_def_cfa_offset 8
 5114              		.cfi_offset 7, -8
 5115              		.cfi_offset 14, -4
 5116 0002 84B0     		sub	sp, sp, #16
 5117              		.cfi_def_cfa_offset 24
 5118 0004 00AF     		add	r7, sp, #0
 5119              		.cfi_def_cfa_register 7
 5120 0006 7860     		str	r0, [r7, #4]
3029:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3030:Generated_Source\PSoC4/CyLib.c **** 
3031:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 5121              		.loc 1 3031 0
 5122 0008 094B     		ldr	r3, .L337
 5123 000a 1B68     		ldr	r3, [r3]
 5124 000c 094A     		ldr	r2, .L337+4
 5125 000e 1340     		and	r3, r2
 5126 0010 FB60     		str	r3, [r7, #12]
3032:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 5127              		.loc 1 3032 0
 5128 0012 7B68     		ldr	r3, [r7, #4]
 5129 0014 5A04     		lsl	r2, r3, #17
 5130 0016 C023     		mov	r3, #192
 5131 0018 DB02     		lsl	r3, r3, #11
 5132 001a 1340     		and	r3, r2
 5133 001c FA68     		ldr	r2, [r7, #12]
 5134 001e 1343     		orr	r3, r2
 5135 0020 FB60     		str	r3, [r7, #12]
3033:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 5136              		.loc 1 3033 0
 5137 0022 034B     		ldr	r3, .L337
 5138 0024 FA68     		ldr	r2, [r7, #12]
 5139 0026 1A60     		str	r2, [r3]
3034:Generated_Source\PSoC4/CyLib.c ****     }
 5140              		.loc 1 3034 0
 5141 0028 BD46     		mov	sp, r7
 5142 002a 04B0     		add	sp, sp, #16
 5143              		@ sp needed
 5144 002c 80BD     		pop	{r7, pc}
 5145              	.L338:
 5146 002e C046     		.align	2
 5147              	.L337:
 5148 0030 38001040 		.word	1074790456
 5149 0034 FFFFF9FF 		.word	-393217
 5150              		.cfi_endproc
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 145


 5151              	.LFE70:
 5152              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 5153              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 5154              		.align	2
 5155              		.global	CySysSetFlashAccessArbPriority
 5156              		.code	16
 5157              		.thumb_func
 5158              		.type	CySysSetFlashAccessArbPriority, %function
 5159              	CySysSetFlashAccessArbPriority:
 5160              	.LFB71:
3035:Generated_Source\PSoC4/CyLib.c **** 
3036:Generated_Source\PSoC4/CyLib.c **** 
3037:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3038:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3039:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3040:Generated_Source\PSoC4/CyLib.c ****     *
3041:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3042:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3043:Generated_Source\PSoC4/CyLib.c ****     *  details.
3044:Generated_Source\PSoC4/CyLib.c ****     *
3045:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3046:Generated_Source\PSoC4/CyLib.c ****     *
3047:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3048:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3049:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3050:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3051:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3052:Generated_Source\PSoC4/CyLib.c ****     *
3053:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3054:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3055:Generated_Source\PSoC4/CyLib.c ****     {
 5161              		.loc 1 3055 0
 5162              		.cfi_startproc
 5163 0000 80B5     		push	{r7, lr}
 5164              		.cfi_def_cfa_offset 8
 5165              		.cfi_offset 7, -8
 5166              		.cfi_offset 14, -4
 5167 0002 84B0     		sub	sp, sp, #16
 5168              		.cfi_def_cfa_offset 24
 5169 0004 00AF     		add	r7, sp, #0
 5170              		.cfi_def_cfa_register 7
 5171 0006 7860     		str	r0, [r7, #4]
3056:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3057:Generated_Source\PSoC4/CyLib.c **** 
3058:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 5172              		.loc 1 3058 0
 5173 0008 094B     		ldr	r3, .L340
 5174 000a 1B68     		ldr	r3, [r3]
 5175 000c 094A     		ldr	r2, .L340+4
 5176 000e 1340     		and	r3, r2
 5177 0010 FB60     		str	r3, [r7, #12]
3059:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 5178              		.loc 1 3059 0
 5179 0012 7B68     		ldr	r3, [r7, #4]
 5180 0014 5A04     		lsl	r2, r3, #17
 5181 0016 C023     		mov	r3, #192
 5182 0018 DB02     		lsl	r3, r3, #11
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 146


 5183 001a 1340     		and	r3, r2
 5184 001c FA68     		ldr	r2, [r7, #12]
 5185 001e 1343     		orr	r3, r2
 5186 0020 FB60     		str	r3, [r7, #12]
3060:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 5187              		.loc 1 3060 0
 5188 0022 034B     		ldr	r3, .L340
 5189 0024 FA68     		ldr	r2, [r7, #12]
 5190 0026 1A60     		str	r2, [r3]
3061:Generated_Source\PSoC4/CyLib.c ****     }
 5191              		.loc 1 3061 0
 5192 0028 BD46     		mov	sp, r7
 5193 002a 04B0     		add	sp, sp, #16
 5194              		@ sp needed
 5195 002c 80BD     		pop	{r7, pc}
 5196              	.L341:
 5197 002e C046     		.align	2
 5198              	.L340:
 5199 0030 30001040 		.word	1074790448
 5200 0034 FFFFF9FF 		.word	-393217
 5201              		.cfi_endproc
 5202              	.LFE71:
 5203              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 5204              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 5205              		.align	2
 5206              		.global	CySysSetDmacAccessArbPriority
 5207              		.code	16
 5208              		.thumb_func
 5209              		.type	CySysSetDmacAccessArbPriority, %function
 5210              	CySysSetDmacAccessArbPriority:
 5211              	.LFB72:
3062:Generated_Source\PSoC4/CyLib.c **** 
3063:Generated_Source\PSoC4/CyLib.c **** 
3064:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3065:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3066:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3067:Generated_Source\PSoC4/CyLib.c ****     *
3068:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3069:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3070:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3071:Generated_Source\PSoC4/CyLib.c ****     *
3072:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3073:Generated_Source\PSoC4/CyLib.c ****     *
3074:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3075:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3076:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3077:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3078:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3079:Generated_Source\PSoC4/CyLib.c ****     *
3080:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3081:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3082:Generated_Source\PSoC4/CyLib.c ****     {
 5212              		.loc 1 3082 0
 5213              		.cfi_startproc
 5214 0000 80B5     		push	{r7, lr}
 5215              		.cfi_def_cfa_offset 8
 5216              		.cfi_offset 7, -8
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 147


 5217              		.cfi_offset 14, -4
 5218 0002 84B0     		sub	sp, sp, #16
 5219              		.cfi_def_cfa_offset 24
 5220 0004 00AF     		add	r7, sp, #0
 5221              		.cfi_def_cfa_register 7
 5222 0006 7860     		str	r0, [r7, #4]
3083:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3084:Generated_Source\PSoC4/CyLib.c **** 
3085:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 5223              		.loc 1 3085 0
 5224 0008 094B     		ldr	r3, .L343
 5225 000a 1B68     		ldr	r3, [r3]
 5226 000c 094A     		ldr	r2, .L343+4
 5227 000e 1340     		and	r3, r2
 5228 0010 FB60     		str	r3, [r7, #12]
3086:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 5229              		.loc 1 3086 0
 5230 0012 7B68     		ldr	r3, [r7, #4]
 5231 0014 5A04     		lsl	r2, r3, #17
 5232 0016 C023     		mov	r3, #192
 5233 0018 DB02     		lsl	r3, r3, #11
 5234 001a 1340     		and	r3, r2
 5235 001c FA68     		ldr	r2, [r7, #12]
 5236 001e 1343     		orr	r3, r2
 5237 0020 FB60     		str	r3, [r7, #12]
3087:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 5238              		.loc 1 3087 0
 5239 0022 034B     		ldr	r3, .L343
 5240 0024 FA68     		ldr	r2, [r7, #12]
 5241 0026 1A60     		str	r2, [r3]
3088:Generated_Source\PSoC4/CyLib.c ****     }
 5242              		.loc 1 3088 0
 5243 0028 BD46     		mov	sp, r7
 5244 002a 04B0     		add	sp, sp, #16
 5245              		@ sp needed
 5246 002c 80BD     		pop	{r7, pc}
 5247              	.L344:
 5248 002e C046     		.align	2
 5249              	.L343:
 5250 0030 3C001040 		.word	1074790460
 5251 0034 FFFFF9FF 		.word	-393217
 5252              		.cfi_endproc
 5253              	.LFE72:
 5254              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 5255              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 5256              		.align	2
 5257              		.global	CySysSetPeripheralAccessArbPriority
 5258              		.code	16
 5259              		.thumb_func
 5260              		.type	CySysSetPeripheralAccessArbPriority, %function
 5261              	CySysSetPeripheralAccessArbPriority:
 5262              	.LFB73:
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c **** 
3091:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3092:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3093:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 148


3094:Generated_Source\PSoC4/CyLib.c ****     *
3095:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3096:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3097:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3098:Generated_Source\PSoC4/CyLib.c ****     *
3099:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3100:Generated_Source\PSoC4/CyLib.c ****     *
3101:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3102:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3103:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3104:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3105:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3106:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3107:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3108:Generated_Source\PSoC4/CyLib.c ****     *
3109:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3110:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3111:Generated_Source\PSoC4/CyLib.c ****     {
 5263              		.loc 1 3111 0
 5264              		.cfi_startproc
 5265 0000 80B5     		push	{r7, lr}
 5266              		.cfi_def_cfa_offset 8
 5267              		.cfi_offset 7, -8
 5268              		.cfi_offset 14, -4
 5269 0002 84B0     		sub	sp, sp, #16
 5270              		.cfi_def_cfa_offset 24
 5271 0004 00AF     		add	r7, sp, #0
 5272              		.cfi_def_cfa_register 7
 5273 0006 7860     		str	r0, [r7, #4]
 5274 0008 3960     		str	r1, [r7]
3112:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3113:Generated_Source\PSoC4/CyLib.c **** 
3114:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 5275              		.loc 1 3114 0
 5276 000a 7B68     		ldr	r3, [r7, #4]
 5277 000c 002B     		cmp	r3, #0
 5278 000e 10D1     		bne	.L346
3115:Generated_Source\PSoC4/CyLib.c ****         {
3116:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 5279              		.loc 1 3116 0
 5280 0010 1F4B     		ldr	r3, .L350
 5281 0012 1B68     		ldr	r3, [r3]
 5282 0014 1F4A     		ldr	r2, .L350+4
 5283 0016 1340     		and	r3, r2
 5284 0018 FB60     		str	r3, [r7, #12]
3117:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 5285              		.loc 1 3117 0
 5286 001a 3B68     		ldr	r3, [r7]
 5287 001c 5A04     		lsl	r2, r3, #17
 5288 001e C023     		mov	r3, #192
 5289 0020 DB02     		lsl	r3, r3, #11
 5290 0022 1340     		and	r3, r2
 5291 0024 FA68     		ldr	r2, [r7, #12]
 5292 0026 1343     		orr	r3, r2
 5293 0028 FB60     		str	r3, [r7, #12]
3118:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 5294              		.loc 1 3118 0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 149


 5295 002a 194B     		ldr	r3, .L350
 5296 002c FA68     		ldr	r2, [r7, #12]
 5297 002e 1A60     		str	r2, [r3]
 5298 0030 2AE0     		b	.L345
 5299              	.L346:
3119:Generated_Source\PSoC4/CyLib.c ****         } else
3120:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3121:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 5300              		.loc 1 3121 0
 5301 0032 7B68     		ldr	r3, [r7, #4]
 5302 0034 012B     		cmp	r3, #1
 5303 0036 10D1     		bne	.L348
3122:Generated_Source\PSoC4/CyLib.c ****         {
3123:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 5304              		.loc 1 3123 0
 5305 0038 174B     		ldr	r3, .L350+8
 5306 003a 1B68     		ldr	r3, [r3]
 5307 003c 154A     		ldr	r2, .L350+4
 5308 003e 1340     		and	r3, r2
 5309 0040 FB60     		str	r3, [r7, #12]
3124:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 5310              		.loc 1 3124 0
 5311 0042 3B68     		ldr	r3, [r7]
 5312 0044 5A04     		lsl	r2, r3, #17
 5313 0046 C023     		mov	r3, #192
 5314 0048 DB02     		lsl	r3, r3, #11
 5315 004a 1340     		and	r3, r2
 5316 004c FA68     		ldr	r2, [r7, #12]
 5317 004e 1343     		orr	r3, r2
 5318 0050 FB60     		str	r3, [r7, #12]
3125:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 5319              		.loc 1 3125 0
 5320 0052 114B     		ldr	r3, .L350+8
 5321 0054 FA68     		ldr	r2, [r7, #12]
 5322 0056 1A60     		str	r2, [r3]
 5323 0058 16E0     		b	.L345
 5324              	.L348:
3126:Generated_Source\PSoC4/CyLib.c ****         } else
3127:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3128:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3129:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
 5325              		.loc 1 3129 0
 5326 005a 7B68     		ldr	r3, [r7, #4]
 5327 005c 022B     		cmp	r3, #2
 5328 005e 10D1     		bne	.L349
3130:Generated_Source\PSoC4/CyLib.c ****         {
3131:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 5329              		.loc 1 3131 0
 5330 0060 0E4B     		ldr	r3, .L350+12
 5331 0062 1B68     		ldr	r3, [r3]
 5332 0064 0B4A     		ldr	r2, .L350+4
 5333 0066 1340     		and	r3, r2
 5334 0068 FB60     		str	r3, [r7, #12]
3132:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 5335              		.loc 1 3132 0
 5336 006a 3B68     		ldr	r3, [r7]
 5337 006c 5A04     		lsl	r2, r3, #17
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 150


 5338 006e C023     		mov	r3, #192
 5339 0070 DB02     		lsl	r3, r3, #11
 5340 0072 1340     		and	r3, r2
 5341 0074 FA68     		ldr	r2, [r7, #12]
 5342 0076 1343     		orr	r3, r2
 5343 0078 FB60     		str	r3, [r7, #12]
3133:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 5344              		.loc 1 3133 0
 5345 007a 084B     		ldr	r3, .L350+12
 5346 007c FA68     		ldr	r2, [r7, #12]
 5347 007e 1A60     		str	r2, [r3]
 5348 0080 02E0     		b	.L345
 5349              	.L349:
3134:Generated_Source\PSoC4/CyLib.c ****         } else
3135:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3136:Generated_Source\PSoC4/CyLib.c ****         {
3137:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3138:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 5350              		.loc 1 3138 0 discriminator 1
 5351 0082 0020     		mov	r0, #0
 5352 0084 FFF7FEFF 		bl	CyHalt
 5353              	.L345:
3139:Generated_Source\PSoC4/CyLib.c ****         }
3140:Generated_Source\PSoC4/CyLib.c ****     }
 5354              		.loc 1 3140 0
 5355 0088 BD46     		mov	sp, r7
 5356 008a 04B0     		add	sp, sp, #16
 5357              		@ sp needed
 5358 008c 80BD     		pop	{r7, pc}
 5359              	.L351:
 5360 008e C046     		.align	2
 5361              	.L350:
 5362 0090 00011040 		.word	1074790656
 5363 0094 FFFFF9FF 		.word	-393217
 5364 0098 04011040 		.word	1074790660
 5365 009c 08011040 		.word	1074790664
 5366              		.cfi_endproc
 5367              	.LFE73:
 5368              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 5369              		.text
 5370              	.Letext0:
 5371              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 5372              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 5373              		.section	.debug_info,"",%progbits
 5374              	.Ldebug_info0:
 5375 0000 CA110000 		.4byte	0x11ca
 5376 0004 0400     		.2byte	0x4
 5377 0006 00000000 		.4byte	.Ldebug_abbrev0
 5378 000a 04       		.byte	0x4
 5379 000b 01       		.uleb128 0x1
 5380 000c 64090000 		.4byte	.LASF172
 5381 0010 01       		.byte	0x1
 5382 0011 300A0000 		.4byte	.LASF173
 5383 0015 F9070000 		.4byte	.LASF174
 5384 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5385 001d 00000000 		.4byte	0
 5386 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 151


 5387 0025 02       		.uleb128 0x2
 5388 0026 01       		.byte	0x1
 5389 0027 06       		.byte	0x6
 5390 0028 86010000 		.4byte	.LASF0
 5391 002c 02       		.uleb128 0x2
 5392 002d 01       		.byte	0x1
 5393 002e 08       		.byte	0x8
 5394 002f E8060000 		.4byte	.LASF1
 5395 0033 02       		.uleb128 0x2
 5396 0034 02       		.byte	0x2
 5397 0035 05       		.byte	0x5
 5398 0036 F6060000 		.4byte	.LASF2
 5399 003a 02       		.uleb128 0x2
 5400 003b 02       		.byte	0x2
 5401 003c 07       		.byte	0x7
 5402 003d 0A040000 		.4byte	.LASF3
 5403 0041 02       		.uleb128 0x2
 5404 0042 04       		.byte	0x4
 5405 0043 05       		.byte	0x5
 5406 0044 F8010000 		.4byte	.LASF4
 5407 0048 02       		.uleb128 0x2
 5408 0049 04       		.byte	0x4
 5409 004a 07       		.byte	0x7
 5410 004b 63030000 		.4byte	.LASF5
 5411 004f 02       		.uleb128 0x2
 5412 0050 08       		.byte	0x8
 5413 0051 05       		.byte	0x5
 5414 0052 78010000 		.4byte	.LASF6
 5415 0056 02       		.uleb128 0x2
 5416 0057 08       		.byte	0x8
 5417 0058 07       		.byte	0x7
 5418 0059 E9000000 		.4byte	.LASF7
 5419 005d 03       		.uleb128 0x3
 5420 005e 04       		.byte	0x4
 5421 005f 05       		.byte	0x5
 5422 0060 696E7400 		.ascii	"int\000"
 5423 0064 02       		.uleb128 0x2
 5424 0065 04       		.byte	0x4
 5425 0066 07       		.byte	0x7
 5426 0067 47030000 		.4byte	.LASF8
 5427 006b 04       		.uleb128 0x4
 5428 006c 1C020000 		.4byte	.LASF9
 5429 0070 02       		.byte	0x2
 5430 0071 B901     		.2byte	0x1b9
 5431 0073 2C000000 		.4byte	0x2c
 5432 0077 04       		.uleb128 0x4
 5433 0078 17000000 		.4byte	.LASF10
 5434 007c 02       		.byte	0x2
 5435 007d BA01     		.2byte	0x1ba
 5436 007f 3A000000 		.4byte	0x3a
 5437 0083 04       		.uleb128 0x4
 5438 0084 7A020000 		.4byte	.LASF11
 5439 0088 02       		.byte	0x2
 5440 0089 BB01     		.2byte	0x1bb
 5441 008b 48000000 		.4byte	0x48
 5442 008f 04       		.uleb128 0x4
 5443 0090 B7010000 		.4byte	.LASF12
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 152


 5444 0094 02       		.byte	0x2
 5445 0095 BE01     		.2byte	0x1be
 5446 0097 41000000 		.4byte	0x41
 5447 009b 02       		.uleb128 0x2
 5448 009c 04       		.byte	0x4
 5449 009d 04       		.byte	0x4
 5450 009e 39060000 		.4byte	.LASF13
 5451 00a2 02       		.uleb128 0x2
 5452 00a3 08       		.byte	0x8
 5453 00a4 04       		.byte	0x4
 5454 00a5 3D020000 		.4byte	.LASF14
 5455 00a9 02       		.uleb128 0x2
 5456 00aa 01       		.byte	0x1
 5457 00ab 08       		.byte	0x8
 5458 00ac B8070000 		.4byte	.LASF15
 5459 00b0 04       		.uleb128 0x4
 5460 00b1 5B090000 		.4byte	.LASF16
 5461 00b5 02       		.byte	0x2
 5462 00b6 5B02     		.2byte	0x25b
 5463 00b8 48000000 		.4byte	0x48
 5464 00bc 04       		.uleb128 0x4
 5465 00bd AB060000 		.4byte	.LASF17
 5466 00c1 02       		.byte	0x2
 5467 00c2 6302     		.2byte	0x263
 5468 00c4 C8000000 		.4byte	0xc8
 5469 00c8 05       		.uleb128 0x5
 5470 00c9 6B000000 		.4byte	0x6b
 5471 00cd 04       		.uleb128 0x4
 5472 00ce 35050000 		.4byte	.LASF18
 5473 00d2 02       		.byte	0x2
 5474 00d3 6502     		.2byte	0x265
 5475 00d5 D9000000 		.4byte	0xd9
 5476 00d9 05       		.uleb128 0x5
 5477 00da 83000000 		.4byte	0x83
 5478 00de 04       		.uleb128 0x4
 5479 00df D5070000 		.4byte	.LASF19
 5480 00e3 02       		.byte	0x2
 5481 00e4 7502     		.2byte	0x275
 5482 00e6 EA000000 		.4byte	0xea
 5483 00ea 06       		.uleb128 0x6
 5484 00eb 04       		.byte	0x4
 5485 00ec F0000000 		.4byte	0xf0
 5486 00f0 07       		.uleb128 0x7
 5487 00f1 02       		.uleb128 0x2
 5488 00f2 04       		.byte	0x4
 5489 00f3 07       		.byte	0x7
 5490 00f4 5E050000 		.4byte	.LASF20
 5491 00f8 08       		.uleb128 0x8
 5492 00f9 4E060000 		.4byte	.LASF21
 5493 00fd 03       		.byte	0x3
 5494 00fe F5       		.byte	0xf5
 5495 00ff EA000000 		.4byte	0xea
 5496 0103 09       		.uleb128 0x9
 5497 0104 0C       		.byte	0xc
 5498 0105 03       		.byte	0x3
 5499 0106 9601     		.2byte	0x196
 5500 0108 34010000 		.4byte	0x134
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 153


 5501 010c 0A       		.uleb128 0xa
 5502 010d F2070000 		.4byte	.LASF22
 5503 0111 03       		.byte	0x3
 5504 0112 9801     		.2byte	0x198
 5505 0114 83000000 		.4byte	0x83
 5506 0118 00       		.byte	0
 5507 0119 0A       		.uleb128 0xa
 5508 011a 09090000 		.4byte	.LASF23
 5509 011e 03       		.byte	0x3
 5510 011f 9901     		.2byte	0x199
 5511 0121 83000000 		.4byte	0x83
 5512 0125 04       		.byte	0x4
 5513 0126 0A       		.uleb128 0xa
 5514 0127 19010000 		.4byte	.LASF24
 5515 012b 03       		.byte	0x3
 5516 012c 9A01     		.2byte	0x19a
 5517 012e 83000000 		.4byte	0x83
 5518 0132 08       		.byte	0x8
 5519 0133 00       		.byte	0
 5520 0134 04       		.uleb128 0x4
 5521 0135 B9000000 		.4byte	.LASF25
 5522 0139 03       		.byte	0x3
 5523 013a 9B01     		.2byte	0x19b
 5524 013c 03010000 		.4byte	0x103
 5525 0140 09       		.uleb128 0x9
 5526 0141 18       		.byte	0x18
 5527 0142 03       		.byte	0x3
 5528 0143 9E01     		.2byte	0x19e
 5529 0145 57010000 		.4byte	0x157
 5530 0149 0B       		.uleb128 0xb
 5531 014a 706C6C00 		.ascii	"pll\000"
 5532 014e 03       		.byte	0x3
 5533 014f A001     		.2byte	0x1a0
 5534 0151 57010000 		.4byte	0x157
 5535 0155 00       		.byte	0
 5536 0156 00       		.byte	0
 5537 0157 0C       		.uleb128 0xc
 5538 0158 34010000 		.4byte	0x134
 5539 015c 67010000 		.4byte	0x167
 5540 0160 0D       		.uleb128 0xd
 5541 0161 F1000000 		.4byte	0xf1
 5542 0165 01       		.byte	0x1
 5543 0166 00       		.byte	0
 5544 0167 04       		.uleb128 0x4
 5545 0168 A00A0000 		.4byte	.LASF26
 5546 016c 03       		.byte	0x3
 5547 016d A101     		.2byte	0x1a1
 5548 016f 40010000 		.4byte	0x140
 5549 0173 0E       		.uleb128 0xe
 5550 0174 070A0000 		.4byte	.LASF27
 5551 0178 01       		.byte	0x1
 5552 0179 6B       		.byte	0x6b
 5553 017a 00000000 		.4byte	.LFB1
 5554 017e 1C000000 		.4byte	.LFE1-.LFB1
 5555 0182 01       		.uleb128 0x1
 5556 0183 9C       		.byte	0x9c
 5557 0184 0F       		.uleb128 0xf
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 154


 5558 0185 96030000 		.4byte	.LASF28
 5559 0189 01       		.byte	0x1
 5560 018a 8B       		.byte	0x8b
 5561 018b 00000000 		.4byte	.LFB2
 5562 018f 20000000 		.4byte	.LFE2-.LFB2
 5563 0193 01       		.uleb128 0x1
 5564 0194 9C       		.byte	0x9c
 5565 0195 10       		.uleb128 0x10
 5566 0196 CA020000 		.4byte	.LASF39
 5567 019a 01       		.byte	0x1
 5568 019b AF       		.byte	0xaf
 5569 019c 00000000 		.4byte	.LFB3
 5570 01a0 54010000 		.4byte	.LFE3-.LFB3
 5571 01a4 01       		.uleb128 0x1
 5572 01a5 9C       		.byte	0x9c
 5573 01a6 FD010000 		.4byte	0x1fd
 5574 01aa 11       		.uleb128 0x11
 5575 01ab 6900     		.ascii	"i\000"
 5576 01ad 01       		.byte	0x1
 5577 01ae B2       		.byte	0xb2
 5578 01af 83000000 		.4byte	0x83
 5579 01b3 02       		.uleb128 0x2
 5580 01b4 91       		.byte	0x91
 5581 01b5 6C       		.sleb128 -20
 5582 01b6 12       		.uleb128 0x12
 5583 01b7 92010000 		.4byte	.LASF29
 5584 01bb 01       		.byte	0x1
 5585 01bc B5       		.byte	0xb5
 5586 01bd 83000000 		.4byte	0x83
 5587 01c1 02       		.uleb128 0x2
 5588 01c2 91       		.byte	0x91
 5589 01c3 68       		.sleb128 -24
 5590 01c4 12       		.uleb128 0x12
 5591 01c5 A8010000 		.4byte	.LASF30
 5592 01c9 01       		.byte	0x1
 5593 01ca B6       		.byte	0xb6
 5594 01cb 6B000000 		.4byte	0x6b
 5595 01cf 02       		.uleb128 0x2
 5596 01d0 91       		.byte	0x91
 5597 01d1 5F       		.sleb128 -33
 5598 01d2 12       		.uleb128 0x12
 5599 01d3 1D040000 		.4byte	.LASF31
 5600 01d7 01       		.byte	0x1
 5601 01d8 B7       		.byte	0xb7
 5602 01d9 83000000 		.4byte	0x83
 5603 01dd 02       		.uleb128 0x2
 5604 01de 91       		.byte	0x91
 5605 01df 64       		.sleb128 -28
 5606 01e0 12       		.uleb128 0x12
 5607 01e1 E1030000 		.4byte	.LASF32
 5608 01e5 01       		.byte	0x1
 5609 01e6 B8       		.byte	0xb8
 5610 01e7 83000000 		.4byte	0x83
 5611 01eb 02       		.uleb128 0x2
 5612 01ec 91       		.byte	0x91
 5613 01ed 60       		.sleb128 -32
 5614 01ee 12       		.uleb128 0x12
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 155


 5615 01ef 8F080000 		.4byte	.LASF33
 5616 01f3 01       		.byte	0x1
 5617 01f4 B9       		.byte	0xb9
 5618 01f5 D9000000 		.4byte	0xd9
 5619 01f9 02       		.uleb128 0x2
 5620 01fa 91       		.byte	0x91
 5621 01fb 58       		.sleb128 -40
 5622 01fc 00       		.byte	0
 5623 01fd 13       		.uleb128 0x13
 5624 01fe 0B050000 		.4byte	.LASF34
 5625 0202 01       		.byte	0x1
 5626 0203 1D01     		.2byte	0x11d
 5627 0205 00000000 		.4byte	.LFB4
 5628 0209 1C000000 		.4byte	.LFE4-.LFB4
 5629 020d 01       		.uleb128 0x1
 5630 020e 9C       		.byte	0x9c
 5631 020f 14       		.uleb128 0x14
 5632 0210 DA010000 		.4byte	.LASF37
 5633 0214 01       		.byte	0x1
 5634 0215 3001     		.2byte	0x130
 5635 0217 83000000 		.4byte	0x83
 5636 021b 00000000 		.4byte	.LFB5
 5637 021f 20000000 		.4byte	.LFE5-.LFB5
 5638 0223 01       		.uleb128 0x1
 5639 0224 9C       		.byte	0x9c
 5640 0225 13       		.uleb128 0x13
 5641 0226 44020000 		.4byte	.LASF35
 5642 022a 01       		.byte	0x1
 5643 022b 4B01     		.2byte	0x14b
 5644 022d 00000000 		.4byte	.LFB6
 5645 0231 50000000 		.4byte	.LFE6-.LFB6
 5646 0235 01       		.uleb128 0x1
 5647 0236 9C       		.byte	0x9c
 5648 0237 13       		.uleb128 0x13
 5649 0238 41040000 		.4byte	.LASF36
 5650 023c 01       		.byte	0x1
 5651 023d 6B01     		.2byte	0x16b
 5652 023f 00000000 		.4byte	.LFB7
 5653 0243 34000000 		.4byte	.LFE7-.LFB7
 5654 0247 01       		.uleb128 0x1
 5655 0248 9C       		.byte	0x9c
 5656 0249 14       		.uleb128 0x14
 5657 024a 97040000 		.4byte	.LASF38
 5658 024e 01       		.byte	0x1
 5659 024f 8401     		.2byte	0x184
 5660 0251 83000000 		.4byte	0x83
 5661 0255 00000000 		.4byte	.LFB8
 5662 0259 20000000 		.4byte	.LFE8-.LFB8
 5663 025d 01       		.uleb128 0x1
 5664 025e 9C       		.byte	0x9c
 5665 025f 15       		.uleb128 0x15
 5666 0260 2D000000 		.4byte	.LASF40
 5667 0264 01       		.byte	0x1
 5668 0265 AD01     		.2byte	0x1ad
 5669 0267 00000000 		.4byte	.LFB9
 5670 026b 70000000 		.4byte	.LFE9-.LFB9
 5671 026f 01       		.uleb128 0x1
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 156


 5672 0270 9C       		.byte	0x9c
 5673 0271 A3020000 		.4byte	0x2a3
 5674 0275 16       		.uleb128 0x16
 5675 0276 31070000 		.4byte	.LASF43
 5676 027a 01       		.byte	0x1
 5677 027b AD01     		.2byte	0x1ad
 5678 027d 83000000 		.4byte	0x83
 5679 0281 02       		.uleb128 0x2
 5680 0282 91       		.byte	0x91
 5681 0283 64       		.sleb128 -28
 5682 0284 17       		.uleb128 0x17
 5683 0285 A8010000 		.4byte	.LASF30
 5684 0289 01       		.byte	0x1
 5685 028a AF01     		.2byte	0x1af
 5686 028c 6B000000 		.4byte	0x6b
 5687 0290 02       		.uleb128 0x2
 5688 0291 91       		.byte	0x91
 5689 0292 6B       		.sleb128 -21
 5690 0293 17       		.uleb128 0x17
 5691 0294 4F0A0000 		.4byte	.LASF41
 5692 0298 01       		.byte	0x1
 5693 0299 B001     		.2byte	0x1b0
 5694 029b 83000000 		.4byte	0x83
 5695 029f 02       		.uleb128 0x2
 5696 02a0 91       		.byte	0x91
 5697 02a1 6C       		.sleb128 -20
 5698 02a2 00       		.byte	0
 5699 02a3 18       		.uleb128 0x18
 5700 02a4 75000000 		.4byte	.LASF42
 5701 02a8 01       		.byte	0x1
 5702 02a9 D901     		.2byte	0x1d9
 5703 02ab 00000000 		.4byte	.LFB10
 5704 02af 50000000 		.4byte	.LFE10-.LFB10
 5705 02b3 01       		.uleb128 0x1
 5706 02b4 9C       		.byte	0x9c
 5707 02b5 C9020000 		.4byte	0x2c9
 5708 02b9 16       		.uleb128 0x16
 5709 02ba 36020000 		.4byte	.LASF44
 5710 02be 01       		.byte	0x1
 5711 02bf D901     		.2byte	0x1d9
 5712 02c1 83000000 		.4byte	0x83
 5713 02c5 02       		.uleb128 0x2
 5714 02c6 91       		.byte	0x91
 5715 02c7 74       		.sleb128 -12
 5716 02c8 00       		.byte	0
 5717 02c9 19       		.uleb128 0x19
 5718 02ca B2020000 		.4byte	.LASF56
 5719 02ce 01       		.byte	0x1
 5720 02cf FE01     		.2byte	0x1fe
 5721 02d1 83000000 		.4byte	0x83
 5722 02d5 00000000 		.4byte	.LFB11
 5723 02d9 4C000000 		.4byte	.LFE11-.LFB11
 5724 02dd 01       		.uleb128 0x1
 5725 02de 9C       		.byte	0x9c
 5726 02df 02030000 		.4byte	0x302
 5727 02e3 17       		.uleb128 0x17
 5728 02e4 A8010000 		.4byte	.LASF30
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 157


 5729 02e8 01       		.byte	0x1
 5730 02e9 0002     		.2byte	0x200
 5731 02eb 6B000000 		.4byte	0x6b
 5732 02ef 02       		.uleb128 0x2
 5733 02f0 91       		.byte	0x91
 5734 02f1 6B       		.sleb128 -21
 5735 02f2 17       		.uleb128 0x17
 5736 02f3 B1050000 		.4byte	.LASF45
 5737 02f7 01       		.byte	0x1
 5738 02f8 0102     		.2byte	0x201
 5739 02fa 83000000 		.4byte	0x83
 5740 02fe 02       		.uleb128 0x2
 5741 02ff 91       		.byte	0x91
 5742 0300 6C       		.sleb128 -20
 5743 0301 00       		.byte	0
 5744 0302 15       		.uleb128 0x15
 5745 0303 3E080000 		.4byte	.LASF46
 5746 0307 01       		.byte	0x1
 5747 0308 3502     		.2byte	0x235
 5748 030a 00000000 		.4byte	.LFB12
 5749 030e 44000000 		.4byte	.LFE12-.LFB12
 5750 0312 01       		.uleb128 0x1
 5751 0313 9C       		.byte	0x9c
 5752 0314 37030000 		.4byte	0x337
 5753 0318 16       		.uleb128 0x16
 5754 0319 53090000 		.4byte	.LASF47
 5755 031d 01       		.byte	0x1
 5756 031e 3502     		.2byte	0x235
 5757 0320 83000000 		.4byte	0x83
 5758 0324 02       		.uleb128 0x2
 5759 0325 91       		.byte	0x91
 5760 0326 64       		.sleb128 -28
 5761 0327 17       		.uleb128 0x17
 5762 0328 A8010000 		.4byte	.LASF30
 5763 032c 01       		.byte	0x1
 5764 032d 3702     		.2byte	0x237
 5765 032f 6B000000 		.4byte	0x6b
 5766 0333 02       		.uleb128 0x2
 5767 0334 91       		.byte	0x91
 5768 0335 6F       		.sleb128 -17
 5769 0336 00       		.byte	0
 5770 0337 15       		.uleb128 0x15
 5771 0338 71040000 		.4byte	.LASF48
 5772 033c 01       		.byte	0x1
 5773 033d 6F02     		.2byte	0x26f
 5774 033f 00000000 		.4byte	.LFB13
 5775 0343 6C020000 		.4byte	.LFE13-.LFB13
 5776 0347 01       		.uleb128 0x1
 5777 0348 9C       		.byte	0x9c
 5778 0349 D5030000 		.4byte	0x3d5
 5779 034d 16       		.uleb128 0x16
 5780 034e 92010000 		.4byte	.LASF29
 5781 0352 01       		.byte	0x1
 5782 0353 6F02     		.2byte	0x26f
 5783 0355 83000000 		.4byte	0x83
 5784 0359 02       		.uleb128 0x2
 5785 035a 91       		.byte	0x91
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 158


 5786 035b 5C       		.sleb128 -36
 5787 035c 17       		.uleb128 0x17
 5788 035d 0F000000 		.4byte	.LASF49
 5789 0361 01       		.byte	0x1
 5790 0362 7502     		.2byte	0x275
 5791 0364 6B000000 		.4byte	0x6b
 5792 0368 02       		.uleb128 0x2
 5793 0369 91       		.byte	0x91
 5794 036a 6F       		.sleb128 -17
 5795 036b 17       		.uleb128 0x17
 5796 036c A9050000 		.4byte	.LASF50
 5797 0370 01       		.byte	0x1
 5798 0371 7602     		.2byte	0x276
 5799 0373 6B000000 		.4byte	0x6b
 5800 0377 02       		.uleb128 0x2
 5801 0378 91       		.byte	0x91
 5802 0379 6E       		.sleb128 -18
 5803 037a 17       		.uleb128 0x17
 5804 037b 180A0000 		.4byte	.LASF51
 5805 037f 01       		.byte	0x1
 5806 0380 7702     		.2byte	0x277
 5807 0382 6B000000 		.4byte	0x6b
 5808 0386 02       		.uleb128 0x2
 5809 0387 91       		.byte	0x91
 5810 0388 62       		.sleb128 -30
 5811 0389 17       		.uleb128 0x17
 5812 038a D4000000 		.4byte	.LASF52
 5813 038e 01       		.byte	0x1
 5814 038f 7802     		.2byte	0x278
 5815 0391 6B000000 		.4byte	0x6b
 5816 0395 02       		.uleb128 0x2
 5817 0396 91       		.byte	0x91
 5818 0397 6D       		.sleb128 -19
 5819 0398 17       		.uleb128 0x17
 5820 0399 78080000 		.4byte	.LASF53
 5821 039d 01       		.byte	0x1
 5822 039e 7902     		.2byte	0x279
 5823 03a0 6B000000 		.4byte	0x6b
 5824 03a4 02       		.uleb128 0x2
 5825 03a5 91       		.byte	0x91
 5826 03a6 6C       		.sleb128 -20
 5827 03a7 17       		.uleb128 0x17
 5828 03a8 F0010000 		.4byte	.LASF54
 5829 03ac 01       		.byte	0x1
 5830 03ad 7D02     		.2byte	0x27d
 5831 03af 83000000 		.4byte	0x83
 5832 03b3 02       		.uleb128 0x2
 5833 03b4 91       		.byte	0x91
 5834 03b5 68       		.sleb128 -24
 5835 03b6 17       		.uleb128 0x17
 5836 03b7 AD040000 		.4byte	.LASF55
 5837 03bb 01       		.byte	0x1
 5838 03bc 8102     		.2byte	0x281
 5839 03be 83000000 		.4byte	0x83
 5840 03c2 02       		.uleb128 0x2
 5841 03c3 91       		.byte	0x91
 5842 03c4 64       		.sleb128 -28
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 159


 5843 03c5 17       		.uleb128 0x17
 5844 03c6 A8010000 		.4byte	.LASF30
 5845 03ca 01       		.byte	0x1
 5846 03cb 8402     		.2byte	0x284
 5847 03cd 6B000000 		.4byte	0x6b
 5848 03d1 02       		.uleb128 0x2
 5849 03d2 91       		.byte	0x91
 5850 03d3 63       		.sleb128 -29
 5851 03d4 00       		.byte	0
 5852 03d5 19       		.uleb128 0x19
 5853 03d6 42070000 		.4byte	.LASF57
 5854 03da 01       		.byte	0x1
 5855 03db 0304     		.2byte	0x403
 5856 03dd B0000000 		.4byte	0xb0
 5857 03e1 00000000 		.4byte	.LFB14
 5858 03e5 68000000 		.4byte	.LFE14-.LFB14
 5859 03e9 01       		.uleb128 0x1
 5860 03ea 9C       		.byte	0x9c
 5861 03eb 0E040000 		.4byte	0x40e
 5862 03ef 16       		.uleb128 0x16
 5863 03f0 49090000 		.4byte	.LASF58
 5864 03f4 01       		.byte	0x1
 5865 03f5 0304     		.2byte	0x403
 5866 03f7 83000000 		.4byte	0x83
 5867 03fb 02       		.uleb128 0x2
 5868 03fc 91       		.byte	0x91
 5869 03fd 6C       		.sleb128 -20
 5870 03fe 17       		.uleb128 0x17
 5871 03ff 4A050000 		.4byte	.LASF59
 5872 0403 01       		.byte	0x1
 5873 0404 0504     		.2byte	0x405
 5874 0406 B0000000 		.4byte	0xb0
 5875 040a 02       		.uleb128 0x2
 5876 040b 91       		.byte	0x91
 5877 040c 74       		.sleb128 -12
 5878 040d 00       		.byte	0
 5879 040e 13       		.uleb128 0x13
 5880 040f 55080000 		.4byte	.LASF60
 5881 0413 01       		.byte	0x1
 5882 0414 9104     		.2byte	0x491
 5883 0416 00000000 		.4byte	.LFB15
 5884 041a 1C000000 		.4byte	.LFE15-.LFB15
 5885 041e 01       		.uleb128 0x1
 5886 041f 9C       		.byte	0x9c
 5887 0420 1A       		.uleb128 0x1a
 5888 0421 90020000 		.4byte	.LASF61
 5889 0425 01       		.byte	0x1
 5890 0426 B304     		.2byte	0x4b3
 5891 0428 83000000 		.4byte	0x83
 5892 042c 00000000 		.4byte	.LFB16
 5893 0430 24000000 		.4byte	.LFE16-.LFB16
 5894 0434 01       		.uleb128 0x1
 5895 0435 9C       		.byte	0x9c
 5896 0436 4A040000 		.4byte	0x44a
 5897 043a 17       		.uleb128 0x17
 5898 043b 8B0A0000 		.4byte	.LASF62
 5899 043f 01       		.byte	0x1
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 160


 5900 0440 B504     		.2byte	0x4b5
 5901 0442 83000000 		.4byte	0x83
 5902 0446 02       		.uleb128 0x2
 5903 0447 91       		.byte	0x91
 5904 0448 74       		.sleb128 -12
 5905 0449 00       		.byte	0
 5906 044a 15       		.uleb128 0x15
 5907 044b 86070000 		.4byte	.LASF63
 5908 044f 01       		.byte	0x1
 5909 0450 3B05     		.2byte	0x53b
 5910 0452 00000000 		.4byte	.LFB17
 5911 0456 98000000 		.4byte	.LFE17-.LFB17
 5912 045a 01       		.uleb128 0x1
 5913 045b 9C       		.byte	0x9c
 5914 045c CA040000 		.4byte	0x4ca
 5915 0460 16       		.uleb128 0x16
 5916 0461 3B070000 		.4byte	.LASF64
 5917 0465 01       		.byte	0x1
 5918 0466 3B05     		.2byte	0x53b
 5919 0468 83000000 		.4byte	0x83
 5920 046c 02       		.uleb128 0x2
 5921 046d 91       		.byte	0x91
 5922 046e 64       		.sleb128 -28
 5923 046f 16       		.uleb128 0x16
 5924 0470 33060000 		.4byte	.LASF65
 5925 0474 01       		.byte	0x1
 5926 0475 3B05     		.2byte	0x53b
 5927 0477 83000000 		.4byte	0x83
 5928 047b 02       		.uleb128 0x2
 5929 047c 91       		.byte	0x91
 5930 047d 60       		.sleb128 -32
 5931 047e 16       		.uleb128 0x16
 5932 047f 67070000 		.4byte	.LASF66
 5933 0483 01       		.byte	0x1
 5934 0484 3B05     		.2byte	0x53b
 5935 0486 83000000 		.4byte	0x83
 5936 048a 02       		.uleb128 0x2
 5937 048b 91       		.byte	0x91
 5938 048c 5C       		.sleb128 -36
 5939 048d 16       		.uleb128 0x16
 5940 048e 1D060000 		.4byte	.LASF67
 5941 0492 01       		.byte	0x1
 5942 0493 3B05     		.2byte	0x53b
 5943 0495 83000000 		.4byte	0x83
 5944 0499 02       		.uleb128 0x2
 5945 049a 91       		.byte	0x91
 5946 049b 58       		.sleb128 -40
 5947 049c 16       		.uleb128 0x16
 5948 049d 90030000 		.4byte	.LASF68
 5949 04a1 01       		.byte	0x1
 5950 04a2 3B05     		.2byte	0x53b
 5951 04a4 83000000 		.4byte	0x83
 5952 04a8 02       		.uleb128 0x2
 5953 04a9 91       		.byte	0x91
 5954 04aa 00       		.sleb128 0
 5955 04ab 17       		.uleb128 0x17
 5956 04ac A8010000 		.4byte	.LASF30
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 161


 5957 04b0 01       		.byte	0x1
 5958 04b1 3D05     		.2byte	0x53d
 5959 04b3 6B000000 		.4byte	0x6b
 5960 04b7 02       		.uleb128 0x2
 5961 04b8 91       		.byte	0x91
 5962 04b9 6F       		.sleb128 -17
 5963 04ba 17       		.uleb128 0x17
 5964 04bb 1D040000 		.4byte	.LASF31
 5965 04bf 01       		.byte	0x1
 5966 04c0 3E05     		.2byte	0x53e
 5967 04c2 83000000 		.4byte	0x83
 5968 04c6 02       		.uleb128 0x2
 5969 04c7 91       		.byte	0x91
 5970 04c8 68       		.sleb128 -24
 5971 04c9 00       		.byte	0
 5972 04ca 19       		.uleb128 0x19
 5973 04cb 8A000000 		.4byte	.LASF69
 5974 04cf 01       		.byte	0x1
 5975 04d0 6E05     		.2byte	0x56e
 5976 04d2 B0000000 		.4byte	0xb0
 5977 04d6 00000000 		.4byte	.LFB18
 5978 04da E4010000 		.4byte	.LFE18-.LFB18
 5979 04de 01       		.uleb128 0x1
 5980 04df 9C       		.byte	0x9c
 5981 04e0 8A050000 		.4byte	0x58a
 5982 04e4 16       		.uleb128 0x16
 5983 04e5 92010000 		.4byte	.LASF29
 5984 04e9 01       		.byte	0x1
 5985 04ea 6E05     		.2byte	0x56e
 5986 04ec 83000000 		.4byte	0x83
 5987 04f0 02       		.uleb128 0x2
 5988 04f1 91       		.byte	0x91
 5989 04f2 4C       		.sleb128 -52
 5990 04f3 16       		.uleb128 0x16
 5991 04f4 01020000 		.4byte	.LASF70
 5992 04f8 01       		.byte	0x1
 5993 04f9 6E05     		.2byte	0x56e
 5994 04fb 83000000 		.4byte	0x83
 5995 04ff 02       		.uleb128 0x2
 5996 0500 91       		.byte	0x91
 5997 0501 48       		.sleb128 -56
 5998 0502 1B       		.uleb128 0x1b
 5999 0503 65737200 		.ascii	"esr\000"
 6000 0507 01       		.byte	0x1
 6001 0508 6E05     		.2byte	0x56e
 6002 050a 83000000 		.4byte	0x83
 6003 050e 02       		.uleb128 0x2
 6004 050f 91       		.byte	0x91
 6005 0510 44       		.sleb128 -60
 6006 0511 16       		.uleb128 0x16
 6007 0512 E9030000 		.4byte	.LASF71
 6008 0516 01       		.byte	0x1
 6009 0517 6E05     		.2byte	0x56e
 6010 0519 83000000 		.4byte	0x83
 6011 051d 02       		.uleb128 0x2
 6012 051e 91       		.byte	0x91
 6013 051f 40       		.sleb128 -64
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 162


 6014 0520 17       		.uleb128 0x17
 6015 0521 4A050000 		.4byte	.LASF59
 6016 0525 01       		.byte	0x1
 6017 0526 7005     		.2byte	0x570
 6018 0528 B0000000 		.4byte	0xb0
 6019 052c 02       		.uleb128 0x2
 6020 052d 91       		.byte	0x91
 6021 052e 6C       		.sleb128 -20
 6022 052f 17       		.uleb128 0x17
 6023 0530 3B070000 		.4byte	.LASF64
 6024 0534 01       		.byte	0x1
 6025 0535 7205     		.2byte	0x572
 6026 0537 83000000 		.4byte	0x83
 6027 053b 02       		.uleb128 0x2
 6028 053c 91       		.byte	0x91
 6029 053d 5C       		.sleb128 -36
 6030 053e 17       		.uleb128 0x17
 6031 053f 33060000 		.4byte	.LASF65
 6032 0543 01       		.byte	0x1
 6033 0544 7305     		.2byte	0x573
 6034 0546 83000000 		.4byte	0x83
 6035 054a 02       		.uleb128 0x2
 6036 054b 91       		.byte	0x91
 6037 054c 68       		.sleb128 -24
 6038 054d 17       		.uleb128 0x17
 6039 054e 67070000 		.4byte	.LASF66
 6040 0552 01       		.byte	0x1
 6041 0553 7405     		.2byte	0x574
 6042 0555 83000000 		.4byte	0x83
 6043 0559 02       		.uleb128 0x2
 6044 055a 91       		.byte	0x91
 6045 055b 54       		.sleb128 -44
 6046 055c 17       		.uleb128 0x17
 6047 055d 1D060000 		.4byte	.LASF67
 6048 0561 01       		.byte	0x1
 6049 0562 7505     		.2byte	0x575
 6050 0564 83000000 		.4byte	0x83
 6051 0568 02       		.uleb128 0x2
 6052 0569 91       		.byte	0x91
 6053 056a 64       		.sleb128 -28
 6054 056b 17       		.uleb128 0x17
 6055 056c 90030000 		.4byte	.LASF68
 6056 0570 01       		.byte	0x1
 6057 0571 7605     		.2byte	0x576
 6058 0573 83000000 		.4byte	0x83
 6059 0577 02       		.uleb128 0x2
 6060 0578 91       		.byte	0x91
 6061 0579 60       		.sleb128 -32
 6062 057a 17       		.uleb128 0x17
 6063 057b 01030000 		.4byte	.LASF72
 6064 057f 01       		.byte	0x1
 6065 0580 7805     		.2byte	0x578
 6066 0582 83000000 		.4byte	0x83
 6067 0586 02       		.uleb128 0x2
 6068 0587 91       		.byte	0x91
 6069 0588 58       		.sleb128 -40
 6070 0589 00       		.byte	0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 163


 6071 058a 19       		.uleb128 0x19
 6072 058b BA060000 		.4byte	.LASF73
 6073 058f 01       		.byte	0x1
 6074 0590 0506     		.2byte	0x605
 6075 0592 B0000000 		.4byte	0xb0
 6076 0596 00000000 		.4byte	.LFB19
 6077 059a 10010000 		.4byte	.LFE19-.LFB19
 6078 059e 01       		.uleb128 0x1
 6079 059f 9C       		.byte	0x9c
 6080 05a0 F0050000 		.4byte	0x5f0
 6081 05a4 1B       		.uleb128 0x1b
 6082 05a5 706C6C00 		.ascii	"pll\000"
 6083 05a9 01       		.byte	0x1
 6084 05aa 0506     		.2byte	0x605
 6085 05ac 83000000 		.4byte	0x83
 6086 05b0 02       		.uleb128 0x2
 6087 05b1 91       		.byte	0x91
 6088 05b2 5C       		.sleb128 -36
 6089 05b3 16       		.uleb128 0x16
 6090 05b4 3C040000 		.4byte	.LASF74
 6091 05b8 01       		.byte	0x1
 6092 05b9 0506     		.2byte	0x605
 6093 05bb 83000000 		.4byte	0x83
 6094 05bf 02       		.uleb128 0x2
 6095 05c0 91       		.byte	0x91
 6096 05c1 58       		.sleb128 -40
 6097 05c2 17       		.uleb128 0x17
 6098 05c3 46000000 		.4byte	.LASF75
 6099 05c7 01       		.byte	0x1
 6100 05c8 0706     		.2byte	0x607
 6101 05ca 83000000 		.4byte	0x83
 6102 05ce 02       		.uleb128 0x2
 6103 05cf 91       		.byte	0x91
 6104 05d0 6C       		.sleb128 -20
 6105 05d1 17       		.uleb128 0x17
 6106 05d2 A8010000 		.4byte	.LASF30
 6107 05d6 01       		.byte	0x1
 6108 05d7 0806     		.2byte	0x608
 6109 05d9 6B000000 		.4byte	0x6b
 6110 05dd 02       		.uleb128 0x2
 6111 05de 91       		.byte	0x91
 6112 05df 67       		.sleb128 -25
 6113 05e0 17       		.uleb128 0x17
 6114 05e1 4A050000 		.4byte	.LASF59
 6115 05e5 01       		.byte	0x1
 6116 05e6 0906     		.2byte	0x609
 6117 05e8 B0000000 		.4byte	0xb0
 6118 05ec 02       		.uleb128 0x2
 6119 05ed 91       		.byte	0x91
 6120 05ee 68       		.sleb128 -24
 6121 05ef 00       		.byte	0
 6122 05f0 19       		.uleb128 0x19
 6123 05f1 92060000 		.4byte	.LASF76
 6124 05f5 01       		.byte	0x1
 6125 05f6 4806     		.2byte	0x648
 6126 05f8 83000000 		.4byte	0x83
 6127 05fc 00000000 		.4byte	.LFB20
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 164


 6128 0600 6C000000 		.4byte	.LFE20-.LFB20
 6129 0604 01       		.uleb128 0x1
 6130 0605 9C       		.byte	0x9c
 6131 0606 38060000 		.4byte	0x638
 6132 060a 1B       		.uleb128 0x1b
 6133 060b 706C6C00 		.ascii	"pll\000"
 6134 060f 01       		.byte	0x1
 6135 0610 4806     		.2byte	0x648
 6136 0612 83000000 		.4byte	0x83
 6137 0616 02       		.uleb128 0x2
 6138 0617 91       		.byte	0x91
 6139 0618 64       		.sleb128 -28
 6140 0619 17       		.uleb128 0x17
 6141 061a A8010000 		.4byte	.LASF30
 6142 061e 01       		.byte	0x1
 6143 061f 4A06     		.2byte	0x64a
 6144 0621 6B000000 		.4byte	0x6b
 6145 0625 02       		.uleb128 0x2
 6146 0626 91       		.byte	0x91
 6147 0627 6B       		.sleb128 -21
 6148 0628 17       		.uleb128 0x17
 6149 0629 4A050000 		.4byte	.LASF59
 6150 062d 01       		.byte	0x1
 6151 062e 4B06     		.2byte	0x64b
 6152 0630 83000000 		.4byte	0x83
 6153 0634 02       		.uleb128 0x2
 6154 0635 91       		.byte	0x91
 6155 0636 6C       		.sleb128 -20
 6156 0637 00       		.byte	0
 6157 0638 15       		.uleb128 0x15
 6158 0639 25050000 		.4byte	.LASF77
 6159 063d 01       		.byte	0x1
 6160 063e 6D06     		.2byte	0x66d
 6161 0640 00000000 		.4byte	.LFB21
 6162 0644 50000000 		.4byte	.LFE21-.LFB21
 6163 0648 01       		.uleb128 0x1
 6164 0649 9C       		.byte	0x9c
 6165 064a 6D060000 		.4byte	0x66d
 6166 064e 1B       		.uleb128 0x1b
 6167 064f 706C6C00 		.ascii	"pll\000"
 6168 0653 01       		.byte	0x1
 6169 0654 6D06     		.2byte	0x66d
 6170 0656 83000000 		.4byte	0x83
 6171 065a 02       		.uleb128 0x2
 6172 065b 91       		.byte	0x91
 6173 065c 64       		.sleb128 -28
 6174 065d 17       		.uleb128 0x17
 6175 065e A8010000 		.4byte	.LASF30
 6176 0662 01       		.byte	0x1
 6177 0663 6F06     		.2byte	0x66f
 6178 0665 6B000000 		.4byte	0x6b
 6179 0669 02       		.uleb128 0x2
 6180 066a 91       		.byte	0x91
 6181 066b 6F       		.sleb128 -17
 6182 066c 00       		.byte	0
 6183 066d 19       		.uleb128 0x19
 6184 066e 15030000 		.4byte	.LASF78
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 165


 6185 0672 01       		.byte	0x1
 6186 0673 9A06     		.2byte	0x69a
 6187 0675 B0000000 		.4byte	0xb0
 6188 0679 00000000 		.4byte	.LFB22
 6189 067d D4000000 		.4byte	.LFE22-.LFB22
 6190 0681 01       		.uleb128 0x1
 6191 0682 9C       		.byte	0x9c
 6192 0683 00070000 		.4byte	0x700
 6193 0687 1B       		.uleb128 0x1b
 6194 0688 706C6C00 		.ascii	"pll\000"
 6195 068c 01       		.byte	0x1
 6196 068d 9A06     		.2byte	0x69a
 6197 068f 83000000 		.4byte	0x83
 6198 0693 02       		.uleb128 0x2
 6199 0694 91       		.byte	0x91
 6200 0695 5C       		.sleb128 -36
 6201 0696 16       		.uleb128 0x16
 6202 0697 970A0000 		.4byte	.LASF79
 6203 069b 01       		.byte	0x1
 6204 069c 9A06     		.2byte	0x69a
 6205 069e 83000000 		.4byte	0x83
 6206 06a2 02       		.uleb128 0x2
 6207 06a3 91       		.byte	0x91
 6208 06a4 58       		.sleb128 -40
 6209 06a5 16       		.uleb128 0x16
 6210 06a6 8B050000 		.4byte	.LASF80
 6211 06aa 01       		.byte	0x1
 6212 06ab 9A06     		.2byte	0x69a
 6213 06ad 83000000 		.4byte	0x83
 6214 06b1 02       		.uleb128 0x2
 6215 06b2 91       		.byte	0x91
 6216 06b3 54       		.sleb128 -44
 6217 06b4 16       		.uleb128 0x16
 6218 06b5 23060000 		.4byte	.LASF81
 6219 06b9 01       		.byte	0x1
 6220 06ba 9A06     		.2byte	0x69a
 6221 06bc 83000000 		.4byte	0x83
 6222 06c0 02       		.uleb128 0x2
 6223 06c1 91       		.byte	0x91
 6224 06c2 50       		.sleb128 -48
 6225 06c3 17       		.uleb128 0x17
 6226 06c4 1D040000 		.4byte	.LASF31
 6227 06c8 01       		.byte	0x1
 6228 06c9 9C06     		.2byte	0x69c
 6229 06cb 83000000 		.4byte	0x83
 6230 06cf 02       		.uleb128 0x2
 6231 06d0 91       		.byte	0x91
 6232 06d1 60       		.sleb128 -32
 6233 06d2 1C       		.uleb128 0x1c
 6234 06d3 746D7000 		.ascii	"tmp\000"
 6235 06d7 01       		.byte	0x1
 6236 06d8 9D06     		.2byte	0x69d
 6237 06da B0000000 		.4byte	0xb0
 6238 06de 02       		.uleb128 0x2
 6239 06df 91       		.byte	0x91
 6240 06e0 64       		.sleb128 -28
 6241 06e1 17       		.uleb128 0x17
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 166


 6242 06e2 A8010000 		.4byte	.LASF30
 6243 06e6 01       		.byte	0x1
 6244 06e7 9E06     		.2byte	0x69e
 6245 06e9 6B000000 		.4byte	0x6b
 6246 06ed 02       		.uleb128 0x2
 6247 06ee 91       		.byte	0x91
 6248 06ef 6B       		.sleb128 -21
 6249 06f0 17       		.uleb128 0x17
 6250 06f1 4A050000 		.4byte	.LASF59
 6251 06f5 01       		.byte	0x1
 6252 06f6 9F06     		.2byte	0x69f
 6253 06f8 B0000000 		.4byte	0xb0
 6254 06fc 02       		.uleb128 0x2
 6255 06fd 91       		.byte	0x91
 6256 06fe 6C       		.sleb128 -20
 6257 06ff 00       		.byte	0
 6258 0700 15       		.uleb128 0x15
 6259 0701 9F070000 		.4byte	.LASF82
 6260 0705 01       		.byte	0x1
 6261 0706 DE06     		.2byte	0x6de
 6262 0708 00000000 		.4byte	.LFB23
 6263 070c 6C000000 		.4byte	.LFE23-.LFB23
 6264 0710 01       		.uleb128 0x1
 6265 0711 9C       		.byte	0x9c
 6266 0712 53070000 		.4byte	0x753
 6267 0716 1B       		.uleb128 0x1b
 6268 0717 706C6C00 		.ascii	"pll\000"
 6269 071b 01       		.byte	0x1
 6270 071c DE06     		.2byte	0x6de
 6271 071e 83000000 		.4byte	0x83
 6272 0722 02       		.uleb128 0x2
 6273 0723 91       		.byte	0x91
 6274 0724 64       		.sleb128 -28
 6275 0725 16       		.uleb128 0x16
 6276 0726 290A0000 		.4byte	.LASF83
 6277 072a 01       		.byte	0x1
 6278 072b DE06     		.2byte	0x6de
 6279 072d 83000000 		.4byte	0x83
 6280 0731 02       		.uleb128 0x2
 6281 0732 91       		.byte	0x91
 6282 0733 60       		.sleb128 -32
 6283 0734 17       		.uleb128 0x17
 6284 0735 1D040000 		.4byte	.LASF31
 6285 0739 01       		.byte	0x1
 6286 073a E006     		.2byte	0x6e0
 6287 073c 83000000 		.4byte	0x83
 6288 0740 02       		.uleb128 0x2
 6289 0741 91       		.byte	0x91
 6290 0742 68       		.sleb128 -24
 6291 0743 17       		.uleb128 0x17
 6292 0744 A8010000 		.4byte	.LASF30
 6293 0748 01       		.byte	0x1
 6294 0749 E106     		.2byte	0x6e1
 6295 074b 6B000000 		.4byte	0x6b
 6296 074f 02       		.uleb128 0x2
 6297 0750 91       		.byte	0x91
 6298 0751 6F       		.sleb128 -17
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 167


 6299 0752 00       		.byte	0
 6300 0753 1D       		.uleb128 0x1d
 6301 0754 6D070000 		.4byte	.LASF84
 6302 0758 01       		.byte	0x1
 6303 0759 FF06     		.2byte	0x6ff
 6304 075b 83000000 		.4byte	0x83
 6305 075f 00000000 		.4byte	.LFB24
 6306 0763 58000000 		.4byte	.LFE24-.LFB24
 6307 0767 01       		.uleb128 0x1
 6308 0768 9C       		.byte	0x9c
 6309 0769 9B070000 		.4byte	0x79b
 6310 076d 1B       		.uleb128 0x1b
 6311 076e 706C6C00 		.ascii	"pll\000"
 6312 0772 01       		.byte	0x1
 6313 0773 FF06     		.2byte	0x6ff
 6314 0775 83000000 		.4byte	0x83
 6315 0779 02       		.uleb128 0x2
 6316 077a 91       		.byte	0x91
 6317 077b 64       		.sleb128 -28
 6318 077c 17       		.uleb128 0x17
 6319 077d 8B0A0000 		.4byte	.LASF62
 6320 0781 01       		.byte	0x1
 6321 0782 0107     		.2byte	0x701
 6322 0784 83000000 		.4byte	0x83
 6323 0788 02       		.uleb128 0x2
 6324 0789 91       		.byte	0x91
 6325 078a 68       		.sleb128 -24
 6326 078b 17       		.uleb128 0x17
 6327 078c A8010000 		.4byte	.LASF30
 6328 0790 01       		.byte	0x1
 6329 0791 0207     		.2byte	0x702
 6330 0793 6B000000 		.4byte	0x6b
 6331 0797 02       		.uleb128 0x2
 6332 0798 91       		.byte	0x91
 6333 0799 6F       		.sleb128 -17
 6334 079a 00       		.byte	0
 6335 079b 1D       		.uleb128 0x1d
 6336 079c 00070000 		.4byte	.LASF85
 6337 07a0 01       		.byte	0x1
 6338 07a1 2207     		.2byte	0x722
 6339 07a3 B0000000 		.4byte	0xb0
 6340 07a7 00000000 		.4byte	.LFB25
 6341 07ab 54000000 		.4byte	.LFE25-.LFB25
 6342 07af 01       		.uleb128 0x1
 6343 07b0 9C       		.byte	0x9c
 6344 07b1 F2070000 		.4byte	0x7f2
 6345 07b5 1B       		.uleb128 0x1b
 6346 07b6 706C6C00 		.ascii	"pll\000"
 6347 07ba 01       		.byte	0x1
 6348 07bb 2207     		.2byte	0x722
 6349 07bd 83000000 		.4byte	0x83
 6350 07c1 02       		.uleb128 0x2
 6351 07c2 91       		.byte	0x91
 6352 07c3 64       		.sleb128 -28
 6353 07c4 17       		.uleb128 0x17
 6354 07c5 E6040000 		.4byte	.LASF86
 6355 07c9 01       		.byte	0x1
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 168


 6356 07ca 2407     		.2byte	0x724
 6357 07cc 83000000 		.4byte	0x83
 6358 07d0 02       		.uleb128 0x2
 6359 07d1 91       		.byte	0x91
 6360 07d2 6C       		.sleb128 -20
 6361 07d3 17       		.uleb128 0x17
 6362 07d4 B1050000 		.4byte	.LASF45
 6363 07d8 01       		.byte	0x1
 6364 07d9 2507     		.2byte	0x725
 6365 07db 83000000 		.4byte	0x83
 6366 07df 02       		.uleb128 0x2
 6367 07e0 91       		.byte	0x91
 6368 07e1 70       		.sleb128 -16
 6369 07e2 17       		.uleb128 0x17
 6370 07e3 8B0A0000 		.4byte	.LASF62
 6371 07e7 01       		.byte	0x1
 6372 07e8 2607     		.2byte	0x726
 6373 07ea B0000000 		.4byte	0xb0
 6374 07ee 02       		.uleb128 0x2
 6375 07ef 91       		.byte	0x91
 6376 07f0 74       		.sleb128 -12
 6377 07f1 00       		.byte	0
 6378 07f2 19       		.uleb128 0x19
 6379 07f3 560A0000 		.4byte	.LASF87
 6380 07f7 01       		.byte	0x1
 6381 07f8 4807     		.2byte	0x748
 6382 07fa 83000000 		.4byte	0x83
 6383 07fe 00000000 		.4byte	.LFB26
 6384 0802 74000000 		.4byte	.LFE26-.LFB26
 6385 0806 01       		.uleb128 0x1
 6386 0807 9C       		.byte	0x9c
 6387 0808 3A080000 		.4byte	0x83a
 6388 080c 1B       		.uleb128 0x1b
 6389 080d 706C6C00 		.ascii	"pll\000"
 6390 0811 01       		.byte	0x1
 6391 0812 4807     		.2byte	0x748
 6392 0814 83000000 		.4byte	0x83
 6393 0818 02       		.uleb128 0x2
 6394 0819 91       		.byte	0x91
 6395 081a 64       		.sleb128 -28
 6396 081b 17       		.uleb128 0x17
 6397 081c 4A050000 		.4byte	.LASF59
 6398 0820 01       		.byte	0x1
 6399 0821 4A07     		.2byte	0x74a
 6400 0823 83000000 		.4byte	0x83
 6401 0827 02       		.uleb128 0x2
 6402 0828 91       		.byte	0x91
 6403 0829 6C       		.sleb128 -20
 6404 082a 17       		.uleb128 0x17
 6405 082b A8010000 		.4byte	.LASF30
 6406 082f 01       		.byte	0x1
 6407 0830 4B07     		.2byte	0x74b
 6408 0832 6B000000 		.4byte	0x6b
 6409 0836 02       		.uleb128 0x2
 6410 0837 91       		.byte	0x91
 6411 0838 6B       		.sleb128 -21
 6412 0839 00       		.byte	0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 169


 6413 083a 19       		.uleb128 0x19
 6414 083b C9030000 		.4byte	.LASF88
 6415 083f 01       		.byte	0x1
 6416 0840 7C07     		.2byte	0x77c
 6417 0842 B0000000 		.4byte	0xb0
 6418 0846 00000000 		.4byte	.LFB27
 6419 084a 70010000 		.4byte	.LFE27-.LFB27
 6420 084e 01       		.uleb128 0x1
 6421 084f 9C       		.byte	0x9c
 6422 0850 32090000 		.4byte	0x932
 6423 0854 1B       		.uleb128 0x1b
 6424 0855 706C6C00 		.ascii	"pll\000"
 6425 0859 01       		.byte	0x1
 6426 085a 7C07     		.2byte	0x77c
 6427 085c 83000000 		.4byte	0x83
 6428 0860 02       		.uleb128 0x2
 6429 0861 91       		.byte	0x91
 6430 0862 4C       		.sleb128 -52
 6431 0863 16       		.uleb128 0x16
 6432 0864 C7050000 		.4byte	.LASF89
 6433 0868 01       		.byte	0x1
 6434 0869 7C07     		.2byte	0x77c
 6435 086b 83000000 		.4byte	0x83
 6436 086f 02       		.uleb128 0x2
 6437 0870 91       		.byte	0x91
 6438 0871 48       		.sleb128 -56
 6439 0872 16       		.uleb128 0x16
 6440 0873 00010000 		.4byte	.LASF90
 6441 0877 01       		.byte	0x1
 6442 0878 7C07     		.2byte	0x77c
 6443 087a 83000000 		.4byte	0x83
 6444 087e 02       		.uleb128 0x2
 6445 087f 91       		.byte	0x91
 6446 0880 44       		.sleb128 -60
 6447 0881 16       		.uleb128 0x16
 6448 0882 53090000 		.4byte	.LASF47
 6449 0886 01       		.byte	0x1
 6450 0887 7C07     		.2byte	0x77c
 6451 0889 83000000 		.4byte	0x83
 6452 088d 02       		.uleb128 0x2
 6453 088e 91       		.byte	0x91
 6454 088f 40       		.sleb128 -64
 6455 0890 16       		.uleb128 0x16
 6456 0891 2B060000 		.4byte	.LASF91
 6457 0895 01       		.byte	0x1
 6458 0896 7C07     		.2byte	0x77c
 6459 0898 83000000 		.4byte	0x83
 6460 089c 02       		.uleb128 0x2
 6461 089d 91       		.byte	0x91
 6462 089e 00       		.sleb128 0
 6463 089f 17       		.uleb128 0x17
 6464 08a0 31020000 		.4byte	.LASF92
 6465 08a4 01       		.byte	0x1
 6466 08a5 7E07     		.2byte	0x77e
 6467 08a7 83000000 		.4byte	0x83
 6468 08ab 02       		.uleb128 0x2
 6469 08ac 91       		.byte	0x91
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 170


 6470 08ad 60       		.sleb128 -32
 6471 08ae 17       		.uleb128 0x17
 6472 08af 2E010000 		.4byte	.LASF93
 6473 08b3 01       		.byte	0x1
 6474 08b4 7F07     		.2byte	0x77f
 6475 08b6 83000000 		.4byte	0x83
 6476 08ba 02       		.uleb128 0x2
 6477 08bb 91       		.byte	0x91
 6478 08bc 5C       		.sleb128 -36
 6479 08bd 17       		.uleb128 0x17
 6480 08be 06050000 		.4byte	.LASF94
 6481 08c2 01       		.byte	0x1
 6482 08c3 8107     		.2byte	0x781
 6483 08c5 83000000 		.4byte	0x83
 6484 08c9 02       		.uleb128 0x2
 6485 08ca 91       		.byte	0x91
 6486 08cb 74       		.sleb128 -12
 6487 08cc 17       		.uleb128 0x17
 6488 08cd 18060000 		.4byte	.LASF95
 6489 08d1 01       		.byte	0x1
 6490 08d2 8207     		.2byte	0x782
 6491 08d4 83000000 		.4byte	0x83
 6492 08d8 02       		.uleb128 0x2
 6493 08d9 91       		.byte	0x91
 6494 08da 70       		.sleb128 -16
 6495 08db 1C       		.uleb128 0x1c
 6496 08dc 7100     		.ascii	"q\000"
 6497 08de 01       		.byte	0x1
 6498 08df 8407     		.2byte	0x784
 6499 08e1 83000000 		.4byte	0x83
 6500 08e5 02       		.uleb128 0x2
 6501 08e6 91       		.byte	0x91
 6502 08e7 6C       		.sleb128 -20
 6503 08e8 1C       		.uleb128 0x1c
 6504 08e9 7000     		.ascii	"p\000"
 6505 08eb 01       		.byte	0x1
 6506 08ec 8507     		.2byte	0x785
 6507 08ee 83000000 		.4byte	0x83
 6508 08f2 02       		.uleb128 0x2
 6509 08f3 91       		.byte	0x91
 6510 08f4 58       		.sleb128 -40
 6511 08f5 17       		.uleb128 0x17
 6512 08f6 97010000 		.4byte	.LASF96
 6513 08fa 01       		.byte	0x1
 6514 08fb 8707     		.2byte	0x787
 6515 08fd 83000000 		.4byte	0x83
 6516 0901 02       		.uleb128 0x2
 6517 0902 91       		.byte	0x91
 6518 0903 54       		.sleb128 -44
 6519 0904 17       		.uleb128 0x17
 6520 0905 E2050000 		.4byte	.LASF97
 6521 0909 01       		.byte	0x1
 6522 090a 8807     		.2byte	0x788
 6523 090c 8F000000 		.4byte	0x8f
 6524 0910 02       		.uleb128 0x2
 6525 0911 91       		.byte	0x91
 6526 0912 50       		.sleb128 -48
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 171


 6527 0913 1C       		.uleb128 0x1c
 6528 0914 746D7000 		.ascii	"tmp\000"
 6529 0918 01       		.byte	0x1
 6530 0919 8A07     		.2byte	0x78a
 6531 091b B0000000 		.4byte	0xb0
 6532 091f 02       		.uleb128 0x2
 6533 0920 91       		.byte	0x91
 6534 0921 64       		.sleb128 -28
 6535 0922 17       		.uleb128 0x17
 6536 0923 4A050000 		.4byte	.LASF59
 6537 0927 01       		.byte	0x1
 6538 0928 8B07     		.2byte	0x78b
 6539 092a B0000000 		.4byte	0xb0
 6540 092e 02       		.uleb128 0x2
 6541 092f 91       		.byte	0x91
 6542 0930 68       		.sleb128 -24
 6543 0931 00       		.byte	0
 6544 0932 15       		.uleb128 0x15
 6545 0933 4D000000 		.4byte	.LASF98
 6546 0937 01       		.byte	0x1
 6547 0938 DE07     		.2byte	0x7de
 6548 093a 00000000 		.4byte	.LFB28
 6549 093e 7C000000 		.4byte	.LFE28-.LFB28
 6550 0942 01       		.uleb128 0x1
 6551 0943 9C       		.byte	0x9c
 6552 0944 85090000 		.4byte	0x985
 6553 0948 1B       		.uleb128 0x1b
 6554 0949 706C6C00 		.ascii	"pll\000"
 6555 094d 01       		.byte	0x1
 6556 094e DE07     		.2byte	0x7de
 6557 0950 83000000 		.4byte	0x83
 6558 0954 02       		.uleb128 0x2
 6559 0955 91       		.byte	0x91
 6560 0956 64       		.sleb128 -28
 6561 0957 16       		.uleb128 0x16
 6562 0958 57050000 		.4byte	.LASF99
 6563 095c 01       		.byte	0x1
 6564 095d DE07     		.2byte	0x7de
 6565 095f 83000000 		.4byte	0x83
 6566 0963 02       		.uleb128 0x2
 6567 0964 91       		.byte	0x91
 6568 0965 60       		.sleb128 -32
 6569 0966 17       		.uleb128 0x17
 6570 0967 1D040000 		.4byte	.LASF31
 6571 096b 01       		.byte	0x1
 6572 096c E007     		.2byte	0x7e0
 6573 096e 83000000 		.4byte	0x83
 6574 0972 02       		.uleb128 0x2
 6575 0973 91       		.byte	0x91
 6576 0974 68       		.sleb128 -24
 6577 0975 17       		.uleb128 0x17
 6578 0976 A8010000 		.4byte	.LASF30
 6579 097a 01       		.byte	0x1
 6580 097b E107     		.2byte	0x7e1
 6581 097d 6B000000 		.4byte	0x6b
 6582 0981 02       		.uleb128 0x2
 6583 0982 91       		.byte	0x91
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 172


 6584 0983 6F       		.sleb128 -17
 6585 0984 00       		.byte	0
 6586 0985 19       		.uleb128 0x19
 6587 0986 33010000 		.4byte	.LASF100
 6588 098a 01       		.byte	0x1
 6589 098b 0A08     		.2byte	0x80a
 6590 098d B0000000 		.4byte	0xb0
 6591 0991 00000000 		.4byte	.LFB29
 6592 0995 8C000000 		.4byte	.LFE29-.LFB29
 6593 0999 01       		.uleb128 0x1
 6594 099a 9C       		.byte	0x9c
 6595 099b FA090000 		.4byte	0x9fa
 6596 099f 1B       		.uleb128 0x1b
 6597 09a0 706C6C00 		.ascii	"pll\000"
 6598 09a4 01       		.byte	0x1
 6599 09a5 0A08     		.2byte	0x80a
 6600 09a7 83000000 		.4byte	0x83
 6601 09ab 02       		.uleb128 0x2
 6602 09ac 91       		.byte	0x91
 6603 09ad 5C       		.sleb128 -36
 6604 09ae 16       		.uleb128 0x16
 6605 09af 53090000 		.4byte	.LASF47
 6606 09b3 01       		.byte	0x1
 6607 09b4 0A08     		.2byte	0x80a
 6608 09b6 83000000 		.4byte	0x83
 6609 09ba 02       		.uleb128 0x2
 6610 09bb 91       		.byte	0x91
 6611 09bc 58       		.sleb128 -40
 6612 09bd 17       		.uleb128 0x17
 6613 09be 4F0A0000 		.4byte	.LASF41
 6614 09c2 01       		.byte	0x1
 6615 09c3 0C08     		.2byte	0x80c
 6616 09c5 83000000 		.4byte	0x83
 6617 09c9 02       		.uleb128 0x2
 6618 09ca 91       		.byte	0x91
 6619 09cb 60       		.sleb128 -32
 6620 09cc 17       		.uleb128 0x17
 6621 09cd A8010000 		.4byte	.LASF30
 6622 09d1 01       		.byte	0x1
 6623 09d2 0D08     		.2byte	0x80d
 6624 09d4 6B000000 		.4byte	0x6b
 6625 09d8 02       		.uleb128 0x2
 6626 09d9 91       		.byte	0x91
 6627 09da 6B       		.sleb128 -21
 6628 09db 17       		.uleb128 0x17
 6629 09dc 4A050000 		.4byte	.LASF59
 6630 09e0 01       		.byte	0x1
 6631 09e1 0E08     		.2byte	0x80e
 6632 09e3 B0000000 		.4byte	0xb0
 6633 09e7 02       		.uleb128 0x2
 6634 09e8 91       		.byte	0x91
 6635 09e9 6C       		.sleb128 -20
 6636 09ea 1C       		.uleb128 0x1c
 6637 09eb 746D7000 		.ascii	"tmp\000"
 6638 09ef 01       		.byte	0x1
 6639 09f0 0F08     		.2byte	0x80f
 6640 09f2 B0000000 		.4byte	0xb0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 173


 6641 09f6 02       		.uleb128 0x2
 6642 09f7 91       		.byte	0x91
 6643 09f8 64       		.sleb128 -28
 6644 09f9 00       		.byte	0
 6645 09fa 15       		.uleb128 0x15
 6646 09fb 3F060000 		.4byte	.LASF101
 6647 09ff 01       		.byte	0x1
 6648 0a00 4608     		.2byte	0x846
 6649 0a02 00000000 		.4byte	.LFB30
 6650 0a06 60000000 		.4byte	.LFE30-.LFB30
 6651 0a0a 01       		.uleb128 0x1
 6652 0a0b 9C       		.byte	0x9c
 6653 0a0c 200A0000 		.4byte	0xa20
 6654 0a10 16       		.uleb128 0x16
 6655 0a11 B0060000 		.4byte	.LASF102
 6656 0a15 01       		.byte	0x1
 6657 0a16 4608     		.2byte	0x846
 6658 0a18 83000000 		.4byte	0x83
 6659 0a1c 02       		.uleb128 0x2
 6660 0a1d 91       		.byte	0x91
 6661 0a1e 74       		.sleb128 -12
 6662 0a1f 00       		.byte	0
 6663 0a20 13       		.uleb128 0x13
 6664 0a21 E3080000 		.4byte	.LASF103
 6665 0a25 01       		.byte	0x1
 6666 0a26 6408     		.2byte	0x864
 6667 0a28 00000000 		.4byte	.LFB31
 6668 0a2c 28000000 		.4byte	.LFE31-.LFB31
 6669 0a30 01       		.uleb128 0x1
 6670 0a31 9C       		.byte	0x9c
 6671 0a32 14       		.uleb128 0x14
 6672 0a33 75030000 		.4byte	.LASF104
 6673 0a37 01       		.byte	0x1
 6674 0a38 7608     		.2byte	0x876
 6675 0a3a 83000000 		.4byte	0x83
 6676 0a3e 00000000 		.4byte	.LFB32
 6677 0a42 18000000 		.4byte	.LFE32-.LFB32
 6678 0a46 01       		.uleb128 0x1
 6679 0a47 9C       		.byte	0x9c
 6680 0a48 13       		.uleb128 0x13
 6681 0a49 63020000 		.4byte	.LASF105
 6682 0a4d 01       		.byte	0x1
 6683 0a4e 8608     		.2byte	0x886
 6684 0a50 00000000 		.4byte	.LFB33
 6685 0a54 14000000 		.4byte	.LFE33-.LFB33
 6686 0a58 01       		.uleb128 0x1
 6687 0a59 9C       		.byte	0x9c
 6688 0a5a 1A       		.uleb128 0x1a
 6689 0a5b F6030000 		.4byte	.LASF106
 6690 0a5f 01       		.byte	0x1
 6691 0a60 A008     		.2byte	0x8a0
 6692 0a62 83000000 		.4byte	0x83
 6693 0a66 00000000 		.4byte	.LFB34
 6694 0a6a 30000000 		.4byte	.LFE34-.LFB34
 6695 0a6e 01       		.uleb128 0x1
 6696 0a6f 9C       		.byte	0x9c
 6697 0a70 930A0000 		.4byte	0xa93
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 174


 6698 0a74 16       		.uleb128 0x16
 6699 0a75 60070000 		.4byte	.LASF107
 6700 0a79 01       		.byte	0x1
 6701 0a7a A008     		.2byte	0x8a0
 6702 0a7c 83000000 		.4byte	0x83
 6703 0a80 02       		.uleb128 0x2
 6704 0a81 91       		.byte	0x91
 6705 0a82 6C       		.sleb128 -20
 6706 0a83 17       		.uleb128 0x17
 6707 0a84 4A050000 		.4byte	.LASF59
 6708 0a88 01       		.byte	0x1
 6709 0a89 A208     		.2byte	0x8a2
 6710 0a8b 83000000 		.4byte	0x83
 6711 0a8f 02       		.uleb128 0x2
 6712 0a90 91       		.byte	0x91
 6713 0a91 74       		.sleb128 -12
 6714 0a92 00       		.byte	0
 6715 0a93 1A       		.uleb128 0x1a
 6716 0a94 AB000000 		.4byte	.LASF108
 6717 0a98 01       		.byte	0x1
 6718 0a99 B708     		.2byte	0x8b7
 6719 0a9b 83000000 		.4byte	0x83
 6720 0a9f 00000000 		.4byte	.LFB35
 6721 0aa3 24000000 		.4byte	.LFE35-.LFB35
 6722 0aa7 01       		.uleb128 0x1
 6723 0aa8 9C       		.byte	0x9c
 6724 0aa9 BD0A0000 		.4byte	0xabd
 6725 0aad 17       		.uleb128 0x17
 6726 0aae 1E000000 		.4byte	.LASF109
 6727 0ab2 01       		.byte	0x1
 6728 0ab3 B908     		.2byte	0x8b9
 6729 0ab5 83000000 		.4byte	0x83
 6730 0ab9 02       		.uleb128 0x2
 6731 0aba 91       		.byte	0x91
 6732 0abb 74       		.sleb128 -12
 6733 0abc 00       		.byte	0
 6734 0abd 18       		.uleb128 0x18
 6735 0abe 64040000 		.4byte	.LASF110
 6736 0ac2 01       		.byte	0x1
 6737 0ac3 CE08     		.2byte	0x8ce
 6738 0ac5 00000000 		.4byte	.LFB36
 6739 0ac9 18000000 		.4byte	.LFE36-.LFB36
 6740 0acd 01       		.uleb128 0x1
 6741 0ace 9C       		.byte	0x9c
 6742 0acf E30A0000 		.4byte	0xae3
 6743 0ad3 16       		.uleb128 0x16
 6744 0ad4 AD020000 		.4byte	.LASF111
 6745 0ad8 01       		.byte	0x1
 6746 0ad9 CE08     		.2byte	0x8ce
 6747 0adb 83000000 		.4byte	0x83
 6748 0adf 02       		.uleb128 0x2
 6749 0ae0 91       		.byte	0x91
 6750 0ae1 74       		.sleb128 -12
 6751 0ae2 00       		.byte	0
 6752 0ae3 19       		.uleb128 0x19
 6753 0ae4 F4040000 		.4byte	.LASF112
 6754 0ae8 01       		.byte	0x1
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 175


 6755 0ae9 E708     		.2byte	0x8e7
 6756 0aeb DE000000 		.4byte	0xde
 6757 0aef 00000000 		.4byte	.LFB37
 6758 0af3 48000000 		.4byte	.LFE37-.LFB37
 6759 0af7 01       		.uleb128 0x1
 6760 0af8 9C       		.byte	0x9c
 6761 0af9 3A0B0000 		.4byte	0xb3a
 6762 0afd 16       		.uleb128 0x16
 6763 0afe A6020000 		.4byte	.LASF113
 6764 0b02 01       		.byte	0x1
 6765 0b03 E708     		.2byte	0x8e7
 6766 0b05 6B000000 		.4byte	0x6b
 6767 0b09 02       		.uleb128 0x2
 6768 0b0a 91       		.byte	0x91
 6769 0b0b 6F       		.sleb128 -17
 6770 0b0c 16       		.uleb128 0x16
 6771 0b0d 95050000 		.4byte	.LASF114
 6772 0b11 01       		.byte	0x1
 6773 0b12 E708     		.2byte	0x8e7
 6774 0b14 DE000000 		.4byte	0xde
 6775 0b18 02       		.uleb128 0x2
 6776 0b19 91       		.byte	0x91
 6777 0b1a 68       		.sleb128 -24
 6778 0b1b 17       		.uleb128 0x17
 6779 0b1c F3080000 		.4byte	.LASF115
 6780 0b20 01       		.byte	0x1
 6781 0b21 E908     		.2byte	0x8e9
 6782 0b23 DE000000 		.4byte	0xde
 6783 0b27 02       		.uleb128 0x2
 6784 0b28 91       		.byte	0x91
 6785 0b29 70       		.sleb128 -16
 6786 0b2a 17       		.uleb128 0x17
 6787 0b2b 00000000 		.4byte	.LASF116
 6788 0b2f 01       		.byte	0x1
 6789 0b30 EA08     		.2byte	0x8ea
 6790 0b32 3A0B0000 		.4byte	0xb3a
 6791 0b36 02       		.uleb128 0x2
 6792 0b37 91       		.byte	0x91
 6793 0b38 74       		.sleb128 -12
 6794 0b39 00       		.byte	0
 6795 0b3a 06       		.uleb128 0x6
 6796 0b3b 04       		.byte	0x4
 6797 0b3c DE000000 		.4byte	0xde
 6798 0b40 19       		.uleb128 0x19
 6799 0b41 1F070000 		.4byte	.LASF117
 6800 0b45 01       		.byte	0x1
 6801 0b46 0909     		.2byte	0x909
 6802 0b48 DE000000 		.4byte	0xde
 6803 0b4c 00000000 		.4byte	.LFB38
 6804 0b50 34000000 		.4byte	.LFE38-.LFB38
 6805 0b54 01       		.uleb128 0x1
 6806 0b55 9C       		.byte	0x9c
 6807 0b56 790B0000 		.4byte	0xb79
 6808 0b5a 16       		.uleb128 0x16
 6809 0b5b A6020000 		.4byte	.LASF113
 6810 0b5f 01       		.byte	0x1
 6811 0b60 0909     		.2byte	0x909
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 176


 6812 0b62 6B000000 		.4byte	0x6b
 6813 0b66 02       		.uleb128 0x2
 6814 0b67 91       		.byte	0x91
 6815 0b68 6F       		.sleb128 -17
 6816 0b69 17       		.uleb128 0x17
 6817 0b6a 00000000 		.4byte	.LASF116
 6818 0b6e 01       		.byte	0x1
 6819 0b6f 0B09     		.2byte	0x90b
 6820 0b71 3A0B0000 		.4byte	0xb3a
 6821 0b75 02       		.uleb128 0x2
 6822 0b76 91       		.byte	0x91
 6823 0b77 74       		.sleb128 -12
 6824 0b78 00       		.byte	0
 6825 0b79 19       		.uleb128 0x19
 6826 0b7a 81020000 		.4byte	.LASF118
 6827 0b7e 01       		.byte	0x1
 6828 0b7f 1F09     		.2byte	0x91f
 6829 0b81 DE000000 		.4byte	0xde
 6830 0b85 00000000 		.4byte	.LFB39
 6831 0b89 4C000000 		.4byte	.LFE39-.LFB39
 6832 0b8d 01       		.uleb128 0x1
 6833 0b8e 9C       		.byte	0x9c
 6834 0b8f D00B0000 		.4byte	0xbd0
 6835 0b93 16       		.uleb128 0x16
 6836 0b94 A6020000 		.4byte	.LASF113
 6837 0b98 01       		.byte	0x1
 6838 0b99 1F09     		.2byte	0x91f
 6839 0b9b 6B000000 		.4byte	0x6b
 6840 0b9f 02       		.uleb128 0x2
 6841 0ba0 91       		.byte	0x91
 6842 0ba1 6F       		.sleb128 -17
 6843 0ba2 16       		.uleb128 0x16
 6844 0ba3 95050000 		.4byte	.LASF114
 6845 0ba7 01       		.byte	0x1
 6846 0ba8 1F09     		.2byte	0x91f
 6847 0baa DE000000 		.4byte	0xde
 6848 0bae 02       		.uleb128 0x2
 6849 0baf 91       		.byte	0x91
 6850 0bb0 68       		.sleb128 -24
 6851 0bb1 17       		.uleb128 0x17
 6852 0bb2 F3080000 		.4byte	.LASF115
 6853 0bb6 01       		.byte	0x1
 6854 0bb7 2109     		.2byte	0x921
 6855 0bb9 DE000000 		.4byte	0xde
 6856 0bbd 02       		.uleb128 0x2
 6857 0bbe 91       		.byte	0x91
 6858 0bbf 70       		.sleb128 -16
 6859 0bc0 17       		.uleb128 0x17
 6860 0bc1 00000000 		.4byte	.LASF116
 6861 0bc5 01       		.byte	0x1
 6862 0bc6 2209     		.2byte	0x922
 6863 0bc8 3A0B0000 		.4byte	0xb3a
 6864 0bcc 02       		.uleb128 0x2
 6865 0bcd 91       		.byte	0x91
 6866 0bce 74       		.sleb128 -12
 6867 0bcf 00       		.byte	0
 6868 0bd0 19       		.uleb128 0x19
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 177


 6869 0bd1 76060000 		.4byte	.LASF119
 6870 0bd5 01       		.byte	0x1
 6871 0bd6 3B09     		.2byte	0x93b
 6872 0bd8 DE000000 		.4byte	0xde
 6873 0bdc 00000000 		.4byte	.LFB40
 6874 0be0 36000000 		.4byte	.LFE40-.LFB40
 6875 0be4 01       		.uleb128 0x1
 6876 0be5 9C       		.byte	0x9c
 6877 0be6 090C0000 		.4byte	0xc09
 6878 0bea 16       		.uleb128 0x16
 6879 0beb A6020000 		.4byte	.LASF113
 6880 0bef 01       		.byte	0x1
 6881 0bf0 3B09     		.2byte	0x93b
 6882 0bf2 6B000000 		.4byte	0x6b
 6883 0bf6 02       		.uleb128 0x2
 6884 0bf7 91       		.byte	0x91
 6885 0bf8 6F       		.sleb128 -17
 6886 0bf9 17       		.uleb128 0x17
 6887 0bfa 00000000 		.4byte	.LASF116
 6888 0bfe 01       		.byte	0x1
 6889 0bff 3D09     		.2byte	0x93d
 6890 0c01 3A0B0000 		.4byte	0xb3a
 6891 0c05 02       		.uleb128 0x2
 6892 0c06 91       		.byte	0x91
 6893 0c07 74       		.sleb128 -12
 6894 0c08 00       		.byte	0
 6895 0c09 15       		.uleb128 0x15
 6896 0c0a 86040000 		.4byte	.LASF120
 6897 0c0e 01       		.byte	0x1
 6898 0c0f 4E09     		.2byte	0x94e
 6899 0c11 00000000 		.4byte	.LFB41
 6900 0c15 A8000000 		.4byte	.LFE41-.LFB41
 6901 0c19 01       		.uleb128 0x1
 6902 0c1a 9C       		.byte	0x9c
 6903 0c1b 6B0C0000 		.4byte	0xc6b
 6904 0c1f 16       		.uleb128 0x16
 6905 0c20 A6020000 		.4byte	.LASF113
 6906 0c24 01       		.byte	0x1
 6907 0c25 4E09     		.2byte	0x94e
 6908 0c27 6B000000 		.4byte	0x6b
 6909 0c2b 02       		.uleb128 0x2
 6910 0c2c 91       		.byte	0x91
 6911 0c2d 5F       		.sleb128 -33
 6912 0c2e 16       		.uleb128 0x16
 6913 0c2f 5B040000 		.4byte	.LASF121
 6914 0c33 01       		.byte	0x1
 6915 0c34 4E09     		.2byte	0x94e
 6916 0c36 6B000000 		.4byte	0x6b
 6917 0c3a 02       		.uleb128 0x2
 6918 0c3b 91       		.byte	0x91
 6919 0c3c 5E       		.sleb128 -34
 6920 0c3d 17       		.uleb128 0x17
 6921 0c3e A8010000 		.4byte	.LASF30
 6922 0c42 01       		.byte	0x1
 6923 0c43 5009     		.2byte	0x950
 6924 0c45 6B000000 		.4byte	0x6b
 6925 0c49 02       		.uleb128 0x2
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 178


 6926 0c4a 91       		.byte	0x91
 6927 0c4b 6B       		.sleb128 -21
 6928 0c4c 17       		.uleb128 0x17
 6929 0c4d 5D020000 		.4byte	.LASF122
 6930 0c51 01       		.byte	0x1
 6931 0c52 5109     		.2byte	0x951
 6932 0c54 83000000 		.4byte	0x83
 6933 0c58 02       		.uleb128 0x2
 6934 0c59 91       		.byte	0x91
 6935 0c5a 6C       		.sleb128 -20
 6936 0c5b 17       		.uleb128 0x17
 6937 0c5c 27000000 		.4byte	.LASF123
 6938 0c60 01       		.byte	0x1
 6939 0c61 5209     		.2byte	0x952
 6940 0c63 83000000 		.4byte	0x83
 6941 0c67 02       		.uleb128 0x2
 6942 0c68 91       		.byte	0x91
 6943 0c69 64       		.sleb128 -28
 6944 0c6a 00       		.byte	0
 6945 0c6b 19       		.uleb128 0x19
 6946 0c6c E3020000 		.4byte	.LASF124
 6947 0c70 01       		.byte	0x1
 6948 0c71 7009     		.2byte	0x970
 6949 0c73 6B000000 		.4byte	0x6b
 6950 0c77 00000000 		.4byte	.LFB42
 6951 0c7b 5C000000 		.4byte	.LFE42-.LFB42
 6952 0c7f 01       		.uleb128 0x1
 6953 0c80 9C       		.byte	0x9c
 6954 0c81 A40C0000 		.4byte	0xca4
 6955 0c85 16       		.uleb128 0x16
 6956 0c86 A6020000 		.4byte	.LASF113
 6957 0c8a 01       		.byte	0x1
 6958 0c8b 7009     		.2byte	0x970
 6959 0c8d 6B000000 		.4byte	0x6b
 6960 0c91 02       		.uleb128 0x2
 6961 0c92 91       		.byte	0x91
 6962 0c93 6F       		.sleb128 -17
 6963 0c94 17       		.uleb128 0x17
 6964 0c95 5B040000 		.4byte	.LASF121
 6965 0c99 01       		.byte	0x1
 6966 0c9a 7209     		.2byte	0x972
 6967 0c9c 6B000000 		.4byte	0x6b
 6968 0ca0 02       		.uleb128 0x2
 6969 0ca1 91       		.byte	0x91
 6970 0ca2 77       		.sleb128 -9
 6971 0ca3 00       		.byte	0
 6972 0ca4 18       		.uleb128 0x18
 6973 0ca5 9D050000 		.4byte	.LASF125
 6974 0ca9 01       		.byte	0x1
 6975 0caa 8509     		.2byte	0x985
 6976 0cac 00000000 		.4byte	.LFB43
 6977 0cb0 28000000 		.4byte	.LFE43-.LFB43
 6978 0cb4 01       		.uleb128 0x1
 6979 0cb5 9C       		.byte	0x9c
 6980 0cb6 CA0C0000 		.4byte	0xcca
 6981 0cba 16       		.uleb128 0x16
 6982 0cbb A6020000 		.4byte	.LASF113
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 179


 6983 0cbf 01       		.byte	0x1
 6984 0cc0 8509     		.2byte	0x985
 6985 0cc2 6B000000 		.4byte	0x6b
 6986 0cc6 02       		.uleb128 0x2
 6987 0cc7 91       		.byte	0x91
 6988 0cc8 77       		.sleb128 -9
 6989 0cc9 00       		.byte	0
 6990 0cca 1A       		.uleb128 0x1a
 6991 0ccb 9B080000 		.4byte	.LASF126
 6992 0ccf 01       		.byte	0x1
 6993 0cd0 9709     		.2byte	0x997
 6994 0cd2 6B000000 		.4byte	0x6b
 6995 0cd6 00000000 		.4byte	.LFB44
 6996 0cda 30000000 		.4byte	.LFE44-.LFB44
 6997 0cde 01       		.uleb128 0x1
 6998 0cdf 9C       		.byte	0x9c
 6999 0ce0 F40C0000 		.4byte	0xcf4
 7000 0ce4 16       		.uleb128 0x16
 7001 0ce5 A6020000 		.4byte	.LASF113
 7002 0ce9 01       		.byte	0x1
 7003 0cea 9709     		.2byte	0x997
 7004 0cec 6B000000 		.4byte	0x6b
 7005 0cf0 02       		.uleb128 0x2
 7006 0cf1 91       		.byte	0x91
 7007 0cf2 77       		.sleb128 -9
 7008 0cf3 00       		.byte	0
 7009 0cf4 18       		.uleb128 0x18
 7010 0cf5 53070000 		.4byte	.LASF127
 7011 0cf9 01       		.byte	0x1
 7012 0cfa A709     		.2byte	0x9a7
 7013 0cfc 00000000 		.4byte	.LFB45
 7014 0d00 28000000 		.4byte	.LFE45-.LFB45
 7015 0d04 01       		.uleb128 0x1
 7016 0d05 9C       		.byte	0x9c
 7017 0d06 1A0D0000 		.4byte	0xd1a
 7018 0d0a 16       		.uleb128 0x16
 7019 0d0b A6020000 		.4byte	.LASF113
 7020 0d0f 01       		.byte	0x1
 7021 0d10 A709     		.2byte	0x9a7
 7022 0d12 6B000000 		.4byte	0x6b
 7023 0d16 02       		.uleb128 0x2
 7024 0d17 91       		.byte	0x91
 7025 0d18 77       		.sleb128 -9
 7026 0d19 00       		.byte	0
 7027 0d1a 18       		.uleb128 0x18
 7028 0d1b A6030000 		.4byte	.LASF128
 7029 0d1f 01       		.byte	0x1
 7030 0d20 B509     		.2byte	0x9b5
 7031 0d22 00000000 		.4byte	.LFB46
 7032 0d26 28000000 		.4byte	.LFE46-.LFB46
 7033 0d2a 01       		.uleb128 0x1
 7034 0d2b 9C       		.byte	0x9c
 7035 0d2c 400D0000 		.4byte	0xd40
 7036 0d30 16       		.uleb128 0x16
 7037 0d31 A6020000 		.4byte	.LASF113
 7038 0d35 01       		.byte	0x1
 7039 0d36 B509     		.2byte	0x9b5
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 180


 7040 0d38 6B000000 		.4byte	0x6b
 7041 0d3c 02       		.uleb128 0x2
 7042 0d3d 91       		.byte	0x91
 7043 0d3e 77       		.sleb128 -9
 7044 0d3f 00       		.byte	0
 7045 0d40 18       		.uleb128 0x18
 7046 0d41 D4040000 		.4byte	.LASF129
 7047 0d45 01       		.byte	0x1
 7048 0d46 C409     		.2byte	0x9c4
 7049 0d48 00000000 		.4byte	.LFB47
 7050 0d4c 28000000 		.4byte	.LFE47-.LFB47
 7051 0d50 01       		.uleb128 0x1
 7052 0d51 9C       		.byte	0x9c
 7053 0d52 660D0000 		.4byte	0xd66
 7054 0d56 16       		.uleb128 0x16
 7055 0d57 A6020000 		.4byte	.LASF113
 7056 0d5b 01       		.byte	0x1
 7057 0d5c C409     		.2byte	0x9c4
 7058 0d5e 6B000000 		.4byte	0x6b
 7059 0d62 02       		.uleb128 0x2
 7060 0d63 91       		.byte	0x91
 7061 0d64 77       		.sleb128 -9
 7062 0d65 00       		.byte	0
 7063 0d66 18       		.uleb128 0x18
 7064 0d67 40030000 		.4byte	.LASF130
 7065 0d6b 01       		.byte	0x1
 7066 0d6c D309     		.2byte	0x9d3
 7067 0d6e 00000000 		.4byte	.LFB48
 7068 0d72 14000000 		.4byte	.LFE48-.LFB48
 7069 0d76 01       		.uleb128 0x1
 7070 0d77 9C       		.byte	0x9c
 7071 0d78 8C0D0000 		.4byte	0xd8c
 7072 0d7c 16       		.uleb128 0x16
 7073 0d7d 60070000 		.4byte	.LASF107
 7074 0d81 01       		.byte	0x1
 7075 0d82 D309     		.2byte	0x9d3
 7076 0d84 6B000000 		.4byte	0x6b
 7077 0d88 02       		.uleb128 0x2
 7078 0d89 91       		.byte	0x91
 7079 0d8a 77       		.sleb128 -9
 7080 0d8b 00       		.byte	0
 7081 0d8c 13       		.uleb128 0x13
 7082 0d8d 4F010000 		.4byte	.LASF131
 7083 0d91 01       		.byte	0x1
 7084 0d92 EB09     		.2byte	0x9eb
 7085 0d94 00000000 		.4byte	.LFB49
 7086 0d98 20000000 		.4byte	.LFE49-.LFB49
 7087 0d9c 01       		.uleb128 0x1
 7088 0d9d 9C       		.byte	0x9c
 7089 0d9e 15       		.uleb128 0x15
 7090 0d9f A9080000 		.4byte	.LASF132
 7091 0da3 01       		.byte	0x1
 7092 0da4 FF09     		.2byte	0x9ff
 7093 0da6 00000000 		.4byte	.LFB50
 7094 0daa 48000000 		.4byte	.LFE50-.LFB50
 7095 0dae 01       		.uleb128 0x1
 7096 0daf 9C       		.byte	0x9c
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 181


 7097 0db0 C40D0000 		.4byte	0xdc4
 7098 0db4 16       		.uleb128 0x16
 7099 0db5 85060000 		.4byte	.LASF133
 7100 0db9 01       		.byte	0x1
 7101 0dba FF09     		.2byte	0x9ff
 7102 0dbc 83000000 		.4byte	0x83
 7103 0dc0 02       		.uleb128 0x2
 7104 0dc1 91       		.byte	0x91
 7105 0dc2 74       		.sleb128 -12
 7106 0dc3 00       		.byte	0
 7107 0dc4 15       		.uleb128 0x15
 7108 0dc5 BD010000 		.4byte	.LASF134
 7109 0dc9 01       		.byte	0x1
 7110 0dca 160A     		.2byte	0xa16
 7111 0dcc 00000000 		.4byte	.LFB51
 7112 0dd0 28000000 		.4byte	.LFE51-.LFB51
 7113 0dd4 01       		.uleb128 0x1
 7114 0dd5 9C       		.byte	0x9c
 7115 0dd6 EA0D0000 		.4byte	0xdea
 7116 0dda 16       		.uleb128 0x16
 7117 0ddb 10090000 		.4byte	.LASF135
 7118 0ddf 01       		.byte	0x1
 7119 0de0 160A     		.2byte	0xa16
 7120 0de2 77000000 		.4byte	0x77
 7121 0de6 02       		.uleb128 0x2
 7122 0de7 91       		.byte	0x91
 7123 0de8 76       		.sleb128 -10
 7124 0de9 00       		.byte	0
 7125 0dea 15       		.uleb128 0x15
 7126 0deb 9C010000 		.4byte	.LASF136
 7127 0def 01       		.byte	0x1
 7128 0df0 240A     		.2byte	0xa24
 7129 0df2 00000000 		.4byte	.LFB52
 7130 0df6 84000000 		.4byte	.LFE52-.LFB52
 7131 0dfa 01       		.uleb128 0x1
 7132 0dfb 9C       		.byte	0x9c
 7133 0dfc 100E0000 		.4byte	0xe10
 7134 0e00 16       		.uleb128 0x16
 7135 0e01 92010000 		.4byte	.LASF29
 7136 0e05 01       		.byte	0x1
 7137 0e06 240A     		.2byte	0xa24
 7138 0e08 83000000 		.4byte	0x83
 7139 0e0c 02       		.uleb128 0x2
 7140 0e0d 91       		.byte	0x91
 7141 0e0e 74       		.sleb128 -12
 7142 0e0f 00       		.byte	0
 7143 0e10 1E       		.uleb128 0x1e
 7144 0e11 3B050000 		.4byte	.LASF137
 7145 0e15 01       		.byte	0x1
 7146 0e16 440A     		.2byte	0xa44
 7147 0e18 00000000 		.4byte	.LFB53
 7148 0e1c 24000000 		.4byte	.LFE53-.LFB53
 7149 0e20 01       		.uleb128 0x1
 7150 0e21 9C       		.byte	0x9c
 7151 0e22 15       		.uleb128 0x15
 7152 0e23 07030000 		.4byte	.LASF138
 7153 0e27 01       		.byte	0x1
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 182


 7154 0e28 610A     		.2byte	0xa61
 7155 0e2a 00000000 		.4byte	.LFB54
 7156 0e2e 64000000 		.4byte	.LFE54-.LFB54
 7157 0e32 01       		.uleb128 0x1
 7158 0e33 9C       		.byte	0x9c
 7159 0e34 460E0000 		.4byte	0xe46
 7160 0e38 1C       		.uleb128 0x1c
 7161 0e39 6900     		.ascii	"i\000"
 7162 0e3b 01       		.byte	0x1
 7163 0e3c 630A     		.2byte	0xa63
 7164 0e3e 83000000 		.4byte	0x83
 7165 0e42 02       		.uleb128 0x2
 7166 0e43 91       		.byte	0x91
 7167 0e44 74       		.sleb128 -12
 7168 0e45 00       		.byte	0
 7169 0e46 1E       		.uleb128 0x1e
 7170 0e47 E2070000 		.4byte	.LASF139
 7171 0e4b 01       		.byte	0x1
 7172 0e4c 800A     		.2byte	0xa80
 7173 0e4e 00000000 		.4byte	.LFB55
 7174 0e52 1C000000 		.4byte	.LFE55-.LFB55
 7175 0e56 01       		.uleb128 0x1
 7176 0e57 9C       		.byte	0x9c
 7177 0e58 13       		.uleb128 0x13
 7178 0e59 3B090000 		.4byte	.LASF140
 7179 0e5d 01       		.byte	0x1
 7180 0e5e 910A     		.2byte	0xa91
 7181 0e60 00000000 		.4byte	.LFB56
 7182 0e64 18000000 		.4byte	.LFE56-.LFB56
 7183 0e68 01       		.uleb128 0x1
 7184 0e69 9C       		.byte	0x9c
 7185 0e6a 13       		.uleb128 0x13
 7186 0e6b 5F010000 		.4byte	.LASF141
 7187 0e6f 01       		.byte	0x1
 7188 0e70 A10A     		.2byte	0xaa1
 7189 0e72 00000000 		.4byte	.LFB57
 7190 0e76 18000000 		.4byte	.LFE57-.LFB57
 7191 0e7a 01       		.uleb128 0x1
 7192 0e7b 9C       		.byte	0x9c
 7193 0e7c 13       		.uleb128 0x13
 7194 0e7d C9080000 		.4byte	.LASF142
 7195 0e81 01       		.byte	0x1
 7196 0e82 B10A     		.2byte	0xab1
 7197 0e84 00000000 		.4byte	.LFB58
 7198 0e88 18000000 		.4byte	.LFE58-.LFB58
 7199 0e8c 01       		.uleb128 0x1
 7200 0e8d 9C       		.byte	0x9c
 7201 0e8e 18       		.uleb128 0x18
 7202 0e8f B6030000 		.4byte	.LASF143
 7203 0e93 01       		.byte	0x1
 7204 0e94 C20A     		.2byte	0xac2
 7205 0e96 00000000 		.4byte	.LFB59
 7206 0e9a 1C000000 		.4byte	.LFE59-.LFB59
 7207 0e9e 01       		.uleb128 0x1
 7208 0e9f 9C       		.byte	0x9c
 7209 0ea0 B40E0000 		.4byte	0xeb4
 7210 0ea4 16       		.uleb128 0x16
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 183


 7211 0ea5 27000000 		.4byte	.LASF123
 7212 0ea9 01       		.byte	0x1
 7213 0eaa C20A     		.2byte	0xac2
 7214 0eac 83000000 		.4byte	0x83
 7215 0eb0 02       		.uleb128 0x2
 7216 0eb1 91       		.byte	0x91
 7217 0eb2 74       		.sleb128 -12
 7218 0eb3 00       		.byte	0
 7219 0eb4 14       		.uleb128 0x14
 7220 0eb5 C7010000 		.4byte	.LASF144
 7221 0eb9 01       		.byte	0x1
 7222 0eba D20A     		.2byte	0xad2
 7223 0ebc 83000000 		.4byte	0x83
 7224 0ec0 00000000 		.4byte	.LFB60
 7225 0ec4 18000000 		.4byte	.LFE60-.LFB60
 7226 0ec8 01       		.uleb128 0x1
 7227 0ec9 9C       		.byte	0x9c
 7228 0eca 14       		.uleb128 0x14
 7229 0ecb F8050000 		.4byte	.LASF145
 7230 0ecf 01       		.byte	0x1
 7231 0ed0 E20A     		.2byte	0xae2
 7232 0ed2 83000000 		.4byte	0x83
 7233 0ed6 00000000 		.4byte	.LFB61
 7234 0eda 18000000 		.4byte	.LFE61-.LFB61
 7235 0ede 01       		.uleb128 0x1
 7236 0edf 9C       		.byte	0x9c
 7237 0ee0 18       		.uleb128 0x18
 7238 0ee1 24040000 		.4byte	.LASF146
 7239 0ee5 01       		.byte	0x1
 7240 0ee6 020B     		.2byte	0xb02
 7241 0ee8 00000000 		.4byte	.LFB62
 7242 0eec 34000000 		.4byte	.LFE62-.LFB62
 7243 0ef0 01       		.uleb128 0x1
 7244 0ef1 9C       		.byte	0x9c
 7245 0ef2 060F0000 		.4byte	0xf06
 7246 0ef6 16       		.uleb128 0x16
 7247 0ef7 26030000 		.4byte	.LASF147
 7248 0efb 01       		.byte	0x1
 7249 0efc 020B     		.2byte	0xb02
 7250 0efe 83000000 		.4byte	0x83
 7251 0f02 02       		.uleb128 0x2
 7252 0f03 91       		.byte	0x91
 7253 0f04 74       		.sleb128 -12
 7254 0f05 00       		.byte	0
 7255 0f06 14       		.uleb128 0x14
 7256 0f07 B1080000 		.4byte	.LASF148
 7257 0f0b 01       		.byte	0x1
 7258 0f0c 1B0B     		.2byte	0xb1b
 7259 0f0e 83000000 		.4byte	0x83
 7260 0f12 00000000 		.4byte	.LFB63
 7261 0f16 18000000 		.4byte	.LFE63-.LFB63
 7262 0f1a 01       		.uleb128 0x1
 7263 0f1b 9C       		.byte	0x9c
 7264 0f1c 14       		.uleb128 0x14
 7265 0f1d 60060000 		.4byte	.LASF149
 7266 0f21 01       		.byte	0x1
 7267 0f22 320B     		.2byte	0xb32
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 184


 7268 0f24 83000000 		.4byte	0x83
 7269 0f28 00000000 		.4byte	.LFB64
 7270 0f2c 18000000 		.4byte	.LFE64-.LFB64
 7271 0f30 01       		.uleb128 0x1
 7272 0f31 9C       		.byte	0x9c
 7273 0f32 13       		.uleb128 0x13
 7274 0f33 54030000 		.4byte	.LASF150
 7275 0f37 01       		.byte	0x1
 7276 0f38 3F0B     		.2byte	0xb3f
 7277 0f3a 00000000 		.4byte	.LFB65
 7278 0f3e 14000000 		.4byte	.LFE65-.LFB65
 7279 0f42 01       		.uleb128 0x1
 7280 0f43 9C       		.byte	0x9c
 7281 0f44 1A       		.uleb128 0x1a
 7282 0f45 F2090000 		.4byte	.LASF151
 7283 0f49 01       		.byte	0x1
 7284 0f4a 620B     		.2byte	0xb62
 7285 0f4c F8000000 		.4byte	0xf8
 7286 0f50 00000000 		.4byte	.LFB66
 7287 0f54 2C000000 		.4byte	.LFE66-.LFB66
 7288 0f58 01       		.uleb128 0x1
 7289 0f59 9C       		.byte	0x9c
 7290 0f5a 8C0F0000 		.4byte	0xf8c
 7291 0f5e 16       		.uleb128 0x16
 7292 0f5f A6020000 		.4byte	.LASF113
 7293 0f63 01       		.byte	0x1
 7294 0f64 620B     		.2byte	0xb62
 7295 0f66 83000000 		.4byte	0x83
 7296 0f6a 02       		.uleb128 0x2
 7297 0f6b 91       		.byte	0x91
 7298 0f6c 6C       		.sleb128 -20
 7299 0f6d 16       		.uleb128 0x16
 7300 0f6e BE050000 		.4byte	.LASF152
 7301 0f72 01       		.byte	0x1
 7302 0f73 620B     		.2byte	0xb62
 7303 0f75 F8000000 		.4byte	0xf8
 7304 0f79 02       		.uleb128 0x2
 7305 0f7a 91       		.byte	0x91
 7306 0f7b 68       		.sleb128 -24
 7307 0f7c 17       		.uleb128 0x17
 7308 0f7d A4000000 		.4byte	.LASF153
 7309 0f81 01       		.byte	0x1
 7310 0f82 640B     		.2byte	0xb64
 7311 0f84 F8000000 		.4byte	0xf8
 7312 0f88 02       		.uleb128 0x2
 7313 0f89 91       		.byte	0x91
 7314 0f8a 74       		.sleb128 -12
 7315 0f8b 00       		.byte	0
 7316 0f8c 1A       		.uleb128 0x1a
 7317 0f8d 07020000 		.4byte	.LASF154
 7318 0f91 01       		.byte	0x1
 7319 0f92 7A0B     		.2byte	0xb7a
 7320 0f94 F8000000 		.4byte	0xf8
 7321 0f98 00000000 		.4byte	.LFB67
 7322 0f9c 1C000000 		.4byte	.LFE67-.LFB67
 7323 0fa0 01       		.uleb128 0x1
 7324 0fa1 9C       		.byte	0x9c
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 185


 7325 0fa2 B60F0000 		.4byte	0xfb6
 7326 0fa6 16       		.uleb128 0x16
 7327 0fa7 A6020000 		.4byte	.LASF113
 7328 0fab 01       		.byte	0x1
 7329 0fac 7A0B     		.2byte	0xb7a
 7330 0fae 83000000 		.4byte	0x83
 7331 0fb2 02       		.uleb128 0x2
 7332 0fb3 91       		.byte	0x91
 7333 0fb4 74       		.sleb128 -12
 7334 0fb5 00       		.byte	0
 7335 0fb6 1F       		.uleb128 0x1f
 7336 0fb7 710A0000 		.4byte	.LASF175
 7337 0fbb 01       		.byte	0x1
 7338 0fbc 870B     		.2byte	0xb87
 7339 0fbe 00000000 		.4byte	.LFB68
 7340 0fc2 44000000 		.4byte	.LFE68-.LFB68
 7341 0fc6 01       		.uleb128 0x1
 7342 0fc7 9C       		.byte	0x9c
 7343 0fc8 DA0F0000 		.4byte	0xfda
 7344 0fcc 1C       		.uleb128 0x1c
 7345 0fcd 6900     		.ascii	"i\000"
 7346 0fcf 01       		.byte	0x1
 7347 0fd0 890B     		.2byte	0xb89
 7348 0fd2 83000000 		.4byte	0x83
 7349 0fd6 02       		.uleb128 0x2
 7350 0fd7 91       		.byte	0x91
 7351 0fd8 74       		.sleb128 -12
 7352 0fd9 00       		.byte	0
 7353 0fda 18       		.uleb128 0x18
 7354 0fdb 32030000 		.4byte	.LASF155
 7355 0fdf 01       		.byte	0x1
 7356 0fe0 A70B     		.2byte	0xba7
 7357 0fe2 00000000 		.4byte	.LFB69
 7358 0fe6 C0000000 		.4byte	.LFE69-.LFB69
 7359 0fea 01       		.uleb128 0x1
 7360 0feb 9C       		.byte	0x9c
 7361 0fec 00100000 		.4byte	0x1000
 7362 0ff0 16       		.uleb128 0x16
 7363 0ff1 86080000 		.4byte	.LASF156
 7364 0ff5 01       		.byte	0x1
 7365 0ff6 A70B     		.2byte	0xba7
 7366 0ff8 00100000 		.4byte	0x1000
 7367 0ffc 02       		.uleb128 0x2
 7368 0ffd 91       		.byte	0x91
 7369 0ffe 74       		.sleb128 -12
 7370 0fff 00       		.byte	0
 7371 1000 06       		.uleb128 0x6
 7372 1001 04       		.byte	0x4
 7373 1002 83000000 		.4byte	0x83
 7374 1006 18       		.uleb128 0x18
 7375 1007 CB060000 		.4byte	.LASF157
 7376 100b 01       		.byte	0x1
 7377 100c D30B     		.2byte	0xbd3
 7378 100e 00000000 		.4byte	.LFB70
 7379 1012 38000000 		.4byte	.LFE70-.LFB70
 7380 1016 01       		.uleb128 0x1
 7381 1017 9C       		.byte	0x9c
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 186


 7382 1018 3B100000 		.4byte	0x103b
 7383 101c 16       		.uleb128 0x16
 7384 101d 57050000 		.4byte	.LASF99
 7385 1021 01       		.byte	0x1
 7386 1022 D30B     		.2byte	0xbd3
 7387 1024 83000000 		.4byte	0x83
 7388 1028 02       		.uleb128 0x2
 7389 1029 91       		.byte	0x91
 7390 102a 6C       		.sleb128 -20
 7391 102b 17       		.uleb128 0x17
 7392 102c 1D040000 		.4byte	.LASF31
 7393 1030 01       		.byte	0x1
 7394 1031 D50B     		.2byte	0xbd5
 7395 1033 83000000 		.4byte	0x83
 7396 1037 02       		.uleb128 0x2
 7397 1038 91       		.byte	0x91
 7398 1039 74       		.sleb128 -12
 7399 103a 00       		.byte	0
 7400 103b 18       		.uleb128 0x18
 7401 103c B5040000 		.4byte	.LASF158
 7402 1040 01       		.byte	0x1
 7403 1041 EE0B     		.2byte	0xbee
 7404 1043 00000000 		.4byte	.LFB71
 7405 1047 38000000 		.4byte	.LFE71-.LFB71
 7406 104b 01       		.uleb128 0x1
 7407 104c 9C       		.byte	0x9c
 7408 104d 70100000 		.4byte	0x1070
 7409 1051 16       		.uleb128 0x16
 7410 1052 57050000 		.4byte	.LASF99
 7411 1056 01       		.byte	0x1
 7412 1057 EE0B     		.2byte	0xbee
 7413 1059 83000000 		.4byte	0x83
 7414 105d 02       		.uleb128 0x2
 7415 105e 91       		.byte	0x91
 7416 105f 6C       		.sleb128 -20
 7417 1060 17       		.uleb128 0x17
 7418 1061 1D040000 		.4byte	.LASF31
 7419 1065 01       		.byte	0x1
 7420 1066 F00B     		.2byte	0xbf0
 7421 1068 83000000 		.4byte	0x83
 7422 106c 02       		.uleb128 0x2
 7423 106d 91       		.byte	0x91
 7424 106e 74       		.sleb128 -12
 7425 106f 00       		.byte	0
 7426 1070 18       		.uleb128 0x18
 7427 1071 1D090000 		.4byte	.LASF159
 7428 1075 01       		.byte	0x1
 7429 1076 090C     		.2byte	0xc09
 7430 1078 00000000 		.4byte	.LFB72
 7431 107c 38000000 		.4byte	.LFE72-.LFB72
 7432 1080 01       		.uleb128 0x1
 7433 1081 9C       		.byte	0x9c
 7434 1082 A5100000 		.4byte	0x10a5
 7435 1086 16       		.uleb128 0x16
 7436 1087 57050000 		.4byte	.LASF99
 7437 108b 01       		.byte	0x1
 7438 108c 090C     		.2byte	0xc09
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 187


 7439 108e 83000000 		.4byte	0x83
 7440 1092 02       		.uleb128 0x2
 7441 1093 91       		.byte	0x91
 7442 1094 6C       		.sleb128 -20
 7443 1095 17       		.uleb128 0x17
 7444 1096 1D040000 		.4byte	.LASF31
 7445 109a 01       		.byte	0x1
 7446 109b 0B0C     		.2byte	0xc0b
 7447 109d 83000000 		.4byte	0x83
 7448 10a1 02       		.uleb128 0x2
 7449 10a2 91       		.byte	0x91
 7450 10a3 74       		.sleb128 -12
 7451 10a4 00       		.byte	0
 7452 10a5 15       		.uleb128 0x15
 7453 10a6 67050000 		.4byte	.LASF160
 7454 10aa 01       		.byte	0x1
 7455 10ab 260C     		.2byte	0xc26
 7456 10ad 00000000 		.4byte	.LFB73
 7457 10b1 A0000000 		.4byte	.LFE73-.LFB73
 7458 10b5 01       		.uleb128 0x1
 7459 10b6 9C       		.byte	0x9c
 7460 10b7 E9100000 		.4byte	0x10e9
 7461 10bb 16       		.uleb128 0x16
 7462 10bc 1E010000 		.4byte	.LASF161
 7463 10c0 01       		.byte	0x1
 7464 10c1 260C     		.2byte	0xc26
 7465 10c3 83000000 		.4byte	0x83
 7466 10c7 02       		.uleb128 0x2
 7467 10c8 91       		.byte	0x91
 7468 10c9 6C       		.sleb128 -20
 7469 10ca 16       		.uleb128 0x16
 7470 10cb 57050000 		.4byte	.LASF99
 7471 10cf 01       		.byte	0x1
 7472 10d0 260C     		.2byte	0xc26
 7473 10d2 83000000 		.4byte	0x83
 7474 10d6 02       		.uleb128 0x2
 7475 10d7 91       		.byte	0x91
 7476 10d8 68       		.sleb128 -24
 7477 10d9 17       		.uleb128 0x17
 7478 10da 1D040000 		.4byte	.LASF31
 7479 10de 01       		.byte	0x1
 7480 10df 280C     		.2byte	0xc28
 7481 10e1 83000000 		.4byte	0x83
 7482 10e5 02       		.uleb128 0x2
 7483 10e6 91       		.byte	0x91
 7484 10e7 74       		.sleb128 -12
 7485 10e8 00       		.byte	0
 7486 10e9 0C       		.uleb128 0xc
 7487 10ea F8000000 		.4byte	0xf8
 7488 10ee F9100000 		.4byte	0x10f9
 7489 10f2 0D       		.uleb128 0xd
 7490 10f3 F1000000 		.4byte	0xf1
 7491 10f7 04       		.byte	0x4
 7492 10f8 00       		.byte	0
 7493 10f9 12       		.uleb128 0x12
 7494 10fa 65080000 		.4byte	.LASF162
 7495 10fe 01       		.byte	0x1
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 188


 7496 10ff 22       		.byte	0x22
 7497 1100 E9100000 		.4byte	0x10e9
 7498 1104 05       		.uleb128 0x5
 7499 1105 03       		.byte	0x3
 7500 1106 00000000 		.4byte	CySysTickCallbacks
 7501 110a 20       		.uleb128 0x20
 7502 110b 0A060000 		.4byte	.LASF163
 7503 110f 01       		.byte	0x1
 7504 1110 1B       		.byte	0x1b
 7505 1111 83000000 		.4byte	0x83
 7506 1115 05       		.uleb128 0x5
 7507 1116 03       		.byte	0x3
 7508 1117 00000000 		.4byte	cydelayFreqHz
 7509 111b 20       		.uleb128 0x20
 7510 111c 22020000 		.4byte	.LASF164
 7511 1120 01       		.byte	0x1
 7512 1121 1C       		.byte	0x1c
 7513 1122 83000000 		.4byte	0x83
 7514 1126 05       		.uleb128 0x5
 7515 1127 03       		.byte	0x3
 7516 1128 00000000 		.4byte	cydelayFreqKhz
 7517 112c 20       		.uleb128 0x20
 7518 112d FA080000 		.4byte	.LASF165
 7519 1131 01       		.byte	0x1
 7520 1132 1D       		.byte	0x1d
 7521 1133 6B000000 		.4byte	0x6b
 7522 1137 05       		.uleb128 0x5
 7523 1138 03       		.byte	0x3
 7524 1139 00000000 		.4byte	cydelayFreqMhz
 7525 113d 20       		.uleb128 0x20
 7526 113e F4020000 		.4byte	.LASF166
 7527 1142 01       		.byte	0x1
 7528 1143 1E       		.byte	0x1e
 7529 1144 83000000 		.4byte	0x83
 7530 1148 05       		.uleb128 0x5
 7531 1149 03       		.byte	0x3
 7532 114a 00000000 		.4byte	cydelay32kMs
 7533 114e 20       		.uleb128 0x20
 7534 114f 08010000 		.4byte	.LASF167
 7535 1153 01       		.byte	0x1
 7536 1154 36       		.byte	0x36
 7537 1155 83000000 		.4byte	0x83
 7538 1159 05       		.uleb128 0x5
 7539 115a 03       		.byte	0x3
 7540 115b 00000000 		.4byte	CySysTickInitVar
 7541 115f 0C       		.uleb128 0xc
 7542 1160 6B000000 		.4byte	0x6b
 7543 1164 6F110000 		.4byte	0x116f
 7544 1168 0D       		.uleb128 0xd
 7545 1169 F1000000 		.4byte	0xf1
 7546 116d 2D       		.byte	0x2d
 7547 116e 00       		.byte	0
 7548 116f 20       		.uleb128 0x20
 7549 1170 D1050000 		.4byte	.LASF168
 7550 1174 01       		.byte	0x1
 7551 1175 3B       		.byte	0x3b
 7552 1176 80110000 		.4byte	0x1180
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 189


 7553 117a 05       		.uleb128 0x5
 7554 117b 03       		.byte	0x3
 7555 117c 00000000 		.4byte	cyImoFreqMhz2Reg
 7556 1180 21       		.uleb128 0x21
 7557 1181 5F110000 		.4byte	0x115f
 7558 1185 0C       		.uleb128 0xc
 7559 1186 6B000000 		.4byte	0x6b
 7560 118a 95110000 		.4byte	0x1195
 7561 118e 0D       		.uleb128 0xd
 7562 118f F1000000 		.4byte	0xf1
 7563 1193 16       		.byte	0x16
 7564 1194 00       		.byte	0
 7565 1195 20       		.uleb128 0x20
 7566 1196 BD070000 		.4byte	.LASF169
 7567 119a 01       		.byte	0x1
 7568 119b 4C       		.byte	0x4c
 7569 119c A6110000 		.4byte	0x11a6
 7570 11a0 05       		.uleb128 0x5
 7571 11a1 03       		.byte	0x3
 7572 11a2 00000000 		.4byte	cyImoFreqMhz2DpllOffset
 7573 11a6 21       		.uleb128 0x21
 7574 11a7 85110000 		.4byte	0x1185
 7575 11ab 20       		.uleb128 0x20
 7576 11ac E7050000 		.4byte	.LASF170
 7577 11b0 01       		.byte	0x1
 7578 11b1 57       		.byte	0x57
 7579 11b2 83000000 		.4byte	0x83
 7580 11b6 05       		.uleb128 0x5
 7581 11b7 03       		.byte	0x3
 7582 11b8 00000000 		.4byte	CySysClkImoTrim4
 7583 11bc 20       		.uleb128 0x20
 7584 11bd 62000000 		.4byte	.LASF171
 7585 11c1 01       		.byte	0x1
 7586 11c2 5B       		.byte	0x5b
 7587 11c3 83000000 		.4byte	0x83
 7588 11c7 05       		.uleb128 0x5
 7589 11c8 03       		.byte	0x3
 7590 11c9 00000000 		.4byte	CySysClkPumpConfig
 7591 11cd 00       		.byte	0
 7592              		.section	.debug_abbrev,"",%progbits
 7593              	.Ldebug_abbrev0:
 7594 0000 01       		.uleb128 0x1
 7595 0001 11       		.uleb128 0x11
 7596 0002 01       		.byte	0x1
 7597 0003 25       		.uleb128 0x25
 7598 0004 0E       		.uleb128 0xe
 7599 0005 13       		.uleb128 0x13
 7600 0006 0B       		.uleb128 0xb
 7601 0007 03       		.uleb128 0x3
 7602 0008 0E       		.uleb128 0xe
 7603 0009 1B       		.uleb128 0x1b
 7604 000a 0E       		.uleb128 0xe
 7605 000b 55       		.uleb128 0x55
 7606 000c 17       		.uleb128 0x17
 7607 000d 11       		.uleb128 0x11
 7608 000e 01       		.uleb128 0x1
 7609 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 190


 7610 0010 17       		.uleb128 0x17
 7611 0011 00       		.byte	0
 7612 0012 00       		.byte	0
 7613 0013 02       		.uleb128 0x2
 7614 0014 24       		.uleb128 0x24
 7615 0015 00       		.byte	0
 7616 0016 0B       		.uleb128 0xb
 7617 0017 0B       		.uleb128 0xb
 7618 0018 3E       		.uleb128 0x3e
 7619 0019 0B       		.uleb128 0xb
 7620 001a 03       		.uleb128 0x3
 7621 001b 0E       		.uleb128 0xe
 7622 001c 00       		.byte	0
 7623 001d 00       		.byte	0
 7624 001e 03       		.uleb128 0x3
 7625 001f 24       		.uleb128 0x24
 7626 0020 00       		.byte	0
 7627 0021 0B       		.uleb128 0xb
 7628 0022 0B       		.uleb128 0xb
 7629 0023 3E       		.uleb128 0x3e
 7630 0024 0B       		.uleb128 0xb
 7631 0025 03       		.uleb128 0x3
 7632 0026 08       		.uleb128 0x8
 7633 0027 00       		.byte	0
 7634 0028 00       		.byte	0
 7635 0029 04       		.uleb128 0x4
 7636 002a 16       		.uleb128 0x16
 7637 002b 00       		.byte	0
 7638 002c 03       		.uleb128 0x3
 7639 002d 0E       		.uleb128 0xe
 7640 002e 3A       		.uleb128 0x3a
 7641 002f 0B       		.uleb128 0xb
 7642 0030 3B       		.uleb128 0x3b
 7643 0031 05       		.uleb128 0x5
 7644 0032 49       		.uleb128 0x49
 7645 0033 13       		.uleb128 0x13
 7646 0034 00       		.byte	0
 7647 0035 00       		.byte	0
 7648 0036 05       		.uleb128 0x5
 7649 0037 35       		.uleb128 0x35
 7650 0038 00       		.byte	0
 7651 0039 49       		.uleb128 0x49
 7652 003a 13       		.uleb128 0x13
 7653 003b 00       		.byte	0
 7654 003c 00       		.byte	0
 7655 003d 06       		.uleb128 0x6
 7656 003e 0F       		.uleb128 0xf
 7657 003f 00       		.byte	0
 7658 0040 0B       		.uleb128 0xb
 7659 0041 0B       		.uleb128 0xb
 7660 0042 49       		.uleb128 0x49
 7661 0043 13       		.uleb128 0x13
 7662 0044 00       		.byte	0
 7663 0045 00       		.byte	0
 7664 0046 07       		.uleb128 0x7
 7665 0047 15       		.uleb128 0x15
 7666 0048 00       		.byte	0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 191


 7667 0049 27       		.uleb128 0x27
 7668 004a 19       		.uleb128 0x19
 7669 004b 00       		.byte	0
 7670 004c 00       		.byte	0
 7671 004d 08       		.uleb128 0x8
 7672 004e 16       		.uleb128 0x16
 7673 004f 00       		.byte	0
 7674 0050 03       		.uleb128 0x3
 7675 0051 0E       		.uleb128 0xe
 7676 0052 3A       		.uleb128 0x3a
 7677 0053 0B       		.uleb128 0xb
 7678 0054 3B       		.uleb128 0x3b
 7679 0055 0B       		.uleb128 0xb
 7680 0056 49       		.uleb128 0x49
 7681 0057 13       		.uleb128 0x13
 7682 0058 00       		.byte	0
 7683 0059 00       		.byte	0
 7684 005a 09       		.uleb128 0x9
 7685 005b 13       		.uleb128 0x13
 7686 005c 01       		.byte	0x1
 7687 005d 0B       		.uleb128 0xb
 7688 005e 0B       		.uleb128 0xb
 7689 005f 3A       		.uleb128 0x3a
 7690 0060 0B       		.uleb128 0xb
 7691 0061 3B       		.uleb128 0x3b
 7692 0062 05       		.uleb128 0x5
 7693 0063 01       		.uleb128 0x1
 7694 0064 13       		.uleb128 0x13
 7695 0065 00       		.byte	0
 7696 0066 00       		.byte	0
 7697 0067 0A       		.uleb128 0xa
 7698 0068 0D       		.uleb128 0xd
 7699 0069 00       		.byte	0
 7700 006a 03       		.uleb128 0x3
 7701 006b 0E       		.uleb128 0xe
 7702 006c 3A       		.uleb128 0x3a
 7703 006d 0B       		.uleb128 0xb
 7704 006e 3B       		.uleb128 0x3b
 7705 006f 05       		.uleb128 0x5
 7706 0070 49       		.uleb128 0x49
 7707 0071 13       		.uleb128 0x13
 7708 0072 38       		.uleb128 0x38
 7709 0073 0B       		.uleb128 0xb
 7710 0074 00       		.byte	0
 7711 0075 00       		.byte	0
 7712 0076 0B       		.uleb128 0xb
 7713 0077 0D       		.uleb128 0xd
 7714 0078 00       		.byte	0
 7715 0079 03       		.uleb128 0x3
 7716 007a 08       		.uleb128 0x8
 7717 007b 3A       		.uleb128 0x3a
 7718 007c 0B       		.uleb128 0xb
 7719 007d 3B       		.uleb128 0x3b
 7720 007e 05       		.uleb128 0x5
 7721 007f 49       		.uleb128 0x49
 7722 0080 13       		.uleb128 0x13
 7723 0081 38       		.uleb128 0x38
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 192


 7724 0082 0B       		.uleb128 0xb
 7725 0083 00       		.byte	0
 7726 0084 00       		.byte	0
 7727 0085 0C       		.uleb128 0xc
 7728 0086 01       		.uleb128 0x1
 7729 0087 01       		.byte	0x1
 7730 0088 49       		.uleb128 0x49
 7731 0089 13       		.uleb128 0x13
 7732 008a 01       		.uleb128 0x1
 7733 008b 13       		.uleb128 0x13
 7734 008c 00       		.byte	0
 7735 008d 00       		.byte	0
 7736 008e 0D       		.uleb128 0xd
 7737 008f 21       		.uleb128 0x21
 7738 0090 00       		.byte	0
 7739 0091 49       		.uleb128 0x49
 7740 0092 13       		.uleb128 0x13
 7741 0093 2F       		.uleb128 0x2f
 7742 0094 0B       		.uleb128 0xb
 7743 0095 00       		.byte	0
 7744 0096 00       		.byte	0
 7745 0097 0E       		.uleb128 0xe
 7746 0098 2E       		.uleb128 0x2e
 7747 0099 00       		.byte	0
 7748 009a 3F       		.uleb128 0x3f
 7749 009b 19       		.uleb128 0x19
 7750 009c 03       		.uleb128 0x3
 7751 009d 0E       		.uleb128 0xe
 7752 009e 3A       		.uleb128 0x3a
 7753 009f 0B       		.uleb128 0xb
 7754 00a0 3B       		.uleb128 0x3b
 7755 00a1 0B       		.uleb128 0xb
 7756 00a2 27       		.uleb128 0x27
 7757 00a3 19       		.uleb128 0x19
 7758 00a4 11       		.uleb128 0x11
 7759 00a5 01       		.uleb128 0x1
 7760 00a6 12       		.uleb128 0x12
 7761 00a7 06       		.uleb128 0x6
 7762 00a8 40       		.uleb128 0x40
 7763 00a9 18       		.uleb128 0x18
 7764 00aa 9742     		.uleb128 0x2117
 7765 00ac 19       		.uleb128 0x19
 7766 00ad 00       		.byte	0
 7767 00ae 00       		.byte	0
 7768 00af 0F       		.uleb128 0xf
 7769 00b0 2E       		.uleb128 0x2e
 7770 00b1 00       		.byte	0
 7771 00b2 3F       		.uleb128 0x3f
 7772 00b3 19       		.uleb128 0x19
 7773 00b4 03       		.uleb128 0x3
 7774 00b5 0E       		.uleb128 0xe
 7775 00b6 3A       		.uleb128 0x3a
 7776 00b7 0B       		.uleb128 0xb
 7777 00b8 3B       		.uleb128 0x3b
 7778 00b9 0B       		.uleb128 0xb
 7779 00ba 27       		.uleb128 0x27
 7780 00bb 19       		.uleb128 0x19
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 193


 7781 00bc 11       		.uleb128 0x11
 7782 00bd 01       		.uleb128 0x1
 7783 00be 12       		.uleb128 0x12
 7784 00bf 06       		.uleb128 0x6
 7785 00c0 40       		.uleb128 0x40
 7786 00c1 18       		.uleb128 0x18
 7787 00c2 9642     		.uleb128 0x2116
 7788 00c4 19       		.uleb128 0x19
 7789 00c5 00       		.byte	0
 7790 00c6 00       		.byte	0
 7791 00c7 10       		.uleb128 0x10
 7792 00c8 2E       		.uleb128 0x2e
 7793 00c9 01       		.byte	0x1
 7794 00ca 3F       		.uleb128 0x3f
 7795 00cb 19       		.uleb128 0x19
 7796 00cc 03       		.uleb128 0x3
 7797 00cd 0E       		.uleb128 0xe
 7798 00ce 3A       		.uleb128 0x3a
 7799 00cf 0B       		.uleb128 0xb
 7800 00d0 3B       		.uleb128 0x3b
 7801 00d1 0B       		.uleb128 0xb
 7802 00d2 27       		.uleb128 0x27
 7803 00d3 19       		.uleb128 0x19
 7804 00d4 11       		.uleb128 0x11
 7805 00d5 01       		.uleb128 0x1
 7806 00d6 12       		.uleb128 0x12
 7807 00d7 06       		.uleb128 0x6
 7808 00d8 40       		.uleb128 0x40
 7809 00d9 18       		.uleb128 0x18
 7810 00da 9642     		.uleb128 0x2116
 7811 00dc 19       		.uleb128 0x19
 7812 00dd 01       		.uleb128 0x1
 7813 00de 13       		.uleb128 0x13
 7814 00df 00       		.byte	0
 7815 00e0 00       		.byte	0
 7816 00e1 11       		.uleb128 0x11
 7817 00e2 34       		.uleb128 0x34
 7818 00e3 00       		.byte	0
 7819 00e4 03       		.uleb128 0x3
 7820 00e5 08       		.uleb128 0x8
 7821 00e6 3A       		.uleb128 0x3a
 7822 00e7 0B       		.uleb128 0xb
 7823 00e8 3B       		.uleb128 0x3b
 7824 00e9 0B       		.uleb128 0xb
 7825 00ea 49       		.uleb128 0x49
 7826 00eb 13       		.uleb128 0x13
 7827 00ec 02       		.uleb128 0x2
 7828 00ed 18       		.uleb128 0x18
 7829 00ee 00       		.byte	0
 7830 00ef 00       		.byte	0
 7831 00f0 12       		.uleb128 0x12
 7832 00f1 34       		.uleb128 0x34
 7833 00f2 00       		.byte	0
 7834 00f3 03       		.uleb128 0x3
 7835 00f4 0E       		.uleb128 0xe
 7836 00f5 3A       		.uleb128 0x3a
 7837 00f6 0B       		.uleb128 0xb
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 194


 7838 00f7 3B       		.uleb128 0x3b
 7839 00f8 0B       		.uleb128 0xb
 7840 00f9 49       		.uleb128 0x49
 7841 00fa 13       		.uleb128 0x13
 7842 00fb 02       		.uleb128 0x2
 7843 00fc 18       		.uleb128 0x18
 7844 00fd 00       		.byte	0
 7845 00fe 00       		.byte	0
 7846 00ff 13       		.uleb128 0x13
 7847 0100 2E       		.uleb128 0x2e
 7848 0101 00       		.byte	0
 7849 0102 3F       		.uleb128 0x3f
 7850 0103 19       		.uleb128 0x19
 7851 0104 03       		.uleb128 0x3
 7852 0105 0E       		.uleb128 0xe
 7853 0106 3A       		.uleb128 0x3a
 7854 0107 0B       		.uleb128 0xb
 7855 0108 3B       		.uleb128 0x3b
 7856 0109 05       		.uleb128 0x5
 7857 010a 27       		.uleb128 0x27
 7858 010b 19       		.uleb128 0x19
 7859 010c 11       		.uleb128 0x11
 7860 010d 01       		.uleb128 0x1
 7861 010e 12       		.uleb128 0x12
 7862 010f 06       		.uleb128 0x6
 7863 0110 40       		.uleb128 0x40
 7864 0111 18       		.uleb128 0x18
 7865 0112 9742     		.uleb128 0x2117
 7866 0114 19       		.uleb128 0x19
 7867 0115 00       		.byte	0
 7868 0116 00       		.byte	0
 7869 0117 14       		.uleb128 0x14
 7870 0118 2E       		.uleb128 0x2e
 7871 0119 00       		.byte	0
 7872 011a 3F       		.uleb128 0x3f
 7873 011b 19       		.uleb128 0x19
 7874 011c 03       		.uleb128 0x3
 7875 011d 0E       		.uleb128 0xe
 7876 011e 3A       		.uleb128 0x3a
 7877 011f 0B       		.uleb128 0xb
 7878 0120 3B       		.uleb128 0x3b
 7879 0121 05       		.uleb128 0x5
 7880 0122 27       		.uleb128 0x27
 7881 0123 19       		.uleb128 0x19
 7882 0124 49       		.uleb128 0x49
 7883 0125 13       		.uleb128 0x13
 7884 0126 11       		.uleb128 0x11
 7885 0127 01       		.uleb128 0x1
 7886 0128 12       		.uleb128 0x12
 7887 0129 06       		.uleb128 0x6
 7888 012a 40       		.uleb128 0x40
 7889 012b 18       		.uleb128 0x18
 7890 012c 9742     		.uleb128 0x2117
 7891 012e 19       		.uleb128 0x19
 7892 012f 00       		.byte	0
 7893 0130 00       		.byte	0
 7894 0131 15       		.uleb128 0x15
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 195


 7895 0132 2E       		.uleb128 0x2e
 7896 0133 01       		.byte	0x1
 7897 0134 3F       		.uleb128 0x3f
 7898 0135 19       		.uleb128 0x19
 7899 0136 03       		.uleb128 0x3
 7900 0137 0E       		.uleb128 0xe
 7901 0138 3A       		.uleb128 0x3a
 7902 0139 0B       		.uleb128 0xb
 7903 013a 3B       		.uleb128 0x3b
 7904 013b 05       		.uleb128 0x5
 7905 013c 27       		.uleb128 0x27
 7906 013d 19       		.uleb128 0x19
 7907 013e 11       		.uleb128 0x11
 7908 013f 01       		.uleb128 0x1
 7909 0140 12       		.uleb128 0x12
 7910 0141 06       		.uleb128 0x6
 7911 0142 40       		.uleb128 0x40
 7912 0143 18       		.uleb128 0x18
 7913 0144 9642     		.uleb128 0x2116
 7914 0146 19       		.uleb128 0x19
 7915 0147 01       		.uleb128 0x1
 7916 0148 13       		.uleb128 0x13
 7917 0149 00       		.byte	0
 7918 014a 00       		.byte	0
 7919 014b 16       		.uleb128 0x16
 7920 014c 05       		.uleb128 0x5
 7921 014d 00       		.byte	0
 7922 014e 03       		.uleb128 0x3
 7923 014f 0E       		.uleb128 0xe
 7924 0150 3A       		.uleb128 0x3a
 7925 0151 0B       		.uleb128 0xb
 7926 0152 3B       		.uleb128 0x3b
 7927 0153 05       		.uleb128 0x5
 7928 0154 49       		.uleb128 0x49
 7929 0155 13       		.uleb128 0x13
 7930 0156 02       		.uleb128 0x2
 7931 0157 18       		.uleb128 0x18
 7932 0158 00       		.byte	0
 7933 0159 00       		.byte	0
 7934 015a 17       		.uleb128 0x17
 7935 015b 34       		.uleb128 0x34
 7936 015c 00       		.byte	0
 7937 015d 03       		.uleb128 0x3
 7938 015e 0E       		.uleb128 0xe
 7939 015f 3A       		.uleb128 0x3a
 7940 0160 0B       		.uleb128 0xb
 7941 0161 3B       		.uleb128 0x3b
 7942 0162 05       		.uleb128 0x5
 7943 0163 49       		.uleb128 0x49
 7944 0164 13       		.uleb128 0x13
 7945 0165 02       		.uleb128 0x2
 7946 0166 18       		.uleb128 0x18
 7947 0167 00       		.byte	0
 7948 0168 00       		.byte	0
 7949 0169 18       		.uleb128 0x18
 7950 016a 2E       		.uleb128 0x2e
 7951 016b 01       		.byte	0x1
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 196


 7952 016c 3F       		.uleb128 0x3f
 7953 016d 19       		.uleb128 0x19
 7954 016e 03       		.uleb128 0x3
 7955 016f 0E       		.uleb128 0xe
 7956 0170 3A       		.uleb128 0x3a
 7957 0171 0B       		.uleb128 0xb
 7958 0172 3B       		.uleb128 0x3b
 7959 0173 05       		.uleb128 0x5
 7960 0174 27       		.uleb128 0x27
 7961 0175 19       		.uleb128 0x19
 7962 0176 11       		.uleb128 0x11
 7963 0177 01       		.uleb128 0x1
 7964 0178 12       		.uleb128 0x12
 7965 0179 06       		.uleb128 0x6
 7966 017a 40       		.uleb128 0x40
 7967 017b 18       		.uleb128 0x18
 7968 017c 9742     		.uleb128 0x2117
 7969 017e 19       		.uleb128 0x19
 7970 017f 01       		.uleb128 0x1
 7971 0180 13       		.uleb128 0x13
 7972 0181 00       		.byte	0
 7973 0182 00       		.byte	0
 7974 0183 19       		.uleb128 0x19
 7975 0184 2E       		.uleb128 0x2e
 7976 0185 01       		.byte	0x1
 7977 0186 3F       		.uleb128 0x3f
 7978 0187 19       		.uleb128 0x19
 7979 0188 03       		.uleb128 0x3
 7980 0189 0E       		.uleb128 0xe
 7981 018a 3A       		.uleb128 0x3a
 7982 018b 0B       		.uleb128 0xb
 7983 018c 3B       		.uleb128 0x3b
 7984 018d 05       		.uleb128 0x5
 7985 018e 27       		.uleb128 0x27
 7986 018f 19       		.uleb128 0x19
 7987 0190 49       		.uleb128 0x49
 7988 0191 13       		.uleb128 0x13
 7989 0192 11       		.uleb128 0x11
 7990 0193 01       		.uleb128 0x1
 7991 0194 12       		.uleb128 0x12
 7992 0195 06       		.uleb128 0x6
 7993 0196 40       		.uleb128 0x40
 7994 0197 18       		.uleb128 0x18
 7995 0198 9642     		.uleb128 0x2116
 7996 019a 19       		.uleb128 0x19
 7997 019b 01       		.uleb128 0x1
 7998 019c 13       		.uleb128 0x13
 7999 019d 00       		.byte	0
 8000 019e 00       		.byte	0
 8001 019f 1A       		.uleb128 0x1a
 8002 01a0 2E       		.uleb128 0x2e
 8003 01a1 01       		.byte	0x1
 8004 01a2 3F       		.uleb128 0x3f
 8005 01a3 19       		.uleb128 0x19
 8006 01a4 03       		.uleb128 0x3
 8007 01a5 0E       		.uleb128 0xe
 8008 01a6 3A       		.uleb128 0x3a
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 197


 8009 01a7 0B       		.uleb128 0xb
 8010 01a8 3B       		.uleb128 0x3b
 8011 01a9 05       		.uleb128 0x5
 8012 01aa 27       		.uleb128 0x27
 8013 01ab 19       		.uleb128 0x19
 8014 01ac 49       		.uleb128 0x49
 8015 01ad 13       		.uleb128 0x13
 8016 01ae 11       		.uleb128 0x11
 8017 01af 01       		.uleb128 0x1
 8018 01b0 12       		.uleb128 0x12
 8019 01b1 06       		.uleb128 0x6
 8020 01b2 40       		.uleb128 0x40
 8021 01b3 18       		.uleb128 0x18
 8022 01b4 9742     		.uleb128 0x2117
 8023 01b6 19       		.uleb128 0x19
 8024 01b7 01       		.uleb128 0x1
 8025 01b8 13       		.uleb128 0x13
 8026 01b9 00       		.byte	0
 8027 01ba 00       		.byte	0
 8028 01bb 1B       		.uleb128 0x1b
 8029 01bc 05       		.uleb128 0x5
 8030 01bd 00       		.byte	0
 8031 01be 03       		.uleb128 0x3
 8032 01bf 08       		.uleb128 0x8
 8033 01c0 3A       		.uleb128 0x3a
 8034 01c1 0B       		.uleb128 0xb
 8035 01c2 3B       		.uleb128 0x3b
 8036 01c3 05       		.uleb128 0x5
 8037 01c4 49       		.uleb128 0x49
 8038 01c5 13       		.uleb128 0x13
 8039 01c6 02       		.uleb128 0x2
 8040 01c7 18       		.uleb128 0x18
 8041 01c8 00       		.byte	0
 8042 01c9 00       		.byte	0
 8043 01ca 1C       		.uleb128 0x1c
 8044 01cb 34       		.uleb128 0x34
 8045 01cc 00       		.byte	0
 8046 01cd 03       		.uleb128 0x3
 8047 01ce 08       		.uleb128 0x8
 8048 01cf 3A       		.uleb128 0x3a
 8049 01d0 0B       		.uleb128 0xb
 8050 01d1 3B       		.uleb128 0x3b
 8051 01d2 05       		.uleb128 0x5
 8052 01d3 49       		.uleb128 0x49
 8053 01d4 13       		.uleb128 0x13
 8054 01d5 02       		.uleb128 0x2
 8055 01d6 18       		.uleb128 0x18
 8056 01d7 00       		.byte	0
 8057 01d8 00       		.byte	0
 8058 01d9 1D       		.uleb128 0x1d
 8059 01da 2E       		.uleb128 0x2e
 8060 01db 01       		.byte	0x1
 8061 01dc 03       		.uleb128 0x3
 8062 01dd 0E       		.uleb128 0xe
 8063 01de 3A       		.uleb128 0x3a
 8064 01df 0B       		.uleb128 0xb
 8065 01e0 3B       		.uleb128 0x3b
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 198


 8066 01e1 05       		.uleb128 0x5
 8067 01e2 27       		.uleb128 0x27
 8068 01e3 19       		.uleb128 0x19
 8069 01e4 49       		.uleb128 0x49
 8070 01e5 13       		.uleb128 0x13
 8071 01e6 11       		.uleb128 0x11
 8072 01e7 01       		.uleb128 0x1
 8073 01e8 12       		.uleb128 0x12
 8074 01e9 06       		.uleb128 0x6
 8075 01ea 40       		.uleb128 0x40
 8076 01eb 18       		.uleb128 0x18
 8077 01ec 9642     		.uleb128 0x2116
 8078 01ee 19       		.uleb128 0x19
 8079 01ef 01       		.uleb128 0x1
 8080 01f0 13       		.uleb128 0x13
 8081 01f1 00       		.byte	0
 8082 01f2 00       		.byte	0
 8083 01f3 1E       		.uleb128 0x1e
 8084 01f4 2E       		.uleb128 0x2e
 8085 01f5 00       		.byte	0
 8086 01f6 3F       		.uleb128 0x3f
 8087 01f7 19       		.uleb128 0x19
 8088 01f8 03       		.uleb128 0x3
 8089 01f9 0E       		.uleb128 0xe
 8090 01fa 3A       		.uleb128 0x3a
 8091 01fb 0B       		.uleb128 0xb
 8092 01fc 3B       		.uleb128 0x3b
 8093 01fd 05       		.uleb128 0x5
 8094 01fe 27       		.uleb128 0x27
 8095 01ff 19       		.uleb128 0x19
 8096 0200 11       		.uleb128 0x11
 8097 0201 01       		.uleb128 0x1
 8098 0202 12       		.uleb128 0x12
 8099 0203 06       		.uleb128 0x6
 8100 0204 40       		.uleb128 0x40
 8101 0205 18       		.uleb128 0x18
 8102 0206 9642     		.uleb128 0x2116
 8103 0208 19       		.uleb128 0x19
 8104 0209 00       		.byte	0
 8105 020a 00       		.byte	0
 8106 020b 1F       		.uleb128 0x1f
 8107 020c 2E       		.uleb128 0x2e
 8108 020d 01       		.byte	0x1
 8109 020e 03       		.uleb128 0x3
 8110 020f 0E       		.uleb128 0xe
 8111 0210 3A       		.uleb128 0x3a
 8112 0211 0B       		.uleb128 0xb
 8113 0212 3B       		.uleb128 0x3b
 8114 0213 05       		.uleb128 0x5
 8115 0214 27       		.uleb128 0x27
 8116 0215 19       		.uleb128 0x19
 8117 0216 11       		.uleb128 0x11
 8118 0217 01       		.uleb128 0x1
 8119 0218 12       		.uleb128 0x12
 8120 0219 06       		.uleb128 0x6
 8121 021a 40       		.uleb128 0x40
 8122 021b 18       		.uleb128 0x18
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 199


 8123 021c 9642     		.uleb128 0x2116
 8124 021e 19       		.uleb128 0x19
 8125 021f 01       		.uleb128 0x1
 8126 0220 13       		.uleb128 0x13
 8127 0221 00       		.byte	0
 8128 0222 00       		.byte	0
 8129 0223 20       		.uleb128 0x20
 8130 0224 34       		.uleb128 0x34
 8131 0225 00       		.byte	0
 8132 0226 03       		.uleb128 0x3
 8133 0227 0E       		.uleb128 0xe
 8134 0228 3A       		.uleb128 0x3a
 8135 0229 0B       		.uleb128 0xb
 8136 022a 3B       		.uleb128 0x3b
 8137 022b 0B       		.uleb128 0xb
 8138 022c 49       		.uleb128 0x49
 8139 022d 13       		.uleb128 0x13
 8140 022e 3F       		.uleb128 0x3f
 8141 022f 19       		.uleb128 0x19
 8142 0230 02       		.uleb128 0x2
 8143 0231 18       		.uleb128 0x18
 8144 0232 00       		.byte	0
 8145 0233 00       		.byte	0
 8146 0234 21       		.uleb128 0x21
 8147 0235 26       		.uleb128 0x26
 8148 0236 00       		.byte	0
 8149 0237 49       		.uleb128 0x49
 8150 0238 13       		.uleb128 0x13
 8151 0239 00       		.byte	0
 8152 023a 00       		.byte	0
 8153 023b 00       		.byte	0
 8154              		.section	.debug_aranges,"",%progbits
 8155 0000 5C020000 		.4byte	0x25c
 8156 0004 0200     		.2byte	0x2
 8157 0006 00000000 		.4byte	.Ldebug_info0
 8158 000a 04       		.byte	0x4
 8159 000b 00       		.byte	0
 8160 000c 0000     		.2byte	0
 8161 000e 0000     		.2byte	0
 8162 0010 00000000 		.4byte	.LFB1
 8163 0014 1C000000 		.4byte	.LFE1-.LFB1
 8164 0018 00000000 		.4byte	.LFB2
 8165 001c 20000000 		.4byte	.LFE2-.LFB2
 8166 0020 00000000 		.4byte	.LFB3
 8167 0024 54010000 		.4byte	.LFE3-.LFB3
 8168 0028 00000000 		.4byte	.LFB4
 8169 002c 1C000000 		.4byte	.LFE4-.LFB4
 8170 0030 00000000 		.4byte	.LFB5
 8171 0034 20000000 		.4byte	.LFE5-.LFB5
 8172 0038 00000000 		.4byte	.LFB6
 8173 003c 50000000 		.4byte	.LFE6-.LFB6
 8174 0040 00000000 		.4byte	.LFB7
 8175 0044 34000000 		.4byte	.LFE7-.LFB7
 8176 0048 00000000 		.4byte	.LFB8
 8177 004c 20000000 		.4byte	.LFE8-.LFB8
 8178 0050 00000000 		.4byte	.LFB9
 8179 0054 70000000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 200


 8180 0058 00000000 		.4byte	.LFB10
 8181 005c 50000000 		.4byte	.LFE10-.LFB10
 8182 0060 00000000 		.4byte	.LFB11
 8183 0064 4C000000 		.4byte	.LFE11-.LFB11
 8184 0068 00000000 		.4byte	.LFB12
 8185 006c 44000000 		.4byte	.LFE12-.LFB12
 8186 0070 00000000 		.4byte	.LFB13
 8187 0074 6C020000 		.4byte	.LFE13-.LFB13
 8188 0078 00000000 		.4byte	.LFB14
 8189 007c 68000000 		.4byte	.LFE14-.LFB14
 8190 0080 00000000 		.4byte	.LFB15
 8191 0084 1C000000 		.4byte	.LFE15-.LFB15
 8192 0088 00000000 		.4byte	.LFB16
 8193 008c 24000000 		.4byte	.LFE16-.LFB16
 8194 0090 00000000 		.4byte	.LFB17
 8195 0094 98000000 		.4byte	.LFE17-.LFB17
 8196 0098 00000000 		.4byte	.LFB18
 8197 009c E4010000 		.4byte	.LFE18-.LFB18
 8198 00a0 00000000 		.4byte	.LFB19
 8199 00a4 10010000 		.4byte	.LFE19-.LFB19
 8200 00a8 00000000 		.4byte	.LFB20
 8201 00ac 6C000000 		.4byte	.LFE20-.LFB20
 8202 00b0 00000000 		.4byte	.LFB21
 8203 00b4 50000000 		.4byte	.LFE21-.LFB21
 8204 00b8 00000000 		.4byte	.LFB22
 8205 00bc D4000000 		.4byte	.LFE22-.LFB22
 8206 00c0 00000000 		.4byte	.LFB23
 8207 00c4 6C000000 		.4byte	.LFE23-.LFB23
 8208 00c8 00000000 		.4byte	.LFB24
 8209 00cc 58000000 		.4byte	.LFE24-.LFB24
 8210 00d0 00000000 		.4byte	.LFB25
 8211 00d4 54000000 		.4byte	.LFE25-.LFB25
 8212 00d8 00000000 		.4byte	.LFB26
 8213 00dc 74000000 		.4byte	.LFE26-.LFB26
 8214 00e0 00000000 		.4byte	.LFB27
 8215 00e4 70010000 		.4byte	.LFE27-.LFB27
 8216 00e8 00000000 		.4byte	.LFB28
 8217 00ec 7C000000 		.4byte	.LFE28-.LFB28
 8218 00f0 00000000 		.4byte	.LFB29
 8219 00f4 8C000000 		.4byte	.LFE29-.LFB29
 8220 00f8 00000000 		.4byte	.LFB30
 8221 00fc 60000000 		.4byte	.LFE30-.LFB30
 8222 0100 00000000 		.4byte	.LFB31
 8223 0104 28000000 		.4byte	.LFE31-.LFB31
 8224 0108 00000000 		.4byte	.LFB32
 8225 010c 18000000 		.4byte	.LFE32-.LFB32
 8226 0110 00000000 		.4byte	.LFB33
 8227 0114 14000000 		.4byte	.LFE33-.LFB33
 8228 0118 00000000 		.4byte	.LFB34
 8229 011c 30000000 		.4byte	.LFE34-.LFB34
 8230 0120 00000000 		.4byte	.LFB35
 8231 0124 24000000 		.4byte	.LFE35-.LFB35
 8232 0128 00000000 		.4byte	.LFB36
 8233 012c 18000000 		.4byte	.LFE36-.LFB36
 8234 0130 00000000 		.4byte	.LFB37
 8235 0134 48000000 		.4byte	.LFE37-.LFB37
 8236 0138 00000000 		.4byte	.LFB38
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 201


 8237 013c 34000000 		.4byte	.LFE38-.LFB38
 8238 0140 00000000 		.4byte	.LFB39
 8239 0144 4C000000 		.4byte	.LFE39-.LFB39
 8240 0148 00000000 		.4byte	.LFB40
 8241 014c 36000000 		.4byte	.LFE40-.LFB40
 8242 0150 00000000 		.4byte	.LFB41
 8243 0154 A8000000 		.4byte	.LFE41-.LFB41
 8244 0158 00000000 		.4byte	.LFB42
 8245 015c 5C000000 		.4byte	.LFE42-.LFB42
 8246 0160 00000000 		.4byte	.LFB43
 8247 0164 28000000 		.4byte	.LFE43-.LFB43
 8248 0168 00000000 		.4byte	.LFB44
 8249 016c 30000000 		.4byte	.LFE44-.LFB44
 8250 0170 00000000 		.4byte	.LFB45
 8251 0174 28000000 		.4byte	.LFE45-.LFB45
 8252 0178 00000000 		.4byte	.LFB46
 8253 017c 28000000 		.4byte	.LFE46-.LFB46
 8254 0180 00000000 		.4byte	.LFB47
 8255 0184 28000000 		.4byte	.LFE47-.LFB47
 8256 0188 00000000 		.4byte	.LFB48
 8257 018c 14000000 		.4byte	.LFE48-.LFB48
 8258 0190 00000000 		.4byte	.LFB49
 8259 0194 20000000 		.4byte	.LFE49-.LFB49
 8260 0198 00000000 		.4byte	.LFB50
 8261 019c 48000000 		.4byte	.LFE50-.LFB50
 8262 01a0 00000000 		.4byte	.LFB51
 8263 01a4 28000000 		.4byte	.LFE51-.LFB51
 8264 01a8 00000000 		.4byte	.LFB52
 8265 01ac 84000000 		.4byte	.LFE52-.LFB52
 8266 01b0 00000000 		.4byte	.LFB53
 8267 01b4 24000000 		.4byte	.LFE53-.LFB53
 8268 01b8 00000000 		.4byte	.LFB54
 8269 01bc 64000000 		.4byte	.LFE54-.LFB54
 8270 01c0 00000000 		.4byte	.LFB55
 8271 01c4 1C000000 		.4byte	.LFE55-.LFB55
 8272 01c8 00000000 		.4byte	.LFB56
 8273 01cc 18000000 		.4byte	.LFE56-.LFB56
 8274 01d0 00000000 		.4byte	.LFB57
 8275 01d4 18000000 		.4byte	.LFE57-.LFB57
 8276 01d8 00000000 		.4byte	.LFB58
 8277 01dc 18000000 		.4byte	.LFE58-.LFB58
 8278 01e0 00000000 		.4byte	.LFB59
 8279 01e4 1C000000 		.4byte	.LFE59-.LFB59
 8280 01e8 00000000 		.4byte	.LFB60
 8281 01ec 18000000 		.4byte	.LFE60-.LFB60
 8282 01f0 00000000 		.4byte	.LFB61
 8283 01f4 18000000 		.4byte	.LFE61-.LFB61
 8284 01f8 00000000 		.4byte	.LFB62
 8285 01fc 34000000 		.4byte	.LFE62-.LFB62
 8286 0200 00000000 		.4byte	.LFB63
 8287 0204 18000000 		.4byte	.LFE63-.LFB63
 8288 0208 00000000 		.4byte	.LFB64
 8289 020c 18000000 		.4byte	.LFE64-.LFB64
 8290 0210 00000000 		.4byte	.LFB65
 8291 0214 14000000 		.4byte	.LFE65-.LFB65
 8292 0218 00000000 		.4byte	.LFB66
 8293 021c 2C000000 		.4byte	.LFE66-.LFB66
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 202


 8294 0220 00000000 		.4byte	.LFB67
 8295 0224 1C000000 		.4byte	.LFE67-.LFB67
 8296 0228 00000000 		.4byte	.LFB68
 8297 022c 44000000 		.4byte	.LFE68-.LFB68
 8298 0230 00000000 		.4byte	.LFB69
 8299 0234 C0000000 		.4byte	.LFE69-.LFB69
 8300 0238 00000000 		.4byte	.LFB70
 8301 023c 38000000 		.4byte	.LFE70-.LFB70
 8302 0240 00000000 		.4byte	.LFB71
 8303 0244 38000000 		.4byte	.LFE71-.LFB71
 8304 0248 00000000 		.4byte	.LFB72
 8305 024c 38000000 		.4byte	.LFE72-.LFB72
 8306 0250 00000000 		.4byte	.LFB73
 8307 0254 A0000000 		.4byte	.LFE73-.LFB73
 8308 0258 00000000 		.4byte	0
 8309 025c 00000000 		.4byte	0
 8310              		.section	.debug_ranges,"",%progbits
 8311              	.Ldebug_ranges0:
 8312 0000 00000000 		.4byte	.LFB1
 8313 0004 1C000000 		.4byte	.LFE1
 8314 0008 00000000 		.4byte	.LFB2
 8315 000c 20000000 		.4byte	.LFE2
 8316 0010 00000000 		.4byte	.LFB3
 8317 0014 54010000 		.4byte	.LFE3
 8318 0018 00000000 		.4byte	.LFB4
 8319 001c 1C000000 		.4byte	.LFE4
 8320 0020 00000000 		.4byte	.LFB5
 8321 0024 20000000 		.4byte	.LFE5
 8322 0028 00000000 		.4byte	.LFB6
 8323 002c 50000000 		.4byte	.LFE6
 8324 0030 00000000 		.4byte	.LFB7
 8325 0034 34000000 		.4byte	.LFE7
 8326 0038 00000000 		.4byte	.LFB8
 8327 003c 20000000 		.4byte	.LFE8
 8328 0040 00000000 		.4byte	.LFB9
 8329 0044 70000000 		.4byte	.LFE9
 8330 0048 00000000 		.4byte	.LFB10
 8331 004c 50000000 		.4byte	.LFE10
 8332 0050 00000000 		.4byte	.LFB11
 8333 0054 4C000000 		.4byte	.LFE11
 8334 0058 00000000 		.4byte	.LFB12
 8335 005c 44000000 		.4byte	.LFE12
 8336 0060 00000000 		.4byte	.LFB13
 8337 0064 6C020000 		.4byte	.LFE13
 8338 0068 00000000 		.4byte	.LFB14
 8339 006c 68000000 		.4byte	.LFE14
 8340 0070 00000000 		.4byte	.LFB15
 8341 0074 1C000000 		.4byte	.LFE15
 8342 0078 00000000 		.4byte	.LFB16
 8343 007c 24000000 		.4byte	.LFE16
 8344 0080 00000000 		.4byte	.LFB17
 8345 0084 98000000 		.4byte	.LFE17
 8346 0088 00000000 		.4byte	.LFB18
 8347 008c E4010000 		.4byte	.LFE18
 8348 0090 00000000 		.4byte	.LFB19
 8349 0094 10010000 		.4byte	.LFE19
 8350 0098 00000000 		.4byte	.LFB20
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 203


 8351 009c 6C000000 		.4byte	.LFE20
 8352 00a0 00000000 		.4byte	.LFB21
 8353 00a4 50000000 		.4byte	.LFE21
 8354 00a8 00000000 		.4byte	.LFB22
 8355 00ac D4000000 		.4byte	.LFE22
 8356 00b0 00000000 		.4byte	.LFB23
 8357 00b4 6C000000 		.4byte	.LFE23
 8358 00b8 00000000 		.4byte	.LFB24
 8359 00bc 58000000 		.4byte	.LFE24
 8360 00c0 00000000 		.4byte	.LFB25
 8361 00c4 54000000 		.4byte	.LFE25
 8362 00c8 00000000 		.4byte	.LFB26
 8363 00cc 74000000 		.4byte	.LFE26
 8364 00d0 00000000 		.4byte	.LFB27
 8365 00d4 70010000 		.4byte	.LFE27
 8366 00d8 00000000 		.4byte	.LFB28
 8367 00dc 7C000000 		.4byte	.LFE28
 8368 00e0 00000000 		.4byte	.LFB29
 8369 00e4 8C000000 		.4byte	.LFE29
 8370 00e8 00000000 		.4byte	.LFB30
 8371 00ec 60000000 		.4byte	.LFE30
 8372 00f0 00000000 		.4byte	.LFB31
 8373 00f4 28000000 		.4byte	.LFE31
 8374 00f8 00000000 		.4byte	.LFB32
 8375 00fc 18000000 		.4byte	.LFE32
 8376 0100 00000000 		.4byte	.LFB33
 8377 0104 14000000 		.4byte	.LFE33
 8378 0108 00000000 		.4byte	.LFB34
 8379 010c 30000000 		.4byte	.LFE34
 8380 0110 00000000 		.4byte	.LFB35
 8381 0114 24000000 		.4byte	.LFE35
 8382 0118 00000000 		.4byte	.LFB36
 8383 011c 18000000 		.4byte	.LFE36
 8384 0120 00000000 		.4byte	.LFB37
 8385 0124 48000000 		.4byte	.LFE37
 8386 0128 00000000 		.4byte	.LFB38
 8387 012c 34000000 		.4byte	.LFE38
 8388 0130 00000000 		.4byte	.LFB39
 8389 0134 4C000000 		.4byte	.LFE39
 8390 0138 00000000 		.4byte	.LFB40
 8391 013c 36000000 		.4byte	.LFE40
 8392 0140 00000000 		.4byte	.LFB41
 8393 0144 A8000000 		.4byte	.LFE41
 8394 0148 00000000 		.4byte	.LFB42
 8395 014c 5C000000 		.4byte	.LFE42
 8396 0150 00000000 		.4byte	.LFB43
 8397 0154 28000000 		.4byte	.LFE43
 8398 0158 00000000 		.4byte	.LFB44
 8399 015c 30000000 		.4byte	.LFE44
 8400 0160 00000000 		.4byte	.LFB45
 8401 0164 28000000 		.4byte	.LFE45
 8402 0168 00000000 		.4byte	.LFB46
 8403 016c 28000000 		.4byte	.LFE46
 8404 0170 00000000 		.4byte	.LFB47
 8405 0174 28000000 		.4byte	.LFE47
 8406 0178 00000000 		.4byte	.LFB48
 8407 017c 14000000 		.4byte	.LFE48
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 204


 8408 0180 00000000 		.4byte	.LFB49
 8409 0184 20000000 		.4byte	.LFE49
 8410 0188 00000000 		.4byte	.LFB50
 8411 018c 48000000 		.4byte	.LFE50
 8412 0190 00000000 		.4byte	.LFB51
 8413 0194 28000000 		.4byte	.LFE51
 8414 0198 00000000 		.4byte	.LFB52
 8415 019c 84000000 		.4byte	.LFE52
 8416 01a0 00000000 		.4byte	.LFB53
 8417 01a4 24000000 		.4byte	.LFE53
 8418 01a8 00000000 		.4byte	.LFB54
 8419 01ac 64000000 		.4byte	.LFE54
 8420 01b0 00000000 		.4byte	.LFB55
 8421 01b4 1C000000 		.4byte	.LFE55
 8422 01b8 00000000 		.4byte	.LFB56
 8423 01bc 18000000 		.4byte	.LFE56
 8424 01c0 00000000 		.4byte	.LFB57
 8425 01c4 18000000 		.4byte	.LFE57
 8426 01c8 00000000 		.4byte	.LFB58
 8427 01cc 18000000 		.4byte	.LFE58
 8428 01d0 00000000 		.4byte	.LFB59
 8429 01d4 1C000000 		.4byte	.LFE59
 8430 01d8 00000000 		.4byte	.LFB60
 8431 01dc 18000000 		.4byte	.LFE60
 8432 01e0 00000000 		.4byte	.LFB61
 8433 01e4 18000000 		.4byte	.LFE61
 8434 01e8 00000000 		.4byte	.LFB62
 8435 01ec 34000000 		.4byte	.LFE62
 8436 01f0 00000000 		.4byte	.LFB63
 8437 01f4 18000000 		.4byte	.LFE63
 8438 01f8 00000000 		.4byte	.LFB64
 8439 01fc 18000000 		.4byte	.LFE64
 8440 0200 00000000 		.4byte	.LFB65
 8441 0204 14000000 		.4byte	.LFE65
 8442 0208 00000000 		.4byte	.LFB66
 8443 020c 2C000000 		.4byte	.LFE66
 8444 0210 00000000 		.4byte	.LFB67
 8445 0214 1C000000 		.4byte	.LFE67
 8446 0218 00000000 		.4byte	.LFB68
 8447 021c 44000000 		.4byte	.LFE68
 8448 0220 00000000 		.4byte	.LFB69
 8449 0224 C0000000 		.4byte	.LFE69
 8450 0228 00000000 		.4byte	.LFB70
 8451 022c 38000000 		.4byte	.LFE70
 8452 0230 00000000 		.4byte	.LFB71
 8453 0234 38000000 		.4byte	.LFE71
 8454 0238 00000000 		.4byte	.LFB72
 8455 023c 38000000 		.4byte	.LFE72
 8456 0240 00000000 		.4byte	.LFB73
 8457 0244 A0000000 		.4byte	.LFE73
 8458 0248 00000000 		.4byte	0
 8459 024c 00000000 		.4byte	0
 8460              		.section	.debug_line,"",%progbits
 8461              	.Ldebug_line0:
 8462 0000 95080000 		.section	.debug_str,"MS",%progbits,1
 8462      02004D00 
 8462      00000201 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 205


 8462      FB0E0D00 
 8462      01010101 
 8463              	.LASF116:
 8464 0000 72616D56 		.ascii	"ramVectorTable\000"
 8464      6563746F 
 8464      72546162 
 8464      6C6500
 8465              	.LASF49:
 8466 000f 62675472 		.ascii	"bgTrim4\000"
 8466      696D3400 
 8467              	.LASF10:
 8468 0017 75696E74 		.ascii	"uint16\000"
 8468      313600
 8469              	.LASF109:
 8470 001e 696E7453 		.ascii	"intState\000"
 8470      74617465 
 8470      00
 8471              	.LASF123:
 8472 0027 76616C75 		.ascii	"value\000"
 8472      6500
 8473              	.LASF40:
 8474 002d 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 8474      73436C6B 
 8474      57726974 
 8474      65486663 
 8474      6C6B4469 
 8475              	.LASF75:
 8476 0046 636F756E 		.ascii	"counts\000"
 8476      747300
 8477              	.LASF98:
 8478 004d 43795379 		.ascii	"CySysClkPllSetSource\000"
 8478      73436C6B 
 8478      506C6C53 
 8478      6574536F 
 8478      75726365 
 8479              	.LASF171:
 8480 0062 43795379 		.ascii	"CySysClkPumpConfig\000"
 8480      73436C6B 
 8480      50756D70 
 8480      436F6E66 
 8480      696700
 8481              	.LASF42:
 8482 0075 43795379 		.ascii	"CySysEnablePumpClock\000"
 8482      73456E61 
 8482      626C6550 
 8482      756D7043 
 8482      6C6F636B 
 8483              	.LASF69:
 8484 008a 43795379 		.ascii	"CySysClkConfigureEcoDrive\000"
 8484      73436C6B 
 8484      436F6E66 
 8484      69677572 
 8484      6545636F 
 8485              	.LASF153:
 8486 00a4 72657456 		.ascii	"retVal\000"
 8486      616C00
 8487              	.LASF108:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 206


 8488 00ab 43794469 		.ascii	"CyDisableInts\000"
 8488      7361626C 
 8488      65496E74 
 8488      7300
 8489              	.LASF25:
 8490 00b9 63795F73 		.ascii	"cy_sys_clk_pll_regs_struct\000"
 8490      79735F63 
 8490      6C6B5F70 
 8490      6C6C5F72 
 8490      6567735F 
 8491              	.LASF52:
 8492 00d4 63757272 		.ascii	"currentImoTrim2Value\000"
 8492      656E7449 
 8492      6D6F5472 
 8492      696D3256 
 8492      616C7565 
 8493              	.LASF7:
 8494 00e9 6C6F6E67 		.ascii	"long long unsigned int\000"
 8494      206C6F6E 
 8494      6720756E 
 8494      7369676E 
 8494      65642069 
 8495              	.LASF90:
 8496 0100 706C6C46 		.ascii	"pllFreq\000"
 8496      72657100 
 8497              	.LASF167:
 8498 0108 43795379 		.ascii	"CySysTickInitVar\000"
 8498      73546963 
 8498      6B496E69 
 8498      74566172 
 8498      00
 8499              	.LASF24:
 8500 0119 74657374 		.ascii	"test\000"
 8500      00
 8501              	.LASF161:
 8502 011e 696E7465 		.ascii	"interfaceNumber\000"
 8502      72666163 
 8502      654E756D 
 8502      62657200 
 8503              	.LASF93:
 8504 012e 714D6178 		.ascii	"qMax\000"
 8504      00
 8505              	.LASF100:
 8506 0133 43795379 		.ascii	"CySysClkPllSetOutputDivider\000"
 8506      73436C6B 
 8506      506C6C53 
 8506      65744F75 
 8506      74707574 
 8507              	.LASF131:
 8508 014f 4379536F 		.ascii	"CySoftwareReset\000"
 8508      66747761 
 8508      72655265 
 8508      73657400 
 8509              	.LASF141:
 8510 015f 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 8510      73546963 
 8510      6B456E61 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 207


 8510      626C6549 
 8510      6E746572 
 8511              	.LASF6:
 8512 0178 6C6F6E67 		.ascii	"long long int\000"
 8512      206C6F6E 
 8512      6720696E 
 8512      7400
 8513              	.LASF0:
 8514 0186 7369676E 		.ascii	"signed char\000"
 8514      65642063 
 8514      68617200 
 8515              	.LASF29:
 8516 0192 66726571 		.ascii	"freq\000"
 8516      00
 8517              	.LASF96:
 8518 0197 6676636F 		.ascii	"fvco\000"
 8518      00
 8519              	.LASF136:
 8520 019c 43794465 		.ascii	"CyDelayFreq\000"
 8520      6C617946 
 8520      72657100 
 8521              	.LASF30:
 8522 01a8 696E7465 		.ascii	"interruptState\000"
 8522      72727570 
 8522      74537461 
 8522      746500
 8523              	.LASF12:
 8524 01b7 696E7433 		.ascii	"int32\000"
 8524      3200
 8525              	.LASF134:
 8526 01bd 43794465 		.ascii	"CyDelayUs\000"
 8526      6C617955 
 8526      7300
 8527              	.LASF144:
 8528 01c7 43795379 		.ascii	"CySysTickGetReload\000"
 8528      73546963 
 8528      6B476574 
 8528      52656C6F 
 8528      616400
 8529              	.LASF37:
 8530 01da 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 8530      73436C6B 
 8530      496D6F47 
 8530      65745763 
 8530      6F4C6F63 
 8531              	.LASF54:
 8532 01f0 77636F4C 		.ascii	"wcoLock\000"
 8532      6F636B00 
 8533              	.LASF4:
 8534 01f8 6C6F6E67 		.ascii	"long int\000"
 8534      20696E74 
 8534      00
 8535              	.LASF70:
 8536 0201 634C6F61 		.ascii	"cLoad\000"
 8536      6400
 8537              	.LASF154:
 8538 0207 43795379 		.ascii	"CySysTickGetCallback\000"
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 208


 8538      73546963 
 8538      6B476574 
 8538      43616C6C 
 8538      6261636B 
 8539              	.LASF9:
 8540 021c 75696E74 		.ascii	"uint8\000"
 8540      3800
 8541              	.LASF164:
 8542 0222 63796465 		.ascii	"cydelayFreqKhz\000"
 8542      6C617946 
 8542      7265714B 
 8542      687A00
 8543              	.LASF92:
 8544 0231 714D696E 		.ascii	"qMin\000"
 8544      00
 8545              	.LASF44:
 8546 0236 656E6162 		.ascii	"enable\000"
 8546      6C6500
 8547              	.LASF14:
 8548 023d 646F7562 		.ascii	"double\000"
 8548      6C6500
 8549              	.LASF35:
 8550 0244 43795379 		.ascii	"CySysClkImoEnableUsbLock\000"
 8550      73436C6B 
 8550      496D6F45 
 8550      6E61626C 
 8550      65557362 
 8551              	.LASF122:
 8552 025d 73686966 		.ascii	"shift\000"
 8552      7400
 8553              	.LASF105:
 8554 0263 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 8554      734C7664 
 8554      436C6561 
 8554      72496E74 
 8554      65727275 
 8555              	.LASF11:
 8556 027a 75696E74 		.ascii	"uint32\000"
 8556      333200
 8557              	.LASF118:
 8558 0281 4379496E 		.ascii	"CyIntSetVector\000"
 8558      74536574 
 8558      56656374 
 8558      6F7200
 8559              	.LASF61:
 8560 0290 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 8560      73436C6B 
 8560      45636F52 
 8560      65616453 
 8560      74617475 
 8561              	.LASF113:
 8562 02a6 6E756D62 		.ascii	"number\000"
 8562      657200
 8563              	.LASF111:
 8564 02ad 6D61736B 		.ascii	"mask\000"
 8564      00
 8565              	.LASF56:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 209


 8566 02b2 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 8566      73436C6B 
 8566      47657453 
 8566      7973636C 
 8566      6B536F75 
 8567              	.LASF39:
 8568 02ca 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 8568      73436C6B 
 8568      496D6F45 
 8568      6E61626C 
 8568      6557636F 
 8569              	.LASF124:
 8570 02e3 4379496E 		.ascii	"CyIntGetPriority\000"
 8570      74476574 
 8570      5072696F 
 8570      72697479 
 8570      00
 8571              	.LASF166:
 8572 02f4 63796465 		.ascii	"cydelay32kMs\000"
 8572      6C617933 
 8572      326B4D73 
 8572      00
 8573              	.LASF72:
 8574 0301 676D4D69 		.ascii	"gmMin\000"
 8574      6E00
 8575              	.LASF138:
 8576 0307 43795379 		.ascii	"CySysTickInit\000"
 8576      73546963 
 8576      6B496E69 
 8576      7400
 8577              	.LASF78:
 8578 0315 43795379 		.ascii	"CySysClkPllSetPQ\000"
 8578      73436C6B 
 8578      506C6C53 
 8578      65745051 
 8578      00
 8579              	.LASF147:
 8580 0326 636C6F63 		.ascii	"clockSource\000"
 8580      6B536F75 
 8580      72636500 
 8581              	.LASF155:
 8582 0332 43794765 		.ascii	"CyGetUniqueId\000"
 8582      74556E69 
 8582      71756549 
 8582      6400
 8583              	.LASF130:
 8584 0340 43794861 		.ascii	"CyHalt\000"
 8584      6C7400
 8585              	.LASF8:
 8586 0347 756E7369 		.ascii	"unsigned int\000"
 8586      676E6564 
 8586      20696E74 
 8586      00
 8587              	.LASF150:
 8588 0354 43795379 		.ascii	"CySysTickClear\000"
 8588      73546963 
 8588      6B436C65 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 210


 8588      617200
 8589              	.LASF5:
 8590 0363 6C6F6E67 		.ascii	"long unsigned int\000"
 8590      20756E73 
 8590      69676E65 
 8590      6420696E 
 8590      7400
 8591              	.LASF104:
 8592 0375 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 8592      734C7664 
 8592      47657449 
 8592      6E746572 
 8592      72757074 
 8593              	.LASF68:
 8594 0390 67547269 		.ascii	"gTrim\000"
 8594      6D00
 8595              	.LASF28:
 8596 0396 43795379 		.ascii	"CySysClkImoStop\000"
 8596      73436C6B 
 8596      496D6F53 
 8596      746F7000 
 8597              	.LASF128:
 8598 03a6 4379496E 		.ascii	"CyIntSetPending\000"
 8598      74536574 
 8598      50656E64 
 8598      696E6700 
 8599              	.LASF143:
 8600 03b6 43795379 		.ascii	"CySysTickSetReload\000"
 8600      73546963 
 8600      6B536574 
 8600      52656C6F 
 8600      616400
 8601              	.LASF88:
 8602 03c9 43795379 		.ascii	"CySysClkPllSetFrequency\000"
 8602      73436C6B 
 8602      506C6C53 
 8602      65744672 
 8602      65717565 
 8603              	.LASF32:
 8604 03e1 6C664C69 		.ascii	"lfLimit\000"
 8604      6D697400 
 8605              	.LASF71:
 8606 03e9 6D617841 		.ascii	"maxAmplitude\000"
 8606      6D706C69 
 8606      74756465 
 8606      00
 8607              	.LASF106:
 8608 03f6 43795379 		.ascii	"CySysGetResetReason\000"
 8608      73476574 
 8608      52657365 
 8608      74526561 
 8608      736F6E00 
 8609              	.LASF3:
 8610 040a 73686F72 		.ascii	"short unsigned int\000"
 8610      7420756E 
 8610      7369676E 
 8610      65642069 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 211


 8610      6E7400
 8611              	.LASF31:
 8612 041d 72656754 		.ascii	"regTmp\000"
 8612      6D7000
 8613              	.LASF146:
 8614 0424 43795379 		.ascii	"CySysTickSetClockSource\000"
 8614      73546963 
 8614      6B536574 
 8614      436C6F63 
 8614      6B536F75 
 8615              	.LASF74:
 8616 043c 77616974 		.ascii	"wait\000"
 8616      00
 8617              	.LASF36:
 8618 0441 43795379 		.ascii	"CySysClkImoDisableUsbLock\000"
 8618      73436C6B 
 8618      496D6F44 
 8618      69736162 
 8618      6C655573 
 8619              	.LASF121:
 8620 045b 7072696F 		.ascii	"priority\000"
 8620      72697479 
 8620      00
 8621              	.LASF110:
 8622 0464 4379456E 		.ascii	"CyEnableInts\000"
 8622      61626C65 
 8622      496E7473 
 8622      00
 8623              	.LASF48:
 8624 0471 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 8624      73436C6B 
 8624      57726974 
 8624      65496D6F 
 8624      46726571 
 8625              	.LASF120:
 8626 0486 4379496E 		.ascii	"CyIntSetPriority\000"
 8626      74536574 
 8626      5072696F 
 8626      72697479 
 8626      00
 8627              	.LASF38:
 8628 0497 43795379 		.ascii	"CySysClkImoGetUsbLock\000"
 8628      73436C6B 
 8628      496D6F47 
 8628      65745573 
 8628      624C6F63 
 8629              	.LASF55:
 8630 04ad 7573624C 		.ascii	"usbLock\000"
 8630      6F636B00 
 8631              	.LASF158:
 8632 04b5 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 8632      73536574 
 8632      466C6173 
 8632      68416363 
 8632      65737341 
 8633              	.LASF129:
 8634 04d4 4379496E 		.ascii	"CyIntClearPending\000"
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 212


 8634      74436C65 
 8634      61725065 
 8634      6E64696E 
 8634      6700
 8635              	.LASF86:
 8636 04e6 706C6C42 		.ascii	"pllBypassMode\000"
 8636      79706173 
 8636      734D6F64 
 8636      6500
 8637              	.LASF112:
 8638 04f4 4379496E 		.ascii	"CyIntSetSysVector\000"
 8638      74536574 
 8638      53797356 
 8638      6563746F 
 8638      7200
 8639              	.LASF94:
 8640 0506 7156616C 		.ascii	"qVal\000"
 8640      00
 8641              	.LASF34:
 8642 050b 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 8642      73436C6B 
 8642      496D6F44 
 8642      69736162 
 8642      6C655763 
 8643              	.LASF77:
 8644 0525 43795379 		.ascii	"CySysClkPllStop\000"
 8644      73436C6B 
 8644      506C6C53 
 8644      746F7000 
 8645              	.LASF18:
 8646 0535 72656733 		.ascii	"reg32\000"
 8646      3200
 8647              	.LASF137:
 8648 053b 43795379 		.ascii	"CySysTickStart\000"
 8648      73546963 
 8648      6B537461 
 8648      727400
 8649              	.LASF59:
 8650 054a 72657475 		.ascii	"returnStatus\000"
 8650      726E5374 
 8650      61747573 
 8650      00
 8651              	.LASF99:
 8652 0557 736F7572 		.ascii	"source\000"
 8652      636500
 8653              	.LASF20:
 8654 055e 73697A65 		.ascii	"sizetype\000"
 8654      74797065 
 8654      00
 8655              	.LASF160:
 8656 0567 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 8656      73536574 
 8656      50657269 
 8656      70686572 
 8656      616C4163 
 8657              	.LASF80:
 8658 058b 72656665 		.ascii	"reference\000"
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 213


 8658      72656E63 
 8658      6500
 8659              	.LASF114:
 8660 0595 61646472 		.ascii	"address\000"
 8660      65737300 
 8661              	.LASF125:
 8662 059d 4379496E 		.ascii	"CyIntEnable\000"
 8662      74456E61 
 8662      626C6500 
 8663              	.LASF50:
 8664 05a9 62675472 		.ascii	"bgTrim5\000"
 8664      696D3500 
 8665              	.LASF45:
 8666 05b1 73797363 		.ascii	"sysclkSource\000"
 8666      6C6B536F 
 8666      75726365 
 8666      00
 8667              	.LASF152:
 8668 05be 66756E63 		.ascii	"function\000"
 8668      74696F6E 
 8668      00
 8669              	.LASF89:
 8670 05c7 696E7075 		.ascii	"inputFreq\000"
 8670      74467265 
 8670      7100
 8671              	.LASF168:
 8672 05d1 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 8672      6F467265 
 8672      714D687A 
 8672      32526567 
 8672      00
 8673              	.LASF97:
 8674 05e2 66657272 		.ascii	"ferr\000"
 8674      00
 8675              	.LASF170:
 8676 05e7 43795379 		.ascii	"CySysClkImoTrim4\000"
 8676      73436C6B 
 8676      496D6F54 
 8676      72696D34 
 8676      00
 8677              	.LASF145:
 8678 05f8 43795379 		.ascii	"CySysTickGetValue\000"
 8678      73546963 
 8678      6B476574 
 8678      56616C75 
 8678      6500
 8679              	.LASF163:
 8680 060a 63796465 		.ascii	"cydelayFreqHz\000"
 8680      6C617946 
 8680      72657148 
 8680      7A00
 8681              	.LASF95:
 8682 0618 7056616C 		.ascii	"pVal\000"
 8682      00
 8683              	.LASF67:
 8684 061d 72547269 		.ascii	"rTrim\000"
 8684      6D00
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 214


 8685              	.LASF81:
 8686 0623 63757272 		.ascii	"current\000"
 8686      656E7400 
 8687              	.LASF91:
 8688 062b 66726571 		.ascii	"freqTol\000"
 8688      546F6C00 
 8689              	.LASF65:
 8690 0633 61547269 		.ascii	"aTrim\000"
 8690      6D00
 8691              	.LASF13:
 8692 0639 666C6F61 		.ascii	"float\000"
 8692      7400
 8693              	.LASF101:
 8694 063f 43795379 		.ascii	"CySysLvdEnable\000"
 8694      734C7664 
 8694      456E6162 
 8694      6C6500
 8695              	.LASF21:
 8696 064e 63795379 		.ascii	"cySysTickCallback\000"
 8696      73546963 
 8696      6B43616C 
 8696      6C626163 
 8696      6B00
 8697              	.LASF149:
 8698 0660 43795379 		.ascii	"CySysTickGetCountFlag\000"
 8698      73546963 
 8698      6B476574 
 8698      436F756E 
 8698      74466C61 
 8699              	.LASF119:
 8700 0676 4379496E 		.ascii	"CyIntGetVector\000"
 8700      74476574 
 8700      56656374 
 8700      6F7200
 8701              	.LASF133:
 8702 0685 6D696C6C 		.ascii	"milliseconds\000"
 8702      69736563 
 8702      6F6E6473 
 8702      00
 8703              	.LASF76:
 8704 0692 43795379 		.ascii	"CySysClkPllGetLockStatus\000"
 8704      73436C6B 
 8704      506C6C47 
 8704      65744C6F 
 8704      636B5374 
 8705              	.LASF17:
 8706 06ab 72656738 		.ascii	"reg8\000"
 8706      00
 8707              	.LASF102:
 8708 06b0 74687265 		.ascii	"threshold\000"
 8708      73686F6C 
 8708      6400
 8709              	.LASF73:
 8710 06ba 43795379 		.ascii	"CySysClkPllStart\000"
 8710      73436C6B 
 8710      506C6C53 
 8710      74617274 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 215


 8710      00
 8711              	.LASF157:
 8712 06cb 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 8712      73536574 
 8712      52616D41 
 8712      63636573 
 8712      73417262 
 8713              	.LASF1:
 8714 06e8 756E7369 		.ascii	"unsigned char\000"
 8714      676E6564 
 8714      20636861 
 8714      7200
 8715              	.LASF2:
 8716 06f6 73686F72 		.ascii	"short int\000"
 8716      7420696E 
 8716      7400
 8717              	.LASF85:
 8718 0700 43795379 		.ascii	"CySysClkPllConfigChangeAllowed\000"
 8718      73436C6B 
 8718      506C6C43 
 8718      6F6E6669 
 8718      67436861 
 8719              	.LASF117:
 8720 071f 4379496E 		.ascii	"CyIntGetSysVector\000"
 8720      74476574 
 8720      53797356 
 8720      6563746F 
 8720      7200
 8721              	.LASF43:
 8722 0731 636C6B53 		.ascii	"clkSelect\000"
 8722      656C6563 
 8722      7400
 8723              	.LASF64:
 8724 073b 77445472 		.ascii	"wDTrim\000"
 8724      696D00
 8725              	.LASF57:
 8726 0742 43795379 		.ascii	"CySysClkEcoStart\000"
 8726      73436C6B 
 8726      45636F53 
 8726      74617274 
 8726      00
 8727              	.LASF127:
 8728 0753 4379496E 		.ascii	"CyIntDisable\000"
 8728      74446973 
 8728      61626C65 
 8728      00
 8729              	.LASF107:
 8730 0760 72656173 		.ascii	"reason\000"
 8730      6F6E00
 8731              	.LASF66:
 8732 0767 66547269 		.ascii	"fTrim\000"
 8732      6D00
 8733              	.LASF84:
 8734 076d 43795379 		.ascii	"CySysClkPllGetBypassMode\000"
 8734      73436C6B 
 8734      506C6C47 
 8734      65744279 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 216


 8734      70617373 
 8735              	.LASF63:
 8736 0786 43795379 		.ascii	"CySysClkConfigureEcoTrim\000"
 8736      73436C6B 
 8736      436F6E66 
 8736      69677572 
 8736      6545636F 
 8737              	.LASF82:
 8738 079f 43795379 		.ascii	"CySysClkPllSetBypassMode\000"
 8738      73436C6B 
 8738      506C6C53 
 8738      65744279 
 8738      70617373 
 8739              	.LASF15:
 8740 07b8 63686172 		.ascii	"char\000"
 8740      00
 8741              	.LASF169:
 8742 07bd 6379496D 		.ascii	"cyImoFreqMhz2DpllOffset\000"
 8742      6F467265 
 8742      714D687A 
 8742      3244706C 
 8742      6C4F6666 
 8743              	.LASF19:
 8744 07d5 63796973 		.ascii	"cyisraddress\000"
 8744      72616464 
 8744      72657373 
 8744      00
 8745              	.LASF139:
 8746 07e2 43795379 		.ascii	"CySysTickEnable\000"
 8746      73546963 
 8746      6B456E61 
 8746      626C6500 
 8747              	.LASF22:
 8748 07f2 636F6E66 		.ascii	"config\000"
 8748      696700
 8749              	.LASF174:
 8750 07f9 443A5C44 		.ascii	"D:\\Dropbox\\IoT Development\\Cypress PSoC Developm"
 8750      726F7062 
 8750      6F785C49 
 8750      6F542044 
 8750      6576656C 
 8751 0829 656E745C 		.ascii	"ent\\RTD Design.cydsn\000"
 8751      52544420 
 8751      44657369 
 8751      676E2E63 
 8751      7964736E 
 8752              	.LASF46:
 8753 083e 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 8753      73436C6B 
 8753      57726974 
 8753      65537973 
 8753      636C6B44 
 8754              	.LASF60:
 8755 0855 43795379 		.ascii	"CySysClkEcoStop\000"
 8755      73436C6B 
 8755      45636F53 
 8755      746F7000 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 217


 8756              	.LASF162:
 8757 0865 43795379 		.ascii	"CySysTickCallbacks\000"
 8757      73546963 
 8757      6B43616C 
 8757      6C626163 
 8757      6B7300
 8758              	.LASF53:
 8759 0878 696D6F54 		.ascii	"imoTrim1Value\000"
 8759      72696D31 
 8759      56616C75 
 8759      6500
 8760              	.LASF156:
 8761 0886 756E6971 		.ascii	"uniqueId\000"
 8761      75654964 
 8761      00
 8762              	.LASF33:
 8763 088f 666C6173 		.ascii	"flashCtlReg\000"
 8763      6843746C 
 8763      52656700 
 8764              	.LASF126:
 8765 089b 4379496E 		.ascii	"CyIntGetState\000"
 8765      74476574 
 8765      53746174 
 8765      6500
 8766              	.LASF132:
 8767 08a9 43794465 		.ascii	"CyDelay\000"
 8767      6C617900 
 8768              	.LASF148:
 8769 08b1 43795379 		.ascii	"CySysTickGetClockSource\000"
 8769      73546963 
 8769      6B476574 
 8769      436C6F63 
 8769      6B536F75 
 8770              	.LASF142:
 8771 08c9 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 8771      73546963 
 8771      6B446973 
 8771      61626C65 
 8771      496E7465 
 8772              	.LASF103:
 8773 08e3 43795379 		.ascii	"CySysLvdDisable\000"
 8773      734C7664 
 8773      44697361 
 8773      626C6500 
 8774              	.LASF115:
 8775 08f3 6F6C6449 		.ascii	"oldIsr\000"
 8775      737200
 8776              	.LASF165:
 8777 08fa 63796465 		.ascii	"cydelayFreqMhz\000"
 8777      6C617946 
 8777      7265714D 
 8777      687A00
 8778              	.LASF23:
 8779 0909 73746174 		.ascii	"status\000"
 8779      757300
 8780              	.LASF135:
 8781 0910 6D696372 		.ascii	"microseconds\000"
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 218


 8781      6F736563 
 8781      6F6E6473 
 8781      00
 8782              	.LASF159:
 8783 091d 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 8783      73536574 
 8783      446D6163 
 8783      41636365 
 8783      73734172 
 8784              	.LASF140:
 8785 093b 43795379 		.ascii	"CySysTickStop\000"
 8785      73546963 
 8785      6B53746F 
 8785      7000
 8786              	.LASF58:
 8787 0949 74696D65 		.ascii	"timeoutUs\000"
 8787      6F757455 
 8787      7300
 8788              	.LASF47:
 8789 0953 64697669 		.ascii	"divider\000"
 8789      64657200 
 8790              	.LASF16:
 8791 095b 63797374 		.ascii	"cystatus\000"
 8791      61747573 
 8791      00
 8792              	.LASF172:
 8793 0964 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 8793      4320342E 
 8793      392E3320 
 8793      32303135 
 8793      30333033 
 8794 0997 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 8794      20726576 
 8794      6973696F 
 8794      6E203232 
 8794      31323230 
 8795 09ca 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 8795      66756E63 
 8795      74696F6E 
 8795      2D736563 
 8795      74696F6E 
 8796              	.LASF151:
 8797 09f2 43795379 		.ascii	"CySysTickSetCallback\000"
 8797      73546963 
 8797      6B536574 
 8797      43616C6C 
 8797      6261636B 
 8798              	.LASF27:
 8799 0a07 43795379 		.ascii	"CySysClkImoStart\000"
 8799      73436C6B 
 8799      496D6F53 
 8799      74617274 
 8799      00
 8800              	.LASF51:
 8801 0a18 6E657749 		.ascii	"newImoTrim2Value\000"
 8801      6D6F5472 
 8801      696D3256 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\cc70RmjF.s 			page 219


 8801      616C7565 
 8801      00
 8802              	.LASF83:
 8803 0a29 62797061 		.ascii	"bypass\000"
 8803      737300
 8804              	.LASF173:
 8805 0a30 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 8805      72617465 
 8805      645F536F 
 8805      75726365 
 8805      5C50536F 
 8806              	.LASF41:
 8807 0a4f 746D7052 		.ascii	"tmpReg\000"
 8807      656700
 8808              	.LASF87:
 8809 0a56 43795379 		.ascii	"CySysClkPllGetUnlockStatus\000"
 8809      73436C6B 
 8809      506C6C47 
 8809      6574556E 
 8809      6C6F636B 
 8810              	.LASF175:
 8811 0a71 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 8811      73546963 
 8811      6B536572 
 8811      76696365 
 8811      43616C6C 
 8812              	.LASF62:
 8813 0a8b 72657475 		.ascii	"returnValue\000"
 8813      726E5661 
 8813      6C756500 
 8814              	.LASF79:
 8815 0a97 66656564 		.ascii	"feedback\000"
 8815      6261636B 
 8815      00
 8816              	.LASF26:
 8817 0aa0 63795F73 		.ascii	"cy_sys_clk_pll_struct\000"
 8817      79735F63 
 8817      6C6B5F70 
 8817      6C6C5F73 
 8817      74727563 
 8818              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
