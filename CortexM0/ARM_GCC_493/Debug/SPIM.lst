ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"SPIM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	SPIM_initVar
  18              		.bss
  19              		.type	SPIM_initVar, %object
  20              		.size	SPIM_initVar, 1
  21              	SPIM_initVar:
  22 0000 00       		.space	1
  23              		.comm	SPIM_swStatusTx,1,1
  24              		.comm	SPIM_swStatusRx,1,1
  25              		.section	.text.SPIM_Init,"ax",%progbits
  26              		.align	2
  27              		.global	SPIM_Init
  28              		.code	16
  29              		.thumb_func
  30              		.type	SPIM_Init, %function
  31              	SPIM_Init:
  32              	.LFB1:
  33              		.file 1 "Generated_Source\\PSoC4\\SPIM.c"
   1:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/SPIM.c **** * File Name: SPIM.c
   3:Generated_Source\PSoC4/SPIM.c **** * Version 2.50
   4:Generated_Source\PSoC4/SPIM.c **** *
   5:Generated_Source\PSoC4/SPIM.c **** * Description:
   6:Generated_Source\PSoC4/SPIM.c **** *  This file provides all API functionality of the SPI Master component.
   7:Generated_Source\PSoC4/SPIM.c **** *
   8:Generated_Source\PSoC4/SPIM.c **** * Note:
   9:Generated_Source\PSoC4/SPIM.c **** *  None.
  10:Generated_Source\PSoC4/SPIM.c **** *
  11:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
  12:Generated_Source\PSoC4/SPIM.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/SPIM.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/SPIM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/SPIM.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/SPIM.c **** 
  18:Generated_Source\PSoC4/SPIM.c **** #include "SPIM_PVT.h"
  19:Generated_Source\PSoC4/SPIM.c **** 
  20:Generated_Source\PSoC4/SPIM.c **** #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  21:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_txBuffer[SPIM_TX_BUFFER_SIZE];
  22:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_txBufferFull;
  23:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_txBufferRead;
  24:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_txBufferWrite;
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 2


  25:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
  26:Generated_Source\PSoC4/SPIM.c **** 
  27:Generated_Source\PSoC4/SPIM.c **** #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
  28:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_rxBuffer[SPIM_RX_BUFFER_SIZE];
  29:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_rxBufferFull;
  30:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_rxBufferRead;
  31:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 SPIM_rxBufferWrite;
  32:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
  33:Generated_Source\PSoC4/SPIM.c **** 
  34:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_initVar = 0u;
  35:Generated_Source\PSoC4/SPIM.c **** 
  36:Generated_Source\PSoC4/SPIM.c **** volatile uint8 SPIM_swStatusTx;
  37:Generated_Source\PSoC4/SPIM.c **** volatile uint8 SPIM_swStatusRx;
  38:Generated_Source\PSoC4/SPIM.c **** 
  39:Generated_Source\PSoC4/SPIM.c **** 
  40:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
  41:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Init
  42:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
  43:Generated_Source\PSoC4/SPIM.c **** *
  44:Generated_Source\PSoC4/SPIM.c **** * Summary:
  45:Generated_Source\PSoC4/SPIM.c **** *  Inits/Restores default SPIM configuration provided with customizer.
  46:Generated_Source\PSoC4/SPIM.c **** *
  47:Generated_Source\PSoC4/SPIM.c **** * Parameters:
  48:Generated_Source\PSoC4/SPIM.c **** *  None.
  49:Generated_Source\PSoC4/SPIM.c **** *
  50:Generated_Source\PSoC4/SPIM.c **** * Return:
  51:Generated_Source\PSoC4/SPIM.c **** *  None.
  52:Generated_Source\PSoC4/SPIM.c **** *
  53:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
  54:Generated_Source\PSoC4/SPIM.c **** *  When this function is called it initializes all of the necessary parameters
  55:Generated_Source\PSoC4/SPIM.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  56:Generated_Source\PSoC4/SPIM.c **** *  interrupt service routine, configuring the bit-counter parameters and
  57:Generated_Source\PSoC4/SPIM.c **** *  clearing the FIFO and Status Register.
  58:Generated_Source\PSoC4/SPIM.c **** *
  59:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
  60:Generated_Source\PSoC4/SPIM.c **** *  No.
  61:Generated_Source\PSoC4/SPIM.c **** *
  62:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/SPIM.c **** void SPIM_Init(void) 
  64:Generated_Source\PSoC4/SPIM.c **** {
  34              		.loc 1 64 0
  35              		.cfi_startproc
  36 0000 80B5     		push	{r7, lr}
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 00AF     		add	r7, sp, #0
  41              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC4/SPIM.c ****     /* Initialize the Bit counter */
  66:Generated_Source\PSoC4/SPIM.c ****     SPIM_COUNTER_PERIOD_REG = SPIM_BITCTR_INIT;
  42              		.loc 1 66 0
  43 0004 084B     		ldr	r3, .L2
  44 0006 0F22     		mov	r2, #15
  45 0008 1A70     		strb	r2, [r3]
  67:Generated_Source\PSoC4/SPIM.c **** 
  68:Generated_Source\PSoC4/SPIM.c ****     /* Init TX ISR  */
  69:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 3


  70:Generated_Source\PSoC4/SPIM.c ****         CyIntDisable         (SPIM_TX_ISR_NUMBER);
  71:Generated_Source\PSoC4/SPIM.c ****         CyIntSetPriority     (SPIM_TX_ISR_NUMBER,  SPIM_TX_ISR_PRIORITY);
  72:Generated_Source\PSoC4/SPIM.c ****         (void) CyIntSetVector(SPIM_TX_ISR_NUMBER, &SPIM_TX_ISR);
  73:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
  74:Generated_Source\PSoC4/SPIM.c **** 
  75:Generated_Source\PSoC4/SPIM.c ****     /* Init RX ISR  */
  76:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
  77:Generated_Source\PSoC4/SPIM.c ****         CyIntDisable         (SPIM_RX_ISR_NUMBER);
  78:Generated_Source\PSoC4/SPIM.c ****         CyIntSetPriority     (SPIM_RX_ISR_NUMBER,  SPIM_RX_ISR_PRIORITY);
  79:Generated_Source\PSoC4/SPIM.c ****         (void) CyIntSetVector(SPIM_RX_ISR_NUMBER, &SPIM_RX_ISR);
  80:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
  81:Generated_Source\PSoC4/SPIM.c **** 
  82:Generated_Source\PSoC4/SPIM.c ****     /* Clear any stray data from the RX and TX FIFO */
  83:Generated_Source\PSoC4/SPIM.c ****     SPIM_ClearFIFO();
  46              		.loc 1 83 0
  47 000a FFF7FEFF 		bl	SPIM_ClearFIFO
  84:Generated_Source\PSoC4/SPIM.c **** 
  85:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
  86:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferFull  = 0u;
  87:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferRead  = 0u;
  88:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferWrite = 0u;
  89:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
  90:Generated_Source\PSoC4/SPIM.c **** 
  91:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  92:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferFull  = 0u;
  93:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferRead  = 0u;
  94:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferWrite = 0u;
  95:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
  96:Generated_Source\PSoC4/SPIM.c **** 
  97:Generated_Source\PSoC4/SPIM.c ****     (void) SPIM_ReadTxStatus(); /* Clear Tx status and swStatusTx */
  48              		.loc 1 97 0
  49 000e FFF7FEFF 		bl	SPIM_ReadTxStatus
  98:Generated_Source\PSoC4/SPIM.c ****     (void) SPIM_ReadRxStatus(); /* Clear Rx status and swStatusRx */
  50              		.loc 1 98 0
  51 0012 FFF7FEFF 		bl	SPIM_ReadRxStatus
  99:Generated_Source\PSoC4/SPIM.c **** 
 100:Generated_Source\PSoC4/SPIM.c ****     /* Configure TX and RX interrupt mask */
 101:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_MASK_REG = SPIM_TX_INIT_INTERRUPTS_MASK;
  52              		.loc 1 101 0
  53 0016 054B     		ldr	r3, .L2+4
  54 0018 0022     		mov	r2, #0
  55 001a 1A70     		strb	r2, [r3]
 102:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_MASK_REG = SPIM_RX_INIT_INTERRUPTS_MASK;
  56              		.loc 1 102 0
  57 001c 044B     		ldr	r3, .L2+8
  58 001e 0022     		mov	r2, #0
  59 0020 1A70     		strb	r2, [r3]
 103:Generated_Source\PSoC4/SPIM.c **** }
  60              		.loc 1 103 0
  61 0022 BD46     		mov	sp, r7
  62              		@ sp needed
  63 0024 80BD     		pop	{r7, pc}
  64              	.L3:
  65 0026 C046     		.align	2
  66              	.L2:
  67 0028 86000F40 		.word	1074724998
  68 002c 87000F40 		.word	1074724999
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 4


  69 0030 85000F40 		.word	1074724997
  70              		.cfi_endproc
  71              	.LFE1:
  72              		.size	SPIM_Init, .-SPIM_Init
  73              		.section	.text.SPIM_Enable,"ax",%progbits
  74              		.align	2
  75              		.global	SPIM_Enable
  76              		.code	16
  77              		.thumb_func
  78              		.type	SPIM_Enable, %function
  79              	SPIM_Enable:
  80              	.LFB2:
 104:Generated_Source\PSoC4/SPIM.c **** 
 105:Generated_Source\PSoC4/SPIM.c **** 
 106:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 107:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Enable
 108:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 109:Generated_Source\PSoC4/SPIM.c **** *
 110:Generated_Source\PSoC4/SPIM.c **** * Summary:
 111:Generated_Source\PSoC4/SPIM.c **** *  Enable SPIM component.
 112:Generated_Source\PSoC4/SPIM.c **** *
 113:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 114:Generated_Source\PSoC4/SPIM.c **** *  None.
 115:Generated_Source\PSoC4/SPIM.c **** *
 116:Generated_Source\PSoC4/SPIM.c **** * Return:
 117:Generated_Source\PSoC4/SPIM.c **** *  None.
 118:Generated_Source\PSoC4/SPIM.c **** *
 119:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 120:Generated_Source\PSoC4/SPIM.c **** void SPIM_Enable(void) 
 121:Generated_Source\PSoC4/SPIM.c **** {
  81              		.loc 1 121 0
  82              		.cfi_startproc
  83 0000 90B5     		push	{r4, r7, lr}
  84              		.cfi_def_cfa_offset 12
  85              		.cfi_offset 4, -12
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 83B0     		sub	sp, sp, #12
  89              		.cfi_def_cfa_offset 24
  90 0004 00AF     		add	r7, sp, #0
  91              		.cfi_def_cfa_register 7
 122:Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 123:Generated_Source\PSoC4/SPIM.c **** 
 124:Generated_Source\PSoC4/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
  92              		.loc 1 124 0
  93 0006 FC1D     		add	r4, r7, #7
  94 0008 FFF7FEFF 		bl	CyEnterCriticalSection
  95 000c 031C     		mov	r3, r0
  96 000e 2370     		strb	r3, [r4]
 125:Generated_Source\PSoC4/SPIM.c ****     SPIM_COUNTER_CONTROL_REG |= SPIM_CNTR_ENABLE;
  97              		.loc 1 125 0
  98 0010 134A     		ldr	r2, .L5
  99 0012 134B     		ldr	r3, .L5
 100 0014 1B78     		ldrb	r3, [r3]
 101 0016 DBB2     		uxtb	r3, r3
 102 0018 2021     		mov	r1, #32
 103 001a 0B43     		orr	r3, r1
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 5


 104 001c DBB2     		uxtb	r3, r3
 105 001e 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_ACTL_REG  |= SPIM_INT_ENABLE;
 106              		.loc 1 126 0
 107 0020 104A     		ldr	r2, .L5+4
 108 0022 104B     		ldr	r3, .L5+4
 109 0024 1B78     		ldrb	r3, [r3]
 110 0026 DBB2     		uxtb	r3, r3
 111 0028 1021     		mov	r1, #16
 112 002a 0B43     		orr	r3, r1
 113 002c DBB2     		uxtb	r3, r3
 114 002e 1370     		strb	r3, [r2]
 127:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_ACTL_REG  |= SPIM_INT_ENABLE;
 115              		.loc 1 127 0
 116 0030 0D4A     		ldr	r2, .L5+8
 117 0032 0D4B     		ldr	r3, .L5+8
 118 0034 1B78     		ldrb	r3, [r3]
 119 0036 DBB2     		uxtb	r3, r3
 120 0038 1021     		mov	r1, #16
 121 003a 0B43     		orr	r3, r1
 122 003c DBB2     		uxtb	r3, r3
 123 003e 1370     		strb	r3, [r2]
 128:Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 124              		.loc 1 128 0
 125 0040 FB1D     		add	r3, r7, #7
 126 0042 1B78     		ldrb	r3, [r3]
 127 0044 181C     		mov	r0, r3
 128 0046 FFF7FEFF 		bl	CyExitCriticalSection
 129:Generated_Source\PSoC4/SPIM.c **** 
 130:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_CLOCK)
 131:Generated_Source\PSoC4/SPIM.c ****         SPIM_IntClock_Enable();
 129              		.loc 1 131 0
 130 004a FF20     		mov	r0, #255
 131 004c FFF7FEFF 		bl	SPIM_IntClock_StartEx
 132:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_CLOCK) */
 133:Generated_Source\PSoC4/SPIM.c **** 
 134:Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableTxInt();
 132              		.loc 1 134 0
 133 0050 FFF7FEFF 		bl	SPIM_EnableTxInt
 135:Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableRxInt();
 134              		.loc 1 135 0
 135 0054 FFF7FEFF 		bl	SPIM_EnableRxInt
 136:Generated_Source\PSoC4/SPIM.c **** }
 136              		.loc 1 136 0
 137 0058 BD46     		mov	sp, r7
 138 005a 03B0     		add	sp, sp, #12
 139              		@ sp needed
 140 005c 90BD     		pop	{r4, r7, pc}
 141              	.L6:
 142 005e C046     		.align	2
 143              	.L5:
 144 0060 96000F40 		.word	1074725014
 145 0064 97000F40 		.word	1074725015
 146 0068 95000F40 		.word	1074725013
 147              		.cfi_endproc
 148              	.LFE2:
 149              		.size	SPIM_Enable, .-SPIM_Enable
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 6


 150              		.section	.text.SPIM_Start,"ax",%progbits
 151              		.align	2
 152              		.global	SPIM_Start
 153              		.code	16
 154              		.thumb_func
 155              		.type	SPIM_Start, %function
 156              	SPIM_Start:
 157              	.LFB3:
 137:Generated_Source\PSoC4/SPIM.c **** 
 138:Generated_Source\PSoC4/SPIM.c **** 
 139:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 140:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Start
 141:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 142:Generated_Source\PSoC4/SPIM.c **** *
 143:Generated_Source\PSoC4/SPIM.c **** * Summary:
 144:Generated_Source\PSoC4/SPIM.c **** *  Initialize and Enable the SPI Master component.
 145:Generated_Source\PSoC4/SPIM.c **** *
 146:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 147:Generated_Source\PSoC4/SPIM.c **** *  None.
 148:Generated_Source\PSoC4/SPIM.c **** *
 149:Generated_Source\PSoC4/SPIM.c **** * Return:
 150:Generated_Source\PSoC4/SPIM.c **** *  None.
 151:Generated_Source\PSoC4/SPIM.c **** *
 152:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 153:Generated_Source\PSoC4/SPIM.c **** *  SPIM_initVar - used to check initial configuration, modified on
 154:Generated_Source\PSoC4/SPIM.c **** *  first function call.
 155:Generated_Source\PSoC4/SPIM.c **** *
 156:Generated_Source\PSoC4/SPIM.c **** * Theory:
 157:Generated_Source\PSoC4/SPIM.c **** *  Enable the clock input to enable operation.
 158:Generated_Source\PSoC4/SPIM.c **** *
 159:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 160:Generated_Source\PSoC4/SPIM.c **** *  No.
 161:Generated_Source\PSoC4/SPIM.c **** *
 162:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 163:Generated_Source\PSoC4/SPIM.c **** void SPIM_Start(void) 
 164:Generated_Source\PSoC4/SPIM.c **** {
 158              		.loc 1 164 0
 159              		.cfi_startproc
 160 0000 80B5     		push	{r7, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 7, -8
 163              		.cfi_offset 14, -4
 164 0002 00AF     		add	r7, sp, #0
 165              		.cfi_def_cfa_register 7
 165:Generated_Source\PSoC4/SPIM.c ****     if(0u == SPIM_initVar)
 166              		.loc 1 165 0
 167 0004 064B     		ldr	r3, .L9
 168 0006 1B78     		ldrb	r3, [r3]
 169 0008 002B     		cmp	r3, #0
 170 000a 04D1     		bne	.L8
 166:Generated_Source\PSoC4/SPIM.c ****     {
 167:Generated_Source\PSoC4/SPIM.c ****         SPIM_Init();
 171              		.loc 1 167 0
 172 000c FFF7FEFF 		bl	SPIM_Init
 168:Generated_Source\PSoC4/SPIM.c ****         SPIM_initVar = 1u;
 173              		.loc 1 168 0
 174 0010 034B     		ldr	r3, .L9
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 7


 175 0012 0122     		mov	r2, #1
 176 0014 1A70     		strb	r2, [r3]
 177              	.L8:
 169:Generated_Source\PSoC4/SPIM.c ****     }
 170:Generated_Source\PSoC4/SPIM.c **** 
 171:Generated_Source\PSoC4/SPIM.c ****     SPIM_Enable();
 178              		.loc 1 171 0
 179 0016 FFF7FEFF 		bl	SPIM_Enable
 172:Generated_Source\PSoC4/SPIM.c **** }
 180              		.loc 1 172 0
 181 001a BD46     		mov	sp, r7
 182              		@ sp needed
 183 001c 80BD     		pop	{r7, pc}
 184              	.L10:
 185 001e C046     		.align	2
 186              	.L9:
 187 0020 00000000 		.word	SPIM_initVar
 188              		.cfi_endproc
 189              	.LFE3:
 190              		.size	SPIM_Start, .-SPIM_Start
 191              		.section	.text.SPIM_Stop,"ax",%progbits
 192              		.align	2
 193              		.global	SPIM_Stop
 194              		.code	16
 195              		.thumb_func
 196              		.type	SPIM_Stop, %function
 197              	SPIM_Stop:
 198              	.LFB4:
 173:Generated_Source\PSoC4/SPIM.c **** 
 174:Generated_Source\PSoC4/SPIM.c **** 
 175:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 176:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Stop
 177:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 178:Generated_Source\PSoC4/SPIM.c **** *
 179:Generated_Source\PSoC4/SPIM.c **** * Summary:
 180:Generated_Source\PSoC4/SPIM.c **** *  Disable the SPI Master component.
 181:Generated_Source\PSoC4/SPIM.c **** *
 182:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 183:Generated_Source\PSoC4/SPIM.c **** *  None.
 184:Generated_Source\PSoC4/SPIM.c **** *
 185:Generated_Source\PSoC4/SPIM.c **** * Return:
 186:Generated_Source\PSoC4/SPIM.c **** *  None.
 187:Generated_Source\PSoC4/SPIM.c **** *
 188:Generated_Source\PSoC4/SPIM.c **** * Theory:
 189:Generated_Source\PSoC4/SPIM.c **** *  Disable the clock input to enable operation.
 190:Generated_Source\PSoC4/SPIM.c **** *
 191:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 192:Generated_Source\PSoC4/SPIM.c **** void SPIM_Stop(void) 
 193:Generated_Source\PSoC4/SPIM.c **** {
 199              		.loc 1 193 0
 200              		.cfi_startproc
 201 0000 90B5     		push	{r4, r7, lr}
 202              		.cfi_def_cfa_offset 12
 203              		.cfi_offset 4, -12
 204              		.cfi_offset 7, -8
 205              		.cfi_offset 14, -4
 206 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 8


 207              		.cfi_def_cfa_offset 24
 208 0004 00AF     		add	r7, sp, #0
 209              		.cfi_def_cfa_register 7
 194:Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 195:Generated_Source\PSoC4/SPIM.c **** 
 196:Generated_Source\PSoC4/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 210              		.loc 1 196 0
 211 0006 FC1D     		add	r4, r7, #7
 212 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 213 000c 031C     		mov	r3, r0
 214 000e 2370     		strb	r3, [r4]
 197:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_ACTL_REG &= ((uint8) ~SPIM_INT_ENABLE);
 215              		.loc 1 197 0
 216 0010 0E4A     		ldr	r2, .L12
 217 0012 0E4B     		ldr	r3, .L12
 218 0014 1B78     		ldrb	r3, [r3]
 219 0016 DBB2     		uxtb	r3, r3
 220 0018 1021     		mov	r1, #16
 221 001a 8B43     		bic	r3, r1
 222 001c DBB2     		uxtb	r3, r3
 223 001e 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_ACTL_REG &= ((uint8) ~SPIM_INT_ENABLE);
 224              		.loc 1 198 0
 225 0020 0B4A     		ldr	r2, .L12+4
 226 0022 0B4B     		ldr	r3, .L12+4
 227 0024 1B78     		ldrb	r3, [r3]
 228 0026 DBB2     		uxtb	r3, r3
 229 0028 1021     		mov	r1, #16
 230 002a 8B43     		bic	r3, r1
 231 002c DBB2     		uxtb	r3, r3
 232 002e 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 233              		.loc 1 199 0
 234 0030 FB1D     		add	r3, r7, #7
 235 0032 1B78     		ldrb	r3, [r3]
 236 0034 181C     		mov	r0, r3
 237 0036 FFF7FEFF 		bl	CyExitCriticalSection
 200:Generated_Source\PSoC4/SPIM.c **** 
 201:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_CLOCK)
 202:Generated_Source\PSoC4/SPIM.c ****         SPIM_IntClock_Disable();
 238              		.loc 1 202 0
 239 003a FFF7FEFF 		bl	SPIM_IntClock_Stop
 203:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_CLOCK) */
 204:Generated_Source\PSoC4/SPIM.c **** 
 205:Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableTxInt();
 240              		.loc 1 205 0
 241 003e FFF7FEFF 		bl	SPIM_DisableTxInt
 206:Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableRxInt();
 242              		.loc 1 206 0
 243 0042 FFF7FEFF 		bl	SPIM_DisableRxInt
 207:Generated_Source\PSoC4/SPIM.c **** }
 244              		.loc 1 207 0
 245 0046 BD46     		mov	sp, r7
 246 0048 03B0     		add	sp, sp, #12
 247              		@ sp needed
 248 004a 90BD     		pop	{r4, r7, pc}
 249              	.L13:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 9


 250              		.align	2
 251              	.L12:
 252 004c 97000F40 		.word	1074725015
 253 0050 95000F40 		.word	1074725013
 254              		.cfi_endproc
 255              	.LFE4:
 256              		.size	SPIM_Stop, .-SPIM_Stop
 257              		.section	.text.SPIM_EnableTxInt,"ax",%progbits
 258              		.align	2
 259              		.global	SPIM_EnableTxInt
 260              		.code	16
 261              		.thumb_func
 262              		.type	SPIM_EnableTxInt, %function
 263              	SPIM_EnableTxInt:
 264              	.LFB5:
 208:Generated_Source\PSoC4/SPIM.c **** 
 209:Generated_Source\PSoC4/SPIM.c **** 
 210:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_EnableTxInt
 212:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 213:Generated_Source\PSoC4/SPIM.c **** *
 214:Generated_Source\PSoC4/SPIM.c **** * Summary:
 215:Generated_Source\PSoC4/SPIM.c **** *  Enable internal Tx interrupt generation.
 216:Generated_Source\PSoC4/SPIM.c **** *
 217:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 218:Generated_Source\PSoC4/SPIM.c **** *  None.
 219:Generated_Source\PSoC4/SPIM.c **** *
 220:Generated_Source\PSoC4/SPIM.c **** * Return:
 221:Generated_Source\PSoC4/SPIM.c **** *  None.
 222:Generated_Source\PSoC4/SPIM.c **** *
 223:Generated_Source\PSoC4/SPIM.c **** * Theory:
 224:Generated_Source\PSoC4/SPIM.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 225:Generated_Source\PSoC4/SPIM.c **** *
 226:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 227:Generated_Source\PSoC4/SPIM.c **** void SPIM_EnableTxInt(void) 
 228:Generated_Source\PSoC4/SPIM.c **** {
 265              		.loc 1 228 0
 266              		.cfi_startproc
 267 0000 80B5     		push	{r7, lr}
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 7, -8
 270              		.cfi_offset 14, -4
 271 0002 00AF     		add	r7, sp, #0
 272              		.cfi_def_cfa_register 7
 229:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
 230:Generated_Source\PSoC4/SPIM.c ****         CyIntEnable(SPIM_TX_ISR_NUMBER);
 231:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
 232:Generated_Source\PSoC4/SPIM.c **** }
 273              		.loc 1 232 0
 274 0004 BD46     		mov	sp, r7
 275              		@ sp needed
 276 0006 80BD     		pop	{r7, pc}
 277              		.cfi_endproc
 278              	.LFE5:
 279              		.size	SPIM_EnableTxInt, .-SPIM_EnableTxInt
 280              		.section	.text.SPIM_EnableRxInt,"ax",%progbits
 281              		.align	2
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 10


 282              		.global	SPIM_EnableRxInt
 283              		.code	16
 284              		.thumb_func
 285              		.type	SPIM_EnableRxInt, %function
 286              	SPIM_EnableRxInt:
 287              	.LFB6:
 233:Generated_Source\PSoC4/SPIM.c **** 
 234:Generated_Source\PSoC4/SPIM.c **** 
 235:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 236:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_EnableRxInt
 237:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 238:Generated_Source\PSoC4/SPIM.c **** *
 239:Generated_Source\PSoC4/SPIM.c **** * Summary:
 240:Generated_Source\PSoC4/SPIM.c **** *  Enable internal Rx interrupt generation.
 241:Generated_Source\PSoC4/SPIM.c **** *
 242:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 243:Generated_Source\PSoC4/SPIM.c **** *  None.
 244:Generated_Source\PSoC4/SPIM.c **** *
 245:Generated_Source\PSoC4/SPIM.c **** * Return:
 246:Generated_Source\PSoC4/SPIM.c **** *  None.
 247:Generated_Source\PSoC4/SPIM.c **** *
 248:Generated_Source\PSoC4/SPIM.c **** * Theory:
 249:Generated_Source\PSoC4/SPIM.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 250:Generated_Source\PSoC4/SPIM.c **** *
 251:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 252:Generated_Source\PSoC4/SPIM.c **** void SPIM_EnableRxInt(void) 
 253:Generated_Source\PSoC4/SPIM.c **** {
 288              		.loc 1 253 0
 289              		.cfi_startproc
 290 0000 80B5     		push	{r7, lr}
 291              		.cfi_def_cfa_offset 8
 292              		.cfi_offset 7, -8
 293              		.cfi_offset 14, -4
 294 0002 00AF     		add	r7, sp, #0
 295              		.cfi_def_cfa_register 7
 254:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
 255:Generated_Source\PSoC4/SPIM.c ****         CyIntEnable(SPIM_RX_ISR_NUMBER);
 256:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
 257:Generated_Source\PSoC4/SPIM.c **** }
 296              		.loc 1 257 0
 297 0004 BD46     		mov	sp, r7
 298              		@ sp needed
 299 0006 80BD     		pop	{r7, pc}
 300              		.cfi_endproc
 301              	.LFE6:
 302              		.size	SPIM_EnableRxInt, .-SPIM_EnableRxInt
 303              		.section	.text.SPIM_DisableTxInt,"ax",%progbits
 304              		.align	2
 305              		.global	SPIM_DisableTxInt
 306              		.code	16
 307              		.thumb_func
 308              		.type	SPIM_DisableTxInt, %function
 309              	SPIM_DisableTxInt:
 310              	.LFB7:
 258:Generated_Source\PSoC4/SPIM.c **** 
 259:Generated_Source\PSoC4/SPIM.c **** 
 260:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 11


 261:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_DisableTxInt
 262:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 263:Generated_Source\PSoC4/SPIM.c **** *
 264:Generated_Source\PSoC4/SPIM.c **** * Summary:
 265:Generated_Source\PSoC4/SPIM.c **** *  Disable internal Tx interrupt generation.
 266:Generated_Source\PSoC4/SPIM.c **** *
 267:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 268:Generated_Source\PSoC4/SPIM.c **** *  None.
 269:Generated_Source\PSoC4/SPIM.c **** *
 270:Generated_Source\PSoC4/SPIM.c **** * Return:
 271:Generated_Source\PSoC4/SPIM.c **** *  None.
 272:Generated_Source\PSoC4/SPIM.c **** *
 273:Generated_Source\PSoC4/SPIM.c **** * Theory:
 274:Generated_Source\PSoC4/SPIM.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 275:Generated_Source\PSoC4/SPIM.c **** *
 276:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 277:Generated_Source\PSoC4/SPIM.c **** void SPIM_DisableTxInt(void) 
 278:Generated_Source\PSoC4/SPIM.c **** {
 311              		.loc 1 278 0
 312              		.cfi_startproc
 313 0000 80B5     		push	{r7, lr}
 314              		.cfi_def_cfa_offset 8
 315              		.cfi_offset 7, -8
 316              		.cfi_offset 14, -4
 317 0002 00AF     		add	r7, sp, #0
 318              		.cfi_def_cfa_register 7
 279:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
 280:Generated_Source\PSoC4/SPIM.c ****         CyIntDisable(SPIM_TX_ISR_NUMBER);
 281:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
 282:Generated_Source\PSoC4/SPIM.c **** }
 319              		.loc 1 282 0
 320 0004 BD46     		mov	sp, r7
 321              		@ sp needed
 322 0006 80BD     		pop	{r7, pc}
 323              		.cfi_endproc
 324              	.LFE7:
 325              		.size	SPIM_DisableTxInt, .-SPIM_DisableTxInt
 326              		.section	.text.SPIM_DisableRxInt,"ax",%progbits
 327              		.align	2
 328              		.global	SPIM_DisableRxInt
 329              		.code	16
 330              		.thumb_func
 331              		.type	SPIM_DisableRxInt, %function
 332              	SPIM_DisableRxInt:
 333              	.LFB8:
 283:Generated_Source\PSoC4/SPIM.c **** 
 284:Generated_Source\PSoC4/SPIM.c **** 
 285:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 286:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_DisableRxInt
 287:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 288:Generated_Source\PSoC4/SPIM.c **** *
 289:Generated_Source\PSoC4/SPIM.c **** * Summary:
 290:Generated_Source\PSoC4/SPIM.c **** *  Disable internal Rx interrupt generation.
 291:Generated_Source\PSoC4/SPIM.c **** *
 292:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 293:Generated_Source\PSoC4/SPIM.c **** *  None.
 294:Generated_Source\PSoC4/SPIM.c **** *
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 12


 295:Generated_Source\PSoC4/SPIM.c **** * Return:
 296:Generated_Source\PSoC4/SPIM.c **** *  None.
 297:Generated_Source\PSoC4/SPIM.c **** *
 298:Generated_Source\PSoC4/SPIM.c **** * Theory:
 299:Generated_Source\PSoC4/SPIM.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 300:Generated_Source\PSoC4/SPIM.c **** *
 301:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 302:Generated_Source\PSoC4/SPIM.c **** void SPIM_DisableRxInt(void) 
 303:Generated_Source\PSoC4/SPIM.c **** {
 334              		.loc 1 303 0
 335              		.cfi_startproc
 336 0000 80B5     		push	{r7, lr}
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 7, -8
 339              		.cfi_offset 14, -4
 340 0002 00AF     		add	r7, sp, #0
 341              		.cfi_def_cfa_register 7
 304:Generated_Source\PSoC4/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
 305:Generated_Source\PSoC4/SPIM.c ****         CyIntDisable(SPIM_RX_ISR_NUMBER);
 306:Generated_Source\PSoC4/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
 307:Generated_Source\PSoC4/SPIM.c **** }
 342              		.loc 1 307 0
 343 0004 BD46     		mov	sp, r7
 344              		@ sp needed
 345 0006 80BD     		pop	{r7, pc}
 346              		.cfi_endproc
 347              	.LFE8:
 348              		.size	SPIM_DisableRxInt, .-SPIM_DisableRxInt
 349              		.section	.text.SPIM_SetTxInterruptMode,"ax",%progbits
 350              		.align	2
 351              		.global	SPIM_SetTxInterruptMode
 352              		.code	16
 353              		.thumb_func
 354              		.type	SPIM_SetTxInterruptMode, %function
 355              	SPIM_SetTxInterruptMode:
 356              	.LFB9:
 308:Generated_Source\PSoC4/SPIM.c **** 
 309:Generated_Source\PSoC4/SPIM.c **** 
 310:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 311:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_SetTxInterruptMode
 312:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 313:Generated_Source\PSoC4/SPIM.c **** *
 314:Generated_Source\PSoC4/SPIM.c **** * Summary:
 315:Generated_Source\PSoC4/SPIM.c **** *  Configure which status bits trigger an interrupt event.
 316:Generated_Source\PSoC4/SPIM.c **** *
 317:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 318:Generated_Source\PSoC4/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 319:Generated_Source\PSoC4/SPIM.c **** *  header file).
 320:Generated_Source\PSoC4/SPIM.c **** *
 321:Generated_Source\PSoC4/SPIM.c **** * Return:
 322:Generated_Source\PSoC4/SPIM.c **** *  None.
 323:Generated_Source\PSoC4/SPIM.c **** *
 324:Generated_Source\PSoC4/SPIM.c **** * Theory:
 325:Generated_Source\PSoC4/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
 326:Generated_Source\PSoC4/SPIM.c **** *
 327:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 328:Generated_Source\PSoC4/SPIM.c **** void SPIM_SetTxInterruptMode(uint8 intSrc) 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 13


 329:Generated_Source\PSoC4/SPIM.c **** {
 357              		.loc 1 329 0
 358              		.cfi_startproc
 359 0000 80B5     		push	{r7, lr}
 360              		.cfi_def_cfa_offset 8
 361              		.cfi_offset 7, -8
 362              		.cfi_offset 14, -4
 363 0002 82B0     		sub	sp, sp, #8
 364              		.cfi_def_cfa_offset 16
 365 0004 00AF     		add	r7, sp, #0
 366              		.cfi_def_cfa_register 7
 367 0006 021C     		mov	r2, r0
 368 0008 FB1D     		add	r3, r7, #7
 369 000a 1A70     		strb	r2, [r3]
 330:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_MASK_REG = intSrc;
 370              		.loc 1 330 0
 371 000c 034A     		ldr	r2, .L19
 372 000e FB1D     		add	r3, r7, #7
 373 0010 1B78     		ldrb	r3, [r3]
 374 0012 1370     		strb	r3, [r2]
 331:Generated_Source\PSoC4/SPIM.c **** }
 375              		.loc 1 331 0
 376 0014 BD46     		mov	sp, r7
 377 0016 02B0     		add	sp, sp, #8
 378              		@ sp needed
 379 0018 80BD     		pop	{r7, pc}
 380              	.L20:
 381 001a C046     		.align	2
 382              	.L19:
 383 001c 87000F40 		.word	1074724999
 384              		.cfi_endproc
 385              	.LFE9:
 386              		.size	SPIM_SetTxInterruptMode, .-SPIM_SetTxInterruptMode
 387              		.section	.text.SPIM_SetRxInterruptMode,"ax",%progbits
 388              		.align	2
 389              		.global	SPIM_SetRxInterruptMode
 390              		.code	16
 391              		.thumb_func
 392              		.type	SPIM_SetRxInterruptMode, %function
 393              	SPIM_SetRxInterruptMode:
 394              	.LFB10:
 332:Generated_Source\PSoC4/SPIM.c **** 
 333:Generated_Source\PSoC4/SPIM.c **** 
 334:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 335:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_SetRxInterruptMode
 336:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 337:Generated_Source\PSoC4/SPIM.c **** *
 338:Generated_Source\PSoC4/SPIM.c **** * Summary:
 339:Generated_Source\PSoC4/SPIM.c **** *  Configure which status bits trigger an interrupt event.
 340:Generated_Source\PSoC4/SPIM.c **** *
 341:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 342:Generated_Source\PSoC4/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 343:Generated_Source\PSoC4/SPIM.c **** *  header file).
 344:Generated_Source\PSoC4/SPIM.c **** *
 345:Generated_Source\PSoC4/SPIM.c **** * Return:
 346:Generated_Source\PSoC4/SPIM.c **** *  None.
 347:Generated_Source\PSoC4/SPIM.c **** *
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 14


 348:Generated_Source\PSoC4/SPIM.c **** * Theory:
 349:Generated_Source\PSoC4/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
 350:Generated_Source\PSoC4/SPIM.c **** *
 351:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 352:Generated_Source\PSoC4/SPIM.c **** void SPIM_SetRxInterruptMode(uint8 intSrc) 
 353:Generated_Source\PSoC4/SPIM.c **** {
 395              		.loc 1 353 0
 396              		.cfi_startproc
 397 0000 80B5     		push	{r7, lr}
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 7, -8
 400              		.cfi_offset 14, -4
 401 0002 82B0     		sub	sp, sp, #8
 402              		.cfi_def_cfa_offset 16
 403 0004 00AF     		add	r7, sp, #0
 404              		.cfi_def_cfa_register 7
 405 0006 021C     		mov	r2, r0
 406 0008 FB1D     		add	r3, r7, #7
 407 000a 1A70     		strb	r2, [r3]
 354:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_MASK_REG  = intSrc;
 408              		.loc 1 354 0
 409 000c 034A     		ldr	r2, .L22
 410 000e FB1D     		add	r3, r7, #7
 411 0010 1B78     		ldrb	r3, [r3]
 412 0012 1370     		strb	r3, [r2]
 355:Generated_Source\PSoC4/SPIM.c **** }
 413              		.loc 1 355 0
 414 0014 BD46     		mov	sp, r7
 415 0016 02B0     		add	sp, sp, #8
 416              		@ sp needed
 417 0018 80BD     		pop	{r7, pc}
 418              	.L23:
 419 001a C046     		.align	2
 420              	.L22:
 421 001c 85000F40 		.word	1074724997
 422              		.cfi_endproc
 423              	.LFE10:
 424              		.size	SPIM_SetRxInterruptMode, .-SPIM_SetRxInterruptMode
 425              		.section	.text.SPIM_ReadTxStatus,"ax",%progbits
 426              		.align	2
 427              		.global	SPIM_ReadTxStatus
 428              		.code	16
 429              		.thumb_func
 430              		.type	SPIM_ReadTxStatus, %function
 431              	SPIM_ReadTxStatus:
 432              	.LFB11:
 356:Generated_Source\PSoC4/SPIM.c **** 
 357:Generated_Source\PSoC4/SPIM.c **** 
 358:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 359:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ReadTxStatus
 360:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 361:Generated_Source\PSoC4/SPIM.c **** *
 362:Generated_Source\PSoC4/SPIM.c **** * Summary:
 363:Generated_Source\PSoC4/SPIM.c **** *  Read the Tx status register for the component.
 364:Generated_Source\PSoC4/SPIM.c **** *
 365:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 366:Generated_Source\PSoC4/SPIM.c **** *  None.
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 15


 367:Generated_Source\PSoC4/SPIM.c **** *
 368:Generated_Source\PSoC4/SPIM.c **** * Return:
 369:Generated_Source\PSoC4/SPIM.c **** *  Contents of the Tx status register.
 370:Generated_Source\PSoC4/SPIM.c **** *
 371:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 372:Generated_Source\PSoC4/SPIM.c **** *  SPIM_swStatusTx - used to store in software status register,
 373:Generated_Source\PSoC4/SPIM.c **** *  modified every function call - resets to zero.
 374:Generated_Source\PSoC4/SPIM.c **** *
 375:Generated_Source\PSoC4/SPIM.c **** * Theory:
 376:Generated_Source\PSoC4/SPIM.c **** *  Allows the user and the API to read the Tx status register for error
 377:Generated_Source\PSoC4/SPIM.c **** *  detection and flow control.
 378:Generated_Source\PSoC4/SPIM.c **** *
 379:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 380:Generated_Source\PSoC4/SPIM.c **** *  Clear Tx status register of the component.
 381:Generated_Source\PSoC4/SPIM.c **** *
 382:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 383:Generated_Source\PSoC4/SPIM.c **** *  No.
 384:Generated_Source\PSoC4/SPIM.c **** *
 385:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 386:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_ReadTxStatus(void) 
 387:Generated_Source\PSoC4/SPIM.c **** {
 433              		.loc 1 387 0
 434              		.cfi_startproc
 435 0000 80B5     		push	{r7, lr}
 436              		.cfi_def_cfa_offset 8
 437              		.cfi_offset 7, -8
 438              		.cfi_offset 14, -4
 439 0002 82B0     		sub	sp, sp, #8
 440              		.cfi_def_cfa_offset 16
 441 0004 00AF     		add	r7, sp, #0
 442              		.cfi_def_cfa_register 7
 388:Generated_Source\PSoC4/SPIM.c ****     uint8 tmpStatus;
 389:Generated_Source\PSoC4/SPIM.c **** 
 390:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 391:Generated_Source\PSoC4/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 392:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableTxInt();
 393:Generated_Source\PSoC4/SPIM.c **** 
 394:Generated_Source\PSoC4/SPIM.c ****         tmpStatus = SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 395:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusTx = 0u;
 396:Generated_Source\PSoC4/SPIM.c **** 
 397:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableTxInt();
 398:Generated_Source\PSoC4/SPIM.c **** 
 399:Generated_Source\PSoC4/SPIM.c ****     #else
 400:Generated_Source\PSoC4/SPIM.c **** 
 401:Generated_Source\PSoC4/SPIM.c ****         tmpStatus = SPIM_TX_STATUS_REG;
 443              		.loc 1 401 0
 444 0006 054A     		ldr	r2, .L26
 445 0008 FB1D     		add	r3, r7, #7
 446 000a 1278     		ldrb	r2, [r2]
 447 000c 1A70     		strb	r2, [r3]
 402:Generated_Source\PSoC4/SPIM.c **** 
 403:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 404:Generated_Source\PSoC4/SPIM.c **** 
 405:Generated_Source\PSoC4/SPIM.c ****     return(tmpStatus);
 448              		.loc 1 405 0
 449 000e FB1D     		add	r3, r7, #7
 450 0010 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 16


 406:Generated_Source\PSoC4/SPIM.c **** }
 451              		.loc 1 406 0
 452 0012 181C     		mov	r0, r3
 453 0014 BD46     		mov	sp, r7
 454 0016 02B0     		add	sp, sp, #8
 455              		@ sp needed
 456 0018 80BD     		pop	{r7, pc}
 457              	.L27:
 458 001a C046     		.align	2
 459              	.L26:
 460 001c 67000F40 		.word	1074724967
 461              		.cfi_endproc
 462              	.LFE11:
 463              		.size	SPIM_ReadTxStatus, .-SPIM_ReadTxStatus
 464              		.section	.text.SPIM_ReadRxStatus,"ax",%progbits
 465              		.align	2
 466              		.global	SPIM_ReadRxStatus
 467              		.code	16
 468              		.thumb_func
 469              		.type	SPIM_ReadRxStatus, %function
 470              	SPIM_ReadRxStatus:
 471              	.LFB12:
 407:Generated_Source\PSoC4/SPIM.c **** 
 408:Generated_Source\PSoC4/SPIM.c **** 
 409:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ReadRxStatus
 411:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 412:Generated_Source\PSoC4/SPIM.c **** *
 413:Generated_Source\PSoC4/SPIM.c **** * Summary:
 414:Generated_Source\PSoC4/SPIM.c **** *  Read the Rx status register for the component.
 415:Generated_Source\PSoC4/SPIM.c **** *
 416:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 417:Generated_Source\PSoC4/SPIM.c **** *  None.
 418:Generated_Source\PSoC4/SPIM.c **** *
 419:Generated_Source\PSoC4/SPIM.c **** * Return:
 420:Generated_Source\PSoC4/SPIM.c **** *  Contents of the Rx status register.
 421:Generated_Source\PSoC4/SPIM.c **** *
 422:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 423:Generated_Source\PSoC4/SPIM.c **** *  SPIM_swStatusRx - used to store in software Rx status register,
 424:Generated_Source\PSoC4/SPIM.c **** *  modified every function call - resets to zero.
 425:Generated_Source\PSoC4/SPIM.c **** *
 426:Generated_Source\PSoC4/SPIM.c **** * Theory:
 427:Generated_Source\PSoC4/SPIM.c **** *  Allows the user and the API to read the Rx status register for error
 428:Generated_Source\PSoC4/SPIM.c **** *  detection and flow control.
 429:Generated_Source\PSoC4/SPIM.c **** *
 430:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 431:Generated_Source\PSoC4/SPIM.c **** *  Clear Rx status register of the component.
 432:Generated_Source\PSoC4/SPIM.c **** *
 433:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 434:Generated_Source\PSoC4/SPIM.c **** *  No.
 435:Generated_Source\PSoC4/SPIM.c **** *
 436:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 437:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_ReadRxStatus(void) 
 438:Generated_Source\PSoC4/SPIM.c **** {
 472              		.loc 1 438 0
 473              		.cfi_startproc
 474 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 17


 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 7, -8
 477              		.cfi_offset 14, -4
 478 0002 82B0     		sub	sp, sp, #8
 479              		.cfi_def_cfa_offset 16
 480 0004 00AF     		add	r7, sp, #0
 481              		.cfi_def_cfa_register 7
 439:Generated_Source\PSoC4/SPIM.c ****     uint8 tmpStatus;
 440:Generated_Source\PSoC4/SPIM.c **** 
 441:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 442:Generated_Source\PSoC4/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 443:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableRxInt();
 444:Generated_Source\PSoC4/SPIM.c **** 
 445:Generated_Source\PSoC4/SPIM.c ****         tmpStatus = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
 446:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusRx = 0u;
 447:Generated_Source\PSoC4/SPIM.c **** 
 448:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableRxInt();
 449:Generated_Source\PSoC4/SPIM.c **** 
 450:Generated_Source\PSoC4/SPIM.c ****     #else
 451:Generated_Source\PSoC4/SPIM.c **** 
 452:Generated_Source\PSoC4/SPIM.c ****         tmpStatus = SPIM_RX_STATUS_REG;
 482              		.loc 1 452 0
 483 0006 054A     		ldr	r2, .L30
 484 0008 FB1D     		add	r3, r7, #7
 485 000a 1278     		ldrb	r2, [r2]
 486 000c 1A70     		strb	r2, [r3]
 453:Generated_Source\PSoC4/SPIM.c **** 
 454:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 455:Generated_Source\PSoC4/SPIM.c **** 
 456:Generated_Source\PSoC4/SPIM.c ****     return(tmpStatus);
 487              		.loc 1 456 0
 488 000e FB1D     		add	r3, r7, #7
 489 0010 1B78     		ldrb	r3, [r3]
 457:Generated_Source\PSoC4/SPIM.c **** }
 490              		.loc 1 457 0
 491 0012 181C     		mov	r0, r3
 492 0014 BD46     		mov	sp, r7
 493 0016 02B0     		add	sp, sp, #8
 494              		@ sp needed
 495 0018 80BD     		pop	{r7, pc}
 496              	.L31:
 497 001a C046     		.align	2
 498              	.L30:
 499 001c 65000F40 		.word	1074724965
 500              		.cfi_endproc
 501              	.LFE12:
 502              		.size	SPIM_ReadRxStatus, .-SPIM_ReadRxStatus
 503              		.section	.text.SPIM_WriteTxData,"ax",%progbits
 504              		.align	2
 505              		.global	SPIM_WriteTxData
 506              		.code	16
 507              		.thumb_func
 508              		.type	SPIM_WriteTxData, %function
 509              	SPIM_WriteTxData:
 510              	.LFB13:
 458:Generated_Source\PSoC4/SPIM.c **** 
 459:Generated_Source\PSoC4/SPIM.c **** 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 18


 460:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 461:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_WriteTxData
 462:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 463:Generated_Source\PSoC4/SPIM.c **** *
 464:Generated_Source\PSoC4/SPIM.c **** * Summary:
 465:Generated_Source\PSoC4/SPIM.c **** *  Write a byte of data to be sent across the SPI.
 466:Generated_Source\PSoC4/SPIM.c **** *
 467:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 468:Generated_Source\PSoC4/SPIM.c **** *  txDataByte: The data value to send across the SPI.
 469:Generated_Source\PSoC4/SPIM.c **** *
 470:Generated_Source\PSoC4/SPIM.c **** * Return:
 471:Generated_Source\PSoC4/SPIM.c **** *  None.
 472:Generated_Source\PSoC4/SPIM.c **** *
 473:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 474:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 475:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the TX software buffer, modified every function
 476:Generated_Source\PSoC4/SPIM.c **** *  call if TX Software Buffer is used.
 477:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 478:Generated_Source\PSoC4/SPIM.c **** *  have been read from the TX software buffer.
 479:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBuffer[SPIM_TX_BUFFER_SIZE] - used to store
 480:Generated_Source\PSoC4/SPIM.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 481:Generated_Source\PSoC4/SPIM.c **** *
 482:Generated_Source\PSoC4/SPIM.c **** * Theory:
 483:Generated_Source\PSoC4/SPIM.c **** *  Allows the user to transmit any byte of data in a single transfer.
 484:Generated_Source\PSoC4/SPIM.c **** *
 485:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 486:Generated_Source\PSoC4/SPIM.c **** *  If this function is called again before the previous byte is finished then
 487:Generated_Source\PSoC4/SPIM.c **** *  the next byte will be appended to the transfer with no time between
 488:Generated_Source\PSoC4/SPIM.c **** *  the byte transfers. Clear Tx status register of the component.
 489:Generated_Source\PSoC4/SPIM.c **** *
 490:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 491:Generated_Source\PSoC4/SPIM.c **** *  No.
 492:Generated_Source\PSoC4/SPIM.c **** *
 493:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 494:Generated_Source\PSoC4/SPIM.c **** void SPIM_WriteTxData(uint8 txData) 
 495:Generated_Source\PSoC4/SPIM.c **** {
 511              		.loc 1 495 0
 512              		.cfi_startproc
 513 0000 80B5     		push	{r7, lr}
 514              		.cfi_def_cfa_offset 8
 515              		.cfi_offset 7, -8
 516              		.cfi_offset 14, -4
 517 0002 82B0     		sub	sp, sp, #8
 518              		.cfi_def_cfa_offset 16
 519 0004 00AF     		add	r7, sp, #0
 520              		.cfi_def_cfa_register 7
 521 0006 021C     		mov	r2, r0
 522 0008 FB1D     		add	r3, r7, #7
 523 000a 1A70     		strb	r2, [r3]
 496:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 497:Generated_Source\PSoC4/SPIM.c **** 
 498:Generated_Source\PSoC4/SPIM.c ****         uint8 tempStatus;
 499:Generated_Source\PSoC4/SPIM.c ****         uint8 tmpTxBufferRead;
 500:Generated_Source\PSoC4/SPIM.c **** 
 501:Generated_Source\PSoC4/SPIM.c ****         /* Block if TX buffer is FULL: don't overwrite */
 502:Generated_Source\PSoC4/SPIM.c ****         do
 503:Generated_Source\PSoC4/SPIM.c ****         {
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 19


 504:Generated_Source\PSoC4/SPIM.c ****             tmpTxBufferRead = SPIM_txBufferRead;
 505:Generated_Source\PSoC4/SPIM.c ****             if(0u == tmpTxBufferRead)
 506:Generated_Source\PSoC4/SPIM.c ****             {
 507:Generated_Source\PSoC4/SPIM.c ****                 tmpTxBufferRead = (SPIM_TX_BUFFER_SIZE - 1u);
 508:Generated_Source\PSoC4/SPIM.c ****             }
 509:Generated_Source\PSoC4/SPIM.c ****             else
 510:Generated_Source\PSoC4/SPIM.c ****             {
 511:Generated_Source\PSoC4/SPIM.c ****                 tmpTxBufferRead--;
 512:Generated_Source\PSoC4/SPIM.c ****             }
 513:Generated_Source\PSoC4/SPIM.c **** 
 514:Generated_Source\PSoC4/SPIM.c ****         }while(tmpTxBufferRead == SPIM_txBufferWrite);
 515:Generated_Source\PSoC4/SPIM.c **** 
 516:Generated_Source\PSoC4/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 517:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableTxInt();
 518:Generated_Source\PSoC4/SPIM.c **** 
 519:Generated_Source\PSoC4/SPIM.c ****         tempStatus = SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 520:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusTx = tempStatus;
 521:Generated_Source\PSoC4/SPIM.c **** 
 522:Generated_Source\PSoC4/SPIM.c **** 
 523:Generated_Source\PSoC4/SPIM.c ****         if((SPIM_txBufferRead == SPIM_txBufferWrite) &&
 524:Generated_Source\PSoC4/SPIM.c ****            (0u != (SPIM_swStatusTx & SPIM_STS_TX_FIFO_NOT_FULL)))
 525:Generated_Source\PSoC4/SPIM.c ****         {
 526:Generated_Source\PSoC4/SPIM.c ****             /* Put data element into the TX FIFO */
 527:Generated_Source\PSoC4/SPIM.c ****             CY_SET_REG8(SPIM_TXDATA_PTR, txData);
 528:Generated_Source\PSoC4/SPIM.c ****         }
 529:Generated_Source\PSoC4/SPIM.c ****         else
 530:Generated_Source\PSoC4/SPIM.c ****         {
 531:Generated_Source\PSoC4/SPIM.c ****             /* Add to the TX software buffer */
 532:Generated_Source\PSoC4/SPIM.c ****             SPIM_txBufferWrite++;
 533:Generated_Source\PSoC4/SPIM.c ****             if(SPIM_txBufferWrite >= SPIM_TX_BUFFER_SIZE)
 534:Generated_Source\PSoC4/SPIM.c ****             {
 535:Generated_Source\PSoC4/SPIM.c ****                 SPIM_txBufferWrite = 0u;
 536:Generated_Source\PSoC4/SPIM.c ****             }
 537:Generated_Source\PSoC4/SPIM.c **** 
 538:Generated_Source\PSoC4/SPIM.c ****             if(SPIM_txBufferWrite == SPIM_txBufferRead)
 539:Generated_Source\PSoC4/SPIM.c ****             {
 540:Generated_Source\PSoC4/SPIM.c ****                 SPIM_txBufferRead++;
 541:Generated_Source\PSoC4/SPIM.c ****                 if(SPIM_txBufferRead >= SPIM_TX_BUFFER_SIZE)
 542:Generated_Source\PSoC4/SPIM.c ****                 {
 543:Generated_Source\PSoC4/SPIM.c ****                     SPIM_txBufferRead = 0u;
 544:Generated_Source\PSoC4/SPIM.c ****                 }
 545:Generated_Source\PSoC4/SPIM.c ****                 SPIM_txBufferFull = 1u;
 546:Generated_Source\PSoC4/SPIM.c ****             }
 547:Generated_Source\PSoC4/SPIM.c **** 
 548:Generated_Source\PSoC4/SPIM.c ****             SPIM_txBuffer[SPIM_txBufferWrite] = txData;
 549:Generated_Source\PSoC4/SPIM.c **** 
 550:Generated_Source\PSoC4/SPIM.c ****             SPIM_TX_STATUS_MASK_REG |= SPIM_STS_TX_FIFO_NOT_FULL;
 551:Generated_Source\PSoC4/SPIM.c ****         }
 552:Generated_Source\PSoC4/SPIM.c **** 
 553:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableTxInt();
 554:Generated_Source\PSoC4/SPIM.c **** 
 555:Generated_Source\PSoC4/SPIM.c ****     #else
 556:Generated_Source\PSoC4/SPIM.c ****         /* Wait until TX FIFO has a place */
 557:Generated_Source\PSoC4/SPIM.c ****         while(0u == (SPIM_TX_STATUS_REG & SPIM_STS_TX_FIFO_NOT_FULL))
 524              		.loc 1 557 0
 525 000c C046     		mov	r8, r8
 526              	.L33:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 20


 527              		.loc 1 557 0 is_stmt 0 discriminator 1
 528 000e 074B     		ldr	r3, .L34
 529 0010 1B78     		ldrb	r3, [r3]
 530 0012 DBB2     		uxtb	r3, r3
 531 0014 1A1C     		mov	r2, r3
 532 0016 0423     		mov	r3, #4
 533 0018 1340     		and	r3, r2
 534 001a F8D0     		beq	.L33
 558:Generated_Source\PSoC4/SPIM.c ****         {
 559:Generated_Source\PSoC4/SPIM.c ****         }
 560:Generated_Source\PSoC4/SPIM.c **** 
 561:Generated_Source\PSoC4/SPIM.c ****         /* Put data element into the TX FIFO */
 562:Generated_Source\PSoC4/SPIM.c ****         CY_SET_REG8(SPIM_TXDATA_PTR, txData);
 535              		.loc 1 562 0 is_stmt 1
 536 001c 044A     		ldr	r2, .L34+4
 537 001e FB1D     		add	r3, r7, #7
 538 0020 1B78     		ldrb	r3, [r3]
 539 0022 1370     		strb	r3, [r2]
 563:Generated_Source\PSoC4/SPIM.c **** 
 564:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 565:Generated_Source\PSoC4/SPIM.c **** }
 540              		.loc 1 565 0
 541 0024 BD46     		mov	sp, r7
 542 0026 02B0     		add	sp, sp, #8
 543              		@ sp needed
 544 0028 80BD     		pop	{r7, pc}
 545              	.L35:
 546 002a C046     		.align	2
 547              	.L34:
 548 002c 67000F40 		.word	1074724967
 549 0030 45000F40 		.word	1074724933
 550              		.cfi_endproc
 551              	.LFE13:
 552              		.size	SPIM_WriteTxData, .-SPIM_WriteTxData
 553              		.section	.text.SPIM_ReadRxData,"ax",%progbits
 554              		.align	2
 555              		.global	SPIM_ReadRxData
 556              		.code	16
 557              		.thumb_func
 558              		.type	SPIM_ReadRxData, %function
 559              	SPIM_ReadRxData:
 560              	.LFB14:
 566:Generated_Source\PSoC4/SPIM.c **** 
 567:Generated_Source\PSoC4/SPIM.c **** 
 568:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 569:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ReadRxData
 570:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 571:Generated_Source\PSoC4/SPIM.c **** *
 572:Generated_Source\PSoC4/SPIM.c **** * Summary:
 573:Generated_Source\PSoC4/SPIM.c **** *  Read the next byte of data received across the SPI.
 574:Generated_Source\PSoC4/SPIM.c **** *
 575:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 576:Generated_Source\PSoC4/SPIM.c **** *  None.
 577:Generated_Source\PSoC4/SPIM.c **** *
 578:Generated_Source\PSoC4/SPIM.c **** * Return:
 579:Generated_Source\PSoC4/SPIM.c **** *  The next byte of data read from the FIFO.
 580:Generated_Source\PSoC4/SPIM.c **** *
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 21


 581:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 582:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 583:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the RX software buffer.
 584:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 585:Generated_Source\PSoC4/SPIM.c **** *  have been read from the RX software buffer, modified every function
 586:Generated_Source\PSoC4/SPIM.c **** *  call if RX Software Buffer is used.
 587:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBuffer[SPIM_RX_BUFFER_SIZE] - used to store
 588:Generated_Source\PSoC4/SPIM.c **** *  received data.
 589:Generated_Source\PSoC4/SPIM.c **** *
 590:Generated_Source\PSoC4/SPIM.c **** * Theory:
 591:Generated_Source\PSoC4/SPIM.c **** *  Allows the user to read a byte of data received.
 592:Generated_Source\PSoC4/SPIM.c **** *
 593:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 594:Generated_Source\PSoC4/SPIM.c **** *  Will return invalid data if the FIFO is empty. The user should Call
 595:Generated_Source\PSoC4/SPIM.c **** *  GetRxBufferSize() and if it returns a non-zero value then it is safe to call
 596:Generated_Source\PSoC4/SPIM.c **** *  ReadByte() function.
 597:Generated_Source\PSoC4/SPIM.c **** *
 598:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 599:Generated_Source\PSoC4/SPIM.c **** *  No.
 600:Generated_Source\PSoC4/SPIM.c **** *
 601:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 602:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_ReadRxData(void) 
 603:Generated_Source\PSoC4/SPIM.c **** {
 561              		.loc 1 603 0
 562              		.cfi_startproc
 563 0000 80B5     		push	{r7, lr}
 564              		.cfi_def_cfa_offset 8
 565              		.cfi_offset 7, -8
 566              		.cfi_offset 14, -4
 567 0002 82B0     		sub	sp, sp, #8
 568              		.cfi_def_cfa_offset 16
 569 0004 00AF     		add	r7, sp, #0
 570              		.cfi_def_cfa_register 7
 604:Generated_Source\PSoC4/SPIM.c ****     uint8 rxData;
 605:Generated_Source\PSoC4/SPIM.c **** 
 606:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 607:Generated_Source\PSoC4/SPIM.c **** 
 608:Generated_Source\PSoC4/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 609:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableRxInt();
 610:Generated_Source\PSoC4/SPIM.c **** 
 611:Generated_Source\PSoC4/SPIM.c ****         if(SPIM_rxBufferRead != SPIM_rxBufferWrite)
 612:Generated_Source\PSoC4/SPIM.c ****         {
 613:Generated_Source\PSoC4/SPIM.c ****             if(0u == SPIM_rxBufferFull)
 614:Generated_Source\PSoC4/SPIM.c ****             {
 615:Generated_Source\PSoC4/SPIM.c ****                 SPIM_rxBufferRead++;
 616:Generated_Source\PSoC4/SPIM.c ****                 if(SPIM_rxBufferRead >= SPIM_RX_BUFFER_SIZE)
 617:Generated_Source\PSoC4/SPIM.c ****                 {
 618:Generated_Source\PSoC4/SPIM.c ****                     SPIM_rxBufferRead = 0u;
 619:Generated_Source\PSoC4/SPIM.c ****                 }
 620:Generated_Source\PSoC4/SPIM.c ****             }
 621:Generated_Source\PSoC4/SPIM.c ****             else
 622:Generated_Source\PSoC4/SPIM.c ****             {
 623:Generated_Source\PSoC4/SPIM.c ****                 SPIM_rxBufferFull = 0u;
 624:Generated_Source\PSoC4/SPIM.c ****             }
 625:Generated_Source\PSoC4/SPIM.c ****         }
 626:Generated_Source\PSoC4/SPIM.c **** 
 627:Generated_Source\PSoC4/SPIM.c ****         rxData = SPIM_rxBuffer[SPIM_rxBufferRead];
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 22


 628:Generated_Source\PSoC4/SPIM.c **** 
 629:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableRxInt();
 630:Generated_Source\PSoC4/SPIM.c **** 
 631:Generated_Source\PSoC4/SPIM.c ****     #else
 632:Generated_Source\PSoC4/SPIM.c **** 
 633:Generated_Source\PSoC4/SPIM.c ****         rxData = CY_GET_REG8(SPIM_RXDATA_PTR);
 571              		.loc 1 633 0
 572 0006 054A     		ldr	r2, .L38
 573 0008 FB1D     		add	r3, r7, #7
 574 000a 1278     		ldrb	r2, [r2]
 575 000c 1A70     		strb	r2, [r3]
 634:Generated_Source\PSoC4/SPIM.c **** 
 635:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 636:Generated_Source\PSoC4/SPIM.c **** 
 637:Generated_Source\PSoC4/SPIM.c ****     return(rxData);
 576              		.loc 1 637 0
 577 000e FB1D     		add	r3, r7, #7
 578 0010 1B78     		ldrb	r3, [r3]
 638:Generated_Source\PSoC4/SPIM.c **** }
 579              		.loc 1 638 0
 580 0012 181C     		mov	r0, r3
 581 0014 BD46     		mov	sp, r7
 582 0016 02B0     		add	sp, sp, #8
 583              		@ sp needed
 584 0018 80BD     		pop	{r7, pc}
 585              	.L39:
 586 001a C046     		.align	2
 587              	.L38:
 588 001c 55000F40 		.word	1074724949
 589              		.cfi_endproc
 590              	.LFE14:
 591              		.size	SPIM_ReadRxData, .-SPIM_ReadRxData
 592              		.section	.text.SPIM_GetRxBufferSize,"ax",%progbits
 593              		.align	2
 594              		.global	SPIM_GetRxBufferSize
 595              		.code	16
 596              		.thumb_func
 597              		.type	SPIM_GetRxBufferSize, %function
 598              	SPIM_GetRxBufferSize:
 599              	.LFB15:
 639:Generated_Source\PSoC4/SPIM.c **** 
 640:Generated_Source\PSoC4/SPIM.c **** 
 641:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_GetRxBufferSize
 643:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 644:Generated_Source\PSoC4/SPIM.c **** *
 645:Generated_Source\PSoC4/SPIM.c **** * Summary:
 646:Generated_Source\PSoC4/SPIM.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 647:Generated_Source\PSoC4/SPIM.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 648:Generated_Source\PSoC4/SPIM.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 649:Generated_Source\PSoC4/SPIM.c **** *
 650:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 651:Generated_Source\PSoC4/SPIM.c **** *  None.
 652:Generated_Source\PSoC4/SPIM.c **** *
 653:Generated_Source\PSoC4/SPIM.c **** * Return:
 654:Generated_Source\PSoC4/SPIM.c **** *  Integer count of the number of bytes/words in the RX buffer.
 655:Generated_Source\PSoC4/SPIM.c **** *
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 23


 656:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 657:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 658:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the RX software buffer.
 659:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 660:Generated_Source\PSoC4/SPIM.c **** *  have been read from the RX software buffer.
 661:Generated_Source\PSoC4/SPIM.c **** *
 662:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 663:Generated_Source\PSoC4/SPIM.c **** *  Clear status register of the component.
 664:Generated_Source\PSoC4/SPIM.c **** *
 665:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 666:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_GetRxBufferSize(void) 
 667:Generated_Source\PSoC4/SPIM.c **** {
 600              		.loc 1 667 0
 601              		.cfi_startproc
 602 0000 80B5     		push	{r7, lr}
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 7, -8
 605              		.cfi_offset 14, -4
 606 0002 82B0     		sub	sp, sp, #8
 607              		.cfi_def_cfa_offset 16
 608 0004 00AF     		add	r7, sp, #0
 609              		.cfi_def_cfa_register 7
 668:Generated_Source\PSoC4/SPIM.c ****     uint8 size;
 669:Generated_Source\PSoC4/SPIM.c **** 
 670:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 671:Generated_Source\PSoC4/SPIM.c **** 
 672:Generated_Source\PSoC4/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 673:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableRxInt();
 674:Generated_Source\PSoC4/SPIM.c **** 
 675:Generated_Source\PSoC4/SPIM.c ****         if(SPIM_rxBufferRead == SPIM_rxBufferWrite)
 676:Generated_Source\PSoC4/SPIM.c ****         {
 677:Generated_Source\PSoC4/SPIM.c ****             size = 0u;
 678:Generated_Source\PSoC4/SPIM.c ****         }
 679:Generated_Source\PSoC4/SPIM.c ****         else if(SPIM_rxBufferRead < SPIM_rxBufferWrite)
 680:Generated_Source\PSoC4/SPIM.c ****         {
 681:Generated_Source\PSoC4/SPIM.c ****             size = (SPIM_rxBufferWrite - SPIM_rxBufferRead);
 682:Generated_Source\PSoC4/SPIM.c ****         }
 683:Generated_Source\PSoC4/SPIM.c ****         else
 684:Generated_Source\PSoC4/SPIM.c ****         {
 685:Generated_Source\PSoC4/SPIM.c ****             size = (SPIM_RX_BUFFER_SIZE - SPIM_rxBufferRead) + SPIM_rxBufferWrite;
 686:Generated_Source\PSoC4/SPIM.c ****         }
 687:Generated_Source\PSoC4/SPIM.c **** 
 688:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableRxInt();
 689:Generated_Source\PSoC4/SPIM.c **** 
 690:Generated_Source\PSoC4/SPIM.c ****     #else
 691:Generated_Source\PSoC4/SPIM.c **** 
 692:Generated_Source\PSoC4/SPIM.c ****         /* We can only know if there is data in the RX FIFO */
 693:Generated_Source\PSoC4/SPIM.c ****         size = (0u != (SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY)) ? 1u : 0u;
 610              		.loc 1 693 0
 611 0006 094B     		ldr	r3, .L44
 612 0008 1B78     		ldrb	r3, [r3]
 613 000a DBB2     		uxtb	r3, r3
 614 000c 1A1C     		mov	r2, r3
 615 000e 2023     		mov	r3, #32
 616 0010 1340     		and	r3, r2
 617 0012 01D0     		beq	.L41
 618              		.loc 1 693 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 24


 619 0014 0122     		mov	r2, #1
 620 0016 00E0     		b	.L42
 621              	.L41:
 622              		.loc 1 693 0 discriminator 2
 623 0018 0022     		mov	r2, #0
 624              	.L42:
 625              		.loc 1 693 0 discriminator 4
 626 001a FB1D     		add	r3, r7, #7
 627 001c 1A70     		strb	r2, [r3]
 694:Generated_Source\PSoC4/SPIM.c **** 
 695:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 696:Generated_Source\PSoC4/SPIM.c **** 
 697:Generated_Source\PSoC4/SPIM.c ****     return(size);
 628              		.loc 1 697 0 is_stmt 1 discriminator 4
 629 001e FB1D     		add	r3, r7, #7
 630 0020 1B78     		ldrb	r3, [r3]
 698:Generated_Source\PSoC4/SPIM.c **** }
 631              		.loc 1 698 0 discriminator 4
 632 0022 181C     		mov	r0, r3
 633 0024 BD46     		mov	sp, r7
 634 0026 02B0     		add	sp, sp, #8
 635              		@ sp needed
 636 0028 80BD     		pop	{r7, pc}
 637              	.L45:
 638 002a C046     		.align	2
 639              	.L44:
 640 002c 65000F40 		.word	1074724965
 641              		.cfi_endproc
 642              	.LFE15:
 643              		.size	SPIM_GetRxBufferSize, .-SPIM_GetRxBufferSize
 644              		.section	.text.SPIM_GetTxBufferSize,"ax",%progbits
 645              		.align	2
 646              		.global	SPIM_GetTxBufferSize
 647              		.code	16
 648              		.thumb_func
 649              		.type	SPIM_GetTxBufferSize, %function
 650              	SPIM_GetTxBufferSize:
 651              	.LFB16:
 699:Generated_Source\PSoC4/SPIM.c **** 
 700:Generated_Source\PSoC4/SPIM.c **** 
 701:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 702:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_GetTxBufferSize
 703:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 704:Generated_Source\PSoC4/SPIM.c **** *
 705:Generated_Source\PSoC4/SPIM.c **** * Summary:
 706:Generated_Source\PSoC4/SPIM.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 707:Generated_Source\PSoC4/SPIM.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 708:Generated_Source\PSoC4/SPIM.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 709:Generated_Source\PSoC4/SPIM.c **** *  Software Buffer.
 710:Generated_Source\PSoC4/SPIM.c **** *
 711:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 712:Generated_Source\PSoC4/SPIM.c **** *  None.
 713:Generated_Source\PSoC4/SPIM.c **** *
 714:Generated_Source\PSoC4/SPIM.c **** * Return:
 715:Generated_Source\PSoC4/SPIM.c **** *  Integer count of the number of bytes/words in the TX buffer.
 716:Generated_Source\PSoC4/SPIM.c **** *
 717:Generated_Source\PSoC4/SPIM.c **** * Global variables:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 25


 718:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 719:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the TX software buffer.
 720:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 721:Generated_Source\PSoC4/SPIM.c **** *  have been read from the TX software buffer.
 722:Generated_Source\PSoC4/SPIM.c **** *
 723:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 724:Generated_Source\PSoC4/SPIM.c **** *  Clear status register of the component.
 725:Generated_Source\PSoC4/SPIM.c **** *
 726:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 727:Generated_Source\PSoC4/SPIM.c **** uint8  SPIM_GetTxBufferSize(void) 
 728:Generated_Source\PSoC4/SPIM.c **** {
 652              		.loc 1 728 0
 653              		.cfi_startproc
 654 0000 80B5     		push	{r7, lr}
 655              		.cfi_def_cfa_offset 8
 656              		.cfi_offset 7, -8
 657              		.cfi_offset 14, -4
 658 0002 82B0     		sub	sp, sp, #8
 659              		.cfi_def_cfa_offset 16
 660 0004 00AF     		add	r7, sp, #0
 661              		.cfi_def_cfa_register 7
 729:Generated_Source\PSoC4/SPIM.c ****     uint8 size;
 730:Generated_Source\PSoC4/SPIM.c **** 
 731:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 732:Generated_Source\PSoC4/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 733:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableTxInt();
 734:Generated_Source\PSoC4/SPIM.c **** 
 735:Generated_Source\PSoC4/SPIM.c ****         if(SPIM_txBufferRead == SPIM_txBufferWrite)
 736:Generated_Source\PSoC4/SPIM.c ****         {
 737:Generated_Source\PSoC4/SPIM.c ****             size = 0u;
 738:Generated_Source\PSoC4/SPIM.c ****         }
 739:Generated_Source\PSoC4/SPIM.c ****         else if(SPIM_txBufferRead < SPIM_txBufferWrite)
 740:Generated_Source\PSoC4/SPIM.c ****         {
 741:Generated_Source\PSoC4/SPIM.c ****             size = (SPIM_txBufferWrite - SPIM_txBufferRead);
 742:Generated_Source\PSoC4/SPIM.c ****         }
 743:Generated_Source\PSoC4/SPIM.c ****         else
 744:Generated_Source\PSoC4/SPIM.c ****         {
 745:Generated_Source\PSoC4/SPIM.c ****             size = (SPIM_TX_BUFFER_SIZE - SPIM_txBufferRead) + SPIM_txBufferWrite;
 746:Generated_Source\PSoC4/SPIM.c ****         }
 747:Generated_Source\PSoC4/SPIM.c **** 
 748:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableTxInt();
 749:Generated_Source\PSoC4/SPIM.c **** 
 750:Generated_Source\PSoC4/SPIM.c ****     #else
 751:Generated_Source\PSoC4/SPIM.c **** 
 752:Generated_Source\PSoC4/SPIM.c ****         size = SPIM_TX_STATUS_REG;
 662              		.loc 1 752 0
 663 0006 0F4A     		ldr	r2, .L51
 664 0008 FB1D     		add	r3, r7, #7
 665 000a 1278     		ldrb	r2, [r2]
 666 000c 1A70     		strb	r2, [r3]
 753:Generated_Source\PSoC4/SPIM.c **** 
 754:Generated_Source\PSoC4/SPIM.c ****         if(0u != (size & SPIM_STS_TX_FIFO_EMPTY))
 667              		.loc 1 754 0
 668 000e FB1D     		add	r3, r7, #7
 669 0010 1B78     		ldrb	r3, [r3]
 670 0012 0222     		mov	r2, #2
 671 0014 1340     		and	r3, r2
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 26


 672 0016 03D0     		beq	.L47
 755:Generated_Source\PSoC4/SPIM.c ****         {
 756:Generated_Source\PSoC4/SPIM.c ****             size = 0u;
 673              		.loc 1 756 0
 674 0018 FB1D     		add	r3, r7, #7
 675 001a 0022     		mov	r2, #0
 676 001c 1A70     		strb	r2, [r3]
 677 001e 0BE0     		b	.L48
 678              	.L47:
 757:Generated_Source\PSoC4/SPIM.c ****         }
 758:Generated_Source\PSoC4/SPIM.c ****         else if(0u != (size & SPIM_STS_TX_FIFO_NOT_FULL))
 679              		.loc 1 758 0
 680 0020 FB1D     		add	r3, r7, #7
 681 0022 1B78     		ldrb	r3, [r3]
 682 0024 0422     		mov	r2, #4
 683 0026 1340     		and	r3, r2
 684 0028 03D0     		beq	.L49
 759:Generated_Source\PSoC4/SPIM.c ****         {
 760:Generated_Source\PSoC4/SPIM.c ****             size = 1u;
 685              		.loc 1 760 0
 686 002a FB1D     		add	r3, r7, #7
 687 002c 0122     		mov	r2, #1
 688 002e 1A70     		strb	r2, [r3]
 689 0030 02E0     		b	.L48
 690              	.L49:
 761:Generated_Source\PSoC4/SPIM.c ****         }
 762:Generated_Source\PSoC4/SPIM.c ****         else
 763:Generated_Source\PSoC4/SPIM.c ****         {
 764:Generated_Source\PSoC4/SPIM.c ****             size = SPIM_FIFO_SIZE;
 691              		.loc 1 764 0
 692 0032 FB1D     		add	r3, r7, #7
 693 0034 0422     		mov	r2, #4
 694 0036 1A70     		strb	r2, [r3]
 695              	.L48:
 765:Generated_Source\PSoC4/SPIM.c ****         }
 766:Generated_Source\PSoC4/SPIM.c **** 
 767:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 768:Generated_Source\PSoC4/SPIM.c **** 
 769:Generated_Source\PSoC4/SPIM.c ****     return(size);
 696              		.loc 1 769 0
 697 0038 FB1D     		add	r3, r7, #7
 698 003a 1B78     		ldrb	r3, [r3]
 770:Generated_Source\PSoC4/SPIM.c **** }
 699              		.loc 1 770 0
 700 003c 181C     		mov	r0, r3
 701 003e BD46     		mov	sp, r7
 702 0040 02B0     		add	sp, sp, #8
 703              		@ sp needed
 704 0042 80BD     		pop	{r7, pc}
 705              	.L52:
 706              		.align	2
 707              	.L51:
 708 0044 67000F40 		.word	1074724967
 709              		.cfi_endproc
 710              	.LFE16:
 711              		.size	SPIM_GetTxBufferSize, .-SPIM_GetTxBufferSize
 712              		.section	.text.SPIM_ClearRxBuffer,"ax",%progbits
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 27


 713              		.align	2
 714              		.global	SPIM_ClearRxBuffer
 715              		.code	16
 716              		.thumb_func
 717              		.type	SPIM_ClearRxBuffer, %function
 718              	SPIM_ClearRxBuffer:
 719              	.LFB17:
 771:Generated_Source\PSoC4/SPIM.c **** 
 772:Generated_Source\PSoC4/SPIM.c **** 
 773:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 774:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ClearRxBuffer
 775:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 776:Generated_Source\PSoC4/SPIM.c **** *
 777:Generated_Source\PSoC4/SPIM.c **** * Summary:
 778:Generated_Source\PSoC4/SPIM.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 779:Generated_Source\PSoC4/SPIM.c **** *
 780:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 781:Generated_Source\PSoC4/SPIM.c **** *  None.
 782:Generated_Source\PSoC4/SPIM.c **** *
 783:Generated_Source\PSoC4/SPIM.c **** * Return:
 784:Generated_Source\PSoC4/SPIM.c **** *  None.
 785:Generated_Source\PSoC4/SPIM.c **** *
 786:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 787:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 788:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the RX software buffer, modified every function
 789:Generated_Source\PSoC4/SPIM.c **** *  call - resets to zero.
 790:Generated_Source\PSoC4/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 791:Generated_Source\PSoC4/SPIM.c **** *  have been read from the RX software buffer, modified every function call -
 792:Generated_Source\PSoC4/SPIM.c **** *  resets to zero.
 793:Generated_Source\PSoC4/SPIM.c **** *
 794:Generated_Source\PSoC4/SPIM.c **** * Theory:
 795:Generated_Source\PSoC4/SPIM.c **** *  Setting the pointers to zero makes the system believe there is no data to
 796:Generated_Source\PSoC4/SPIM.c **** *  read and writing will resume at address 0 overwriting any data that may have
 797:Generated_Source\PSoC4/SPIM.c **** *  remained in the RAM.
 798:Generated_Source\PSoC4/SPIM.c **** *
 799:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 800:Generated_Source\PSoC4/SPIM.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 801:Generated_Source\PSoC4/SPIM.c **** *
 802:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 803:Generated_Source\PSoC4/SPIM.c **** *  No.
 804:Generated_Source\PSoC4/SPIM.c **** *
 805:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 806:Generated_Source\PSoC4/SPIM.c **** void SPIM_ClearRxBuffer(void) 
 807:Generated_Source\PSoC4/SPIM.c **** {
 720              		.loc 1 807 0
 721              		.cfi_startproc
 722 0000 80B5     		push	{r7, lr}
 723              		.cfi_def_cfa_offset 8
 724              		.cfi_offset 7, -8
 725              		.cfi_offset 14, -4
 726 0002 00AF     		add	r7, sp, #0
 727              		.cfi_def_cfa_register 7
 808:Generated_Source\PSoC4/SPIM.c ****     /* Clear Hardware RX FIFO */
 809:Generated_Source\PSoC4/SPIM.c ****     while(0u !=(SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY))
 728              		.loc 1 809 0
 729 0004 01E0     		b	.L54
 730              	.L55:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 28


 810:Generated_Source\PSoC4/SPIM.c ****     {
 811:Generated_Source\PSoC4/SPIM.c ****         (void) CY_GET_REG8(SPIM_RXDATA_PTR);
 731              		.loc 1 811 0
 732 0006 054B     		ldr	r3, .L56
 733 0008 1B78     		ldrb	r3, [r3]
 734              	.L54:
 809:Generated_Source\PSoC4/SPIM.c ****     {
 735              		.loc 1 809 0
 736 000a 054B     		ldr	r3, .L56+4
 737 000c 1B78     		ldrb	r3, [r3]
 738 000e DBB2     		uxtb	r3, r3
 739 0010 1A1C     		mov	r2, r3
 740 0012 2023     		mov	r3, #32
 741 0014 1340     		and	r3, r2
 742 0016 F6D1     		bne	.L55
 812:Generated_Source\PSoC4/SPIM.c ****     }
 813:Generated_Source\PSoC4/SPIM.c **** 
 814:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 815:Generated_Source\PSoC4/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 816:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableRxInt();
 817:Generated_Source\PSoC4/SPIM.c **** 
 818:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferFull  = 0u;
 819:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferRead  = 0u;
 820:Generated_Source\PSoC4/SPIM.c ****         SPIM_rxBufferWrite = 0u;
 821:Generated_Source\PSoC4/SPIM.c **** 
 822:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableRxInt();
 823:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 824:Generated_Source\PSoC4/SPIM.c **** }
 743              		.loc 1 824 0
 744 0018 BD46     		mov	sp, r7
 745              		@ sp needed
 746 001a 80BD     		pop	{r7, pc}
 747              	.L57:
 748              		.align	2
 749              	.L56:
 750 001c 55000F40 		.word	1074724949
 751 0020 65000F40 		.word	1074724965
 752              		.cfi_endproc
 753              	.LFE17:
 754              		.size	SPIM_ClearRxBuffer, .-SPIM_ClearRxBuffer
 755              		.section	.text.SPIM_ClearTxBuffer,"ax",%progbits
 756              		.align	2
 757              		.global	SPIM_ClearTxBuffer
 758              		.code	16
 759              		.thumb_func
 760              		.type	SPIM_ClearTxBuffer, %function
 761              	SPIM_ClearTxBuffer:
 762              	.LFB18:
 825:Generated_Source\PSoC4/SPIM.c **** 
 826:Generated_Source\PSoC4/SPIM.c **** 
 827:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 828:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ClearTxBuffer
 829:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 830:Generated_Source\PSoC4/SPIM.c **** *
 831:Generated_Source\PSoC4/SPIM.c **** * Summary:
 832:Generated_Source\PSoC4/SPIM.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 833:Generated_Source\PSoC4/SPIM.c **** *
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 29


 834:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 835:Generated_Source\PSoC4/SPIM.c **** *  None.
 836:Generated_Source\PSoC4/SPIM.c **** *
 837:Generated_Source\PSoC4/SPIM.c **** * Return:
 838:Generated_Source\PSoC4/SPIM.c **** *  None.
 839:Generated_Source\PSoC4/SPIM.c **** *
 840:Generated_Source\PSoC4/SPIM.c **** * Global variables:
 841:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 842:Generated_Source\PSoC4/SPIM.c **** *  have been written down in the TX software buffer, modified every function
 843:Generated_Source\PSoC4/SPIM.c **** *  call - resets to zero.
 844:Generated_Source\PSoC4/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 845:Generated_Source\PSoC4/SPIM.c **** *  have been read from the TX software buffer, modified every function call -
 846:Generated_Source\PSoC4/SPIM.c **** *  resets to zero.
 847:Generated_Source\PSoC4/SPIM.c **** *
 848:Generated_Source\PSoC4/SPIM.c **** * Theory:
 849:Generated_Source\PSoC4/SPIM.c **** *  Setting the pointers to zero makes the system believe there is no data to
 850:Generated_Source\PSoC4/SPIM.c **** *  read and writing will resume at address 0 overwriting any data that may have
 851:Generated_Source\PSoC4/SPIM.c **** *  remained in the RAM.
 852:Generated_Source\PSoC4/SPIM.c **** *
 853:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 854:Generated_Source\PSoC4/SPIM.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 855:Generated_Source\PSoC4/SPIM.c **** *  overwritten.
 856:Generated_Source\PSoC4/SPIM.c **** *
 857:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 858:Generated_Source\PSoC4/SPIM.c **** *  No.
 859:Generated_Source\PSoC4/SPIM.c **** *
 860:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 861:Generated_Source\PSoC4/SPIM.c **** void SPIM_ClearTxBuffer(void) 
 862:Generated_Source\PSoC4/SPIM.c **** {
 763              		.loc 1 862 0
 764              		.cfi_startproc
 765 0000 90B5     		push	{r4, r7, lr}
 766              		.cfi_def_cfa_offset 12
 767              		.cfi_offset 4, -12
 768              		.cfi_offset 7, -8
 769              		.cfi_offset 14, -4
 770 0002 83B0     		sub	sp, sp, #12
 771              		.cfi_def_cfa_offset 24
 772 0004 00AF     		add	r7, sp, #0
 773              		.cfi_def_cfa_register 7
 863:Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 864:Generated_Source\PSoC4/SPIM.c **** 
 865:Generated_Source\PSoC4/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 774              		.loc 1 865 0
 775 0006 FC1D     		add	r4, r7, #7
 776 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 777 000c 031C     		mov	r3, r0
 778 000e 2370     		strb	r3, [r4]
 866:Generated_Source\PSoC4/SPIM.c ****     /* Clear TX FIFO */
 867:Generated_Source\PSoC4/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 779              		.loc 1 867 0
 780 0010 0B4A     		ldr	r2, .L59
 781 0012 0B4B     		ldr	r3, .L59
 782 0014 1B78     		ldrb	r3, [r3]
 783 0016 DBB2     		uxtb	r3, r3
 784 0018 0121     		mov	r1, #1
 785 001a 0B43     		orr	r3, r1
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 30


 786 001c DBB2     		uxtb	r3, r3
 787 001e 1370     		strb	r3, [r2]
 868:Generated_Source\PSoC4/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 788              		.loc 1 868 0
 789 0020 074A     		ldr	r2, .L59
 790 0022 074B     		ldr	r3, .L59
 791 0024 1B78     		ldrb	r3, [r3]
 792 0026 DBB2     		uxtb	r3, r3
 793 0028 0121     		mov	r1, #1
 794 002a 8B43     		bic	r3, r1
 795 002c DBB2     		uxtb	r3, r3
 796 002e 1370     		strb	r3, [r2]
 869:Generated_Source\PSoC4/SPIM.c **** 
 870:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_USE_SECOND_DATAPATH)
 871:Generated_Source\PSoC4/SPIM.c ****         /* Clear TX FIFO for 2nd Datapath */
 872:Generated_Source\PSoC4/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 873:Generated_Source\PSoC4/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 874:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_USE_SECOND_DATAPATH) */
 875:Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 797              		.loc 1 875 0
 798 0030 FB1D     		add	r3, r7, #7
 799 0032 1B78     		ldrb	r3, [r3]
 800 0034 181C     		mov	r0, r3
 801 0036 FFF7FEFF 		bl	CyExitCriticalSection
 876:Generated_Source\PSoC4/SPIM.c **** 
 877:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 878:Generated_Source\PSoC4/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 879:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableTxInt();
 880:Generated_Source\PSoC4/SPIM.c **** 
 881:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferFull  = 0u;
 882:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferRead  = 0u;
 883:Generated_Source\PSoC4/SPIM.c ****         SPIM_txBufferWrite = 0u;
 884:Generated_Source\PSoC4/SPIM.c **** 
 885:Generated_Source\PSoC4/SPIM.c ****         /* Buffer is EMPTY: disable TX FIFO NOT FULL interrupt */
 886:Generated_Source\PSoC4/SPIM.c ****         SPIM_TX_STATUS_MASK_REG &= ((uint8) ~SPIM_STS_TX_FIFO_NOT_FULL);
 887:Generated_Source\PSoC4/SPIM.c **** 
 888:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableTxInt();
 889:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 890:Generated_Source\PSoC4/SPIM.c **** }
 802              		.loc 1 890 0
 803 003a BD46     		mov	sp, r7
 804 003c 03B0     		add	sp, sp, #12
 805              		@ sp needed
 806 003e 90BD     		pop	{r4, r7, pc}
 807              	.L60:
 808              		.align	2
 809              	.L59:
 810 0040 95000F40 		.word	1074725013
 811              		.cfi_endproc
 812              	.LFE18:
 813              		.size	SPIM_ClearTxBuffer, .-SPIM_ClearTxBuffer
 814              		.section	.text.SPIM_PutArray,"ax",%progbits
 815              		.align	2
 816              		.global	SPIM_PutArray
 817              		.code	16
 818              		.thumb_func
 819              		.type	SPIM_PutArray, %function
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 31


 820              	SPIM_PutArray:
 821              	.LFB19:
 891:Generated_Source\PSoC4/SPIM.c **** 
 892:Generated_Source\PSoC4/SPIM.c **** 
 893:Generated_Source\PSoC4/SPIM.c **** #if(0u != SPIM_BIDIRECTIONAL_MODE)
 894:Generated_Source\PSoC4/SPIM.c ****     /*******************************************************************************
 895:Generated_Source\PSoC4/SPIM.c ****     * Function Name: SPIM_TxEnable
 896:Generated_Source\PSoC4/SPIM.c ****     ********************************************************************************
 897:Generated_Source\PSoC4/SPIM.c ****     *
 898:Generated_Source\PSoC4/SPIM.c ****     * Summary:
 899:Generated_Source\PSoC4/SPIM.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 900:Generated_Source\PSoC4/SPIM.c ****     *  will set the bi-directional pin to transmit.
 901:Generated_Source\PSoC4/SPIM.c ****     *
 902:Generated_Source\PSoC4/SPIM.c ****     * Parameters:
 903:Generated_Source\PSoC4/SPIM.c ****     *  None.
 904:Generated_Source\PSoC4/SPIM.c ****     *
 905:Generated_Source\PSoC4/SPIM.c ****     * Return:
 906:Generated_Source\PSoC4/SPIM.c ****     *  None.
 907:Generated_Source\PSoC4/SPIM.c ****     *
 908:Generated_Source\PSoC4/SPIM.c ****     *******************************************************************************/
 909:Generated_Source\PSoC4/SPIM.c ****     void SPIM_TxEnable(void) 
 910:Generated_Source\PSoC4/SPIM.c ****     {
 911:Generated_Source\PSoC4/SPIM.c ****         SPIM_CONTROL_REG |= SPIM_CTRL_TX_SIGNAL_EN;
 912:Generated_Source\PSoC4/SPIM.c ****     }
 913:Generated_Source\PSoC4/SPIM.c **** 
 914:Generated_Source\PSoC4/SPIM.c **** 
 915:Generated_Source\PSoC4/SPIM.c ****     /*******************************************************************************
 916:Generated_Source\PSoC4/SPIM.c ****     * Function Name: SPIM_TxDisable
 917:Generated_Source\PSoC4/SPIM.c ****     ********************************************************************************
 918:Generated_Source\PSoC4/SPIM.c ****     *
 919:Generated_Source\PSoC4/SPIM.c ****     * Summary:
 920:Generated_Source\PSoC4/SPIM.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 921:Generated_Source\PSoC4/SPIM.c ****     *  will set the bi-directional pin to receive.
 922:Generated_Source\PSoC4/SPIM.c ****     *
 923:Generated_Source\PSoC4/SPIM.c ****     * Parameters:
 924:Generated_Source\PSoC4/SPIM.c ****     *  None.
 925:Generated_Source\PSoC4/SPIM.c ****     *
 926:Generated_Source\PSoC4/SPIM.c ****     * Return:
 927:Generated_Source\PSoC4/SPIM.c ****     *  None.
 928:Generated_Source\PSoC4/SPIM.c ****     *
 929:Generated_Source\PSoC4/SPIM.c ****     *******************************************************************************/
 930:Generated_Source\PSoC4/SPIM.c ****     void SPIM_TxDisable(void) 
 931:Generated_Source\PSoC4/SPIM.c ****     {
 932:Generated_Source\PSoC4/SPIM.c ****         SPIM_CONTROL_REG &= ((uint8) ~SPIM_CTRL_TX_SIGNAL_EN);
 933:Generated_Source\PSoC4/SPIM.c ****     }
 934:Generated_Source\PSoC4/SPIM.c **** 
 935:Generated_Source\PSoC4/SPIM.c **** #endif /* (0u != SPIM_BIDIRECTIONAL_MODE) */
 936:Generated_Source\PSoC4/SPIM.c **** 
 937:Generated_Source\PSoC4/SPIM.c **** 
 938:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 939:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_PutArray
 940:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 941:Generated_Source\PSoC4/SPIM.c **** *
 942:Generated_Source\PSoC4/SPIM.c **** * Summary:
 943:Generated_Source\PSoC4/SPIM.c **** *  Write available data from ROM/RAM to the TX buffer while space is available
 944:Generated_Source\PSoC4/SPIM.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer.
 945:Generated_Source\PSoC4/SPIM.c **** *
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 32


 946:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 947:Generated_Source\PSoC4/SPIM.c **** *  *buffer: Pointer to the location in RAM containing the data to send
 948:Generated_Source\PSoC4/SPIM.c **** *  byteCount: The number of bytes to move to the transmit buffer.
 949:Generated_Source\PSoC4/SPIM.c **** *
 950:Generated_Source\PSoC4/SPIM.c **** * Return:
 951:Generated_Source\PSoC4/SPIM.c **** *  None.
 952:Generated_Source\PSoC4/SPIM.c **** *
 953:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
 954:Generated_Source\PSoC4/SPIM.c **** *  Will stay in this routine until all data has been sent.  May get locked in
 955:Generated_Source\PSoC4/SPIM.c **** *  this loop if data is not being initiated by the master if there is not
 956:Generated_Source\PSoC4/SPIM.c **** *  enough room in the TX FIFO.
 957:Generated_Source\PSoC4/SPIM.c **** *
 958:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
 959:Generated_Source\PSoC4/SPIM.c **** *  No.
 960:Generated_Source\PSoC4/SPIM.c **** *
 961:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 962:Generated_Source\PSoC4/SPIM.c **** void SPIM_PutArray(const uint8 buffer[], uint8 byteCount)
 963:Generated_Source\PSoC4/SPIM.c ****                                                                           
 964:Generated_Source\PSoC4/SPIM.c **** {
 822              		.loc 1 964 0
 823              		.cfi_startproc
 824 0000 80B5     		push	{r7, lr}
 825              		.cfi_def_cfa_offset 8
 826              		.cfi_offset 7, -8
 827              		.cfi_offset 14, -4
 828 0002 84B0     		sub	sp, sp, #16
 829              		.cfi_def_cfa_offset 24
 830 0004 00AF     		add	r7, sp, #0
 831              		.cfi_def_cfa_register 7
 832 0006 7860     		str	r0, [r7, #4]
 833 0008 0A1C     		mov	r2, r1
 834 000a FB1C     		add	r3, r7, #3
 835 000c 1A70     		strb	r2, [r3]
 965:Generated_Source\PSoC4/SPIM.c ****     uint8 bufIndex;
 966:Generated_Source\PSoC4/SPIM.c **** 
 967:Generated_Source\PSoC4/SPIM.c ****     bufIndex = 0u;
 836              		.loc 1 967 0
 837 000e 0F23     		mov	r3, #15
 838 0010 FB18     		add	r3, r7, r3
 839 0012 0022     		mov	r2, #0
 840 0014 1A70     		strb	r2, [r3]
 968:Generated_Source\PSoC4/SPIM.c **** 
 969:Generated_Source\PSoC4/SPIM.c ****     while(byteCount > 0u)
 841              		.loc 1 969 0
 842 0016 14E0     		b	.L62
 843              	.L63:
 970:Generated_Source\PSoC4/SPIM.c ****     {
 971:Generated_Source\PSoC4/SPIM.c ****         SPIM_WriteTxData(buffer[bufIndex]);
 844              		.loc 1 971 0
 845 0018 0F23     		mov	r3, #15
 846 001a FB18     		add	r3, r7, r3
 847 001c 1B78     		ldrb	r3, [r3]
 848 001e 7A68     		ldr	r2, [r7, #4]
 849 0020 D318     		add	r3, r2, r3
 850 0022 1B78     		ldrb	r3, [r3]
 851 0024 181C     		mov	r0, r3
 852 0026 FFF7FEFF 		bl	SPIM_WriteTxData
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 33


 972:Generated_Source\PSoC4/SPIM.c ****         bufIndex++;
 853              		.loc 1 972 0
 854 002a 0F23     		mov	r3, #15
 855 002c FB18     		add	r3, r7, r3
 856 002e 1A78     		ldrb	r2, [r3]
 857 0030 0F23     		mov	r3, #15
 858 0032 FB18     		add	r3, r7, r3
 859 0034 0132     		add	r2, r2, #1
 860 0036 1A70     		strb	r2, [r3]
 973:Generated_Source\PSoC4/SPIM.c ****         byteCount--;
 861              		.loc 1 973 0
 862 0038 FB1C     		add	r3, r7, #3
 863 003a 1A78     		ldrb	r2, [r3]
 864 003c FB1C     		add	r3, r7, #3
 865 003e 013A     		sub	r2, r2, #1
 866 0040 1A70     		strb	r2, [r3]
 867              	.L62:
 969:Generated_Source\PSoC4/SPIM.c ****     {
 868              		.loc 1 969 0
 869 0042 FB1C     		add	r3, r7, #3
 870 0044 1B78     		ldrb	r3, [r3]
 871 0046 002B     		cmp	r3, #0
 872 0048 E6D1     		bne	.L63
 974:Generated_Source\PSoC4/SPIM.c ****     }
 975:Generated_Source\PSoC4/SPIM.c **** }
 873              		.loc 1 975 0
 874 004a BD46     		mov	sp, r7
 875 004c 04B0     		add	sp, sp, #16
 876              		@ sp needed
 877 004e 80BD     		pop	{r7, pc}
 878              		.cfi_endproc
 879              	.LFE19:
 880              		.size	SPIM_PutArray, .-SPIM_PutArray
 881              		.section	.text.SPIM_ClearFIFO,"ax",%progbits
 882              		.align	2
 883              		.global	SPIM_ClearFIFO
 884              		.code	16
 885              		.thumb_func
 886              		.type	SPIM_ClearFIFO, %function
 887              	SPIM_ClearFIFO:
 888              	.LFB20:
 976:Generated_Source\PSoC4/SPIM.c **** 
 977:Generated_Source\PSoC4/SPIM.c **** 
 978:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 979:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ClearFIFO
 980:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
 981:Generated_Source\PSoC4/SPIM.c **** *
 982:Generated_Source\PSoC4/SPIM.c **** * Summary:
 983:Generated_Source\PSoC4/SPIM.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
 984:Generated_Source\PSoC4/SPIM.c **** *
 985:Generated_Source\PSoC4/SPIM.c **** * Parameters:
 986:Generated_Source\PSoC4/SPIM.c **** *  None.
 987:Generated_Source\PSoC4/SPIM.c **** *
 988:Generated_Source\PSoC4/SPIM.c **** * Return:
 989:Generated_Source\PSoC4/SPIM.c **** *  None.
 990:Generated_Source\PSoC4/SPIM.c **** *
 991:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 34


 992:Generated_Source\PSoC4/SPIM.c **** *  Clear status register of the component.
 993:Generated_Source\PSoC4/SPIM.c **** *
 994:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 995:Generated_Source\PSoC4/SPIM.c **** void SPIM_ClearFIFO(void) 
 996:Generated_Source\PSoC4/SPIM.c **** {
 889              		.loc 1 996 0
 890              		.cfi_startproc
 891 0000 90B5     		push	{r4, r7, lr}
 892              		.cfi_def_cfa_offset 12
 893              		.cfi_offset 4, -12
 894              		.cfi_offset 7, -8
 895              		.cfi_offset 14, -4
 896 0002 83B0     		sub	sp, sp, #12
 897              		.cfi_def_cfa_offset 24
 898 0004 00AF     		add	r7, sp, #0
 899              		.cfi_def_cfa_register 7
 997:Generated_Source\PSoC4/SPIM.c ****     uint8 enableInterrupts;
 998:Generated_Source\PSoC4/SPIM.c **** 
 999:Generated_Source\PSoC4/SPIM.c ****     /* Clear Hardware RX FIFO */
1000:Generated_Source\PSoC4/SPIM.c ****     while(0u !=(SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY))
 900              		.loc 1 1000 0
 901 0006 01E0     		b	.L65
 902              	.L66:
1001:Generated_Source\PSoC4/SPIM.c ****     {
1002:Generated_Source\PSoC4/SPIM.c ****         (void) CY_GET_REG8(SPIM_RXDATA_PTR);
 903              		.loc 1 1002 0
 904 0008 124B     		ldr	r3, .L67
 905 000a 1B78     		ldrb	r3, [r3]
 906              	.L65:
1000:Generated_Source\PSoC4/SPIM.c ****     {
 907              		.loc 1 1000 0
 908 000c 124B     		ldr	r3, .L67+4
 909 000e 1B78     		ldrb	r3, [r3]
 910 0010 DBB2     		uxtb	r3, r3
 911 0012 1A1C     		mov	r2, r3
 912 0014 2023     		mov	r3, #32
 913 0016 1340     		and	r3, r2
 914 0018 F6D1     		bne	.L66
1003:Generated_Source\PSoC4/SPIM.c ****     }
1004:Generated_Source\PSoC4/SPIM.c **** 
1005:Generated_Source\PSoC4/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 915              		.loc 1 1005 0
 916 001a FC1D     		add	r4, r7, #7
 917 001c FFF7FEFF 		bl	CyEnterCriticalSection
 918 0020 031C     		mov	r3, r0
 919 0022 2370     		strb	r3, [r4]
1006:Generated_Source\PSoC4/SPIM.c ****     /* Clear TX FIFO */
1007:Generated_Source\PSoC4/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 920              		.loc 1 1007 0
 921 0024 0D4A     		ldr	r2, .L67+8
 922 0026 0D4B     		ldr	r3, .L67+8
 923 0028 1B78     		ldrb	r3, [r3]
 924 002a DBB2     		uxtb	r3, r3
 925 002c 0121     		mov	r1, #1
 926 002e 0B43     		orr	r3, r1
 927 0030 DBB2     		uxtb	r3, r3
 928 0032 1370     		strb	r3, [r2]
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 35


1008:Generated_Source\PSoC4/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 929              		.loc 1 1008 0
 930 0034 094A     		ldr	r2, .L67+8
 931 0036 094B     		ldr	r3, .L67+8
 932 0038 1B78     		ldrb	r3, [r3]
 933 003a DBB2     		uxtb	r3, r3
 934 003c 0121     		mov	r1, #1
 935 003e 8B43     		bic	r3, r1
 936 0040 DBB2     		uxtb	r3, r3
 937 0042 1370     		strb	r3, [r2]
1009:Generated_Source\PSoC4/SPIM.c **** 
1010:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_USE_SECOND_DATAPATH)
1011:Generated_Source\PSoC4/SPIM.c ****         /* Clear TX FIFO for 2nd Datapath */
1012:Generated_Source\PSoC4/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
1013:Generated_Source\PSoC4/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
1014:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_USE_SECOND_DATAPATH) */
1015:Generated_Source\PSoC4/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 938              		.loc 1 1015 0
 939 0044 FB1D     		add	r3, r7, #7
 940 0046 1B78     		ldrb	r3, [r3]
 941 0048 181C     		mov	r0, r3
 942 004a FFF7FEFF 		bl	CyExitCriticalSection
1016:Generated_Source\PSoC4/SPIM.c **** }
 943              		.loc 1 1016 0
 944 004e BD46     		mov	sp, r7
 945 0050 03B0     		add	sp, sp, #12
 946              		@ sp needed
 947 0052 90BD     		pop	{r4, r7, pc}
 948              	.L68:
 949              		.align	2
 950              	.L67:
 951 0054 55000F40 		.word	1074724949
 952 0058 65000F40 		.word	1074724965
 953 005c 95000F40 		.word	1074725013
 954              		.cfi_endproc
 955              	.LFE20:
 956              		.size	SPIM_ClearFIFO, .-SPIM_ClearFIFO
 957              		.section	.text.SPIM_EnableInt,"ax",%progbits
 958              		.align	2
 959              		.global	SPIM_EnableInt
 960              		.code	16
 961              		.thumb_func
 962              		.type	SPIM_EnableInt, %function
 963              	SPIM_EnableInt:
 964              	.LFB21:
1017:Generated_Source\PSoC4/SPIM.c **** 
1018:Generated_Source\PSoC4/SPIM.c **** 
1019:Generated_Source\PSoC4/SPIM.c **** /* Following functions are for version Compatibility, they are obsolete.
1020:Generated_Source\PSoC4/SPIM.c **** *  Please do not use it in new projects.
1021:Generated_Source\PSoC4/SPIM.c **** */
1022:Generated_Source\PSoC4/SPIM.c **** 
1023:Generated_Source\PSoC4/SPIM.c **** 
1024:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
1025:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_EnableInt
1026:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
1027:Generated_Source\PSoC4/SPIM.c **** *
1028:Generated_Source\PSoC4/SPIM.c **** * Summary:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 36


1029:Generated_Source\PSoC4/SPIM.c **** *  Enable internal interrupt generation.
1030:Generated_Source\PSoC4/SPIM.c **** *
1031:Generated_Source\PSoC4/SPIM.c **** * Parameters:
1032:Generated_Source\PSoC4/SPIM.c **** *  None.
1033:Generated_Source\PSoC4/SPIM.c **** *
1034:Generated_Source\PSoC4/SPIM.c **** * Return:
1035:Generated_Source\PSoC4/SPIM.c **** *  None.
1036:Generated_Source\PSoC4/SPIM.c **** *
1037:Generated_Source\PSoC4/SPIM.c **** * Theory:
1038:Generated_Source\PSoC4/SPIM.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1039:Generated_Source\PSoC4/SPIM.c **** *
1040:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
1041:Generated_Source\PSoC4/SPIM.c **** void SPIM_EnableInt(void) 
1042:Generated_Source\PSoC4/SPIM.c **** {
 965              		.loc 1 1042 0
 966              		.cfi_startproc
 967 0000 80B5     		push	{r7, lr}
 968              		.cfi_def_cfa_offset 8
 969              		.cfi_offset 7, -8
 970              		.cfi_offset 14, -4
 971 0002 00AF     		add	r7, sp, #0
 972              		.cfi_def_cfa_register 7
1043:Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableRxInt();
 973              		.loc 1 1043 0
 974 0004 FFF7FEFF 		bl	SPIM_EnableRxInt
1044:Generated_Source\PSoC4/SPIM.c ****     SPIM_EnableTxInt();
 975              		.loc 1 1044 0
 976 0008 FFF7FEFF 		bl	SPIM_EnableTxInt
1045:Generated_Source\PSoC4/SPIM.c **** }
 977              		.loc 1 1045 0
 978 000c BD46     		mov	sp, r7
 979              		@ sp needed
 980 000e 80BD     		pop	{r7, pc}
 981              		.cfi_endproc
 982              	.LFE21:
 983              		.size	SPIM_EnableInt, .-SPIM_EnableInt
 984              		.section	.text.SPIM_DisableInt,"ax",%progbits
 985              		.align	2
 986              		.global	SPIM_DisableInt
 987              		.code	16
 988              		.thumb_func
 989              		.type	SPIM_DisableInt, %function
 990              	SPIM_DisableInt:
 991              	.LFB22:
1046:Generated_Source\PSoC4/SPIM.c **** 
1047:Generated_Source\PSoC4/SPIM.c **** 
1048:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
1049:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_DisableInt
1050:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
1051:Generated_Source\PSoC4/SPIM.c **** *
1052:Generated_Source\PSoC4/SPIM.c **** * Summary:
1053:Generated_Source\PSoC4/SPIM.c **** *  Disable internal interrupt generation.
1054:Generated_Source\PSoC4/SPIM.c **** *
1055:Generated_Source\PSoC4/SPIM.c **** * Parameters:
1056:Generated_Source\PSoC4/SPIM.c **** *  None.
1057:Generated_Source\PSoC4/SPIM.c **** *
1058:Generated_Source\PSoC4/SPIM.c **** * Return:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 37


1059:Generated_Source\PSoC4/SPIM.c **** *  None.
1060:Generated_Source\PSoC4/SPIM.c **** *
1061:Generated_Source\PSoC4/SPIM.c **** * Theory:
1062:Generated_Source\PSoC4/SPIM.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1063:Generated_Source\PSoC4/SPIM.c **** *
1064:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
1065:Generated_Source\PSoC4/SPIM.c **** void SPIM_DisableInt(void) 
1066:Generated_Source\PSoC4/SPIM.c **** {
 992              		.loc 1 1066 0
 993              		.cfi_startproc
 994 0000 80B5     		push	{r7, lr}
 995              		.cfi_def_cfa_offset 8
 996              		.cfi_offset 7, -8
 997              		.cfi_offset 14, -4
 998 0002 00AF     		add	r7, sp, #0
 999              		.cfi_def_cfa_register 7
1067:Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableTxInt();
 1000              		.loc 1 1067 0
 1001 0004 FFF7FEFF 		bl	SPIM_DisableTxInt
1068:Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableRxInt();
 1002              		.loc 1 1068 0
 1003 0008 FFF7FEFF 		bl	SPIM_DisableRxInt
1069:Generated_Source\PSoC4/SPIM.c **** }
 1004              		.loc 1 1069 0
 1005 000c BD46     		mov	sp, r7
 1006              		@ sp needed
 1007 000e 80BD     		pop	{r7, pc}
 1008              		.cfi_endproc
 1009              	.LFE22:
 1010              		.size	SPIM_DisableInt, .-SPIM_DisableInt
 1011              		.section	.text.SPIM_SetInterruptMode,"ax",%progbits
 1012              		.align	2
 1013              		.global	SPIM_SetInterruptMode
 1014              		.code	16
 1015              		.thumb_func
 1016              		.type	SPIM_SetInterruptMode, %function
 1017              	SPIM_SetInterruptMode:
 1018              	.LFB23:
1070:Generated_Source\PSoC4/SPIM.c **** 
1071:Generated_Source\PSoC4/SPIM.c **** 
1072:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
1073:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_SetInterruptMode
1074:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
1075:Generated_Source\PSoC4/SPIM.c **** *
1076:Generated_Source\PSoC4/SPIM.c **** * Summary:
1077:Generated_Source\PSoC4/SPIM.c **** *  Configure which status bits trigger an interrupt event.
1078:Generated_Source\PSoC4/SPIM.c **** *
1079:Generated_Source\PSoC4/SPIM.c **** * Parameters:
1080:Generated_Source\PSoC4/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1081:Generated_Source\PSoC4/SPIM.c **** *  header file).
1082:Generated_Source\PSoC4/SPIM.c **** *
1083:Generated_Source\PSoC4/SPIM.c **** * Return:
1084:Generated_Source\PSoC4/SPIM.c **** *  None.
1085:Generated_Source\PSoC4/SPIM.c **** *
1086:Generated_Source\PSoC4/SPIM.c **** * Theory:
1087:Generated_Source\PSoC4/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
1088:Generated_Source\PSoC4/SPIM.c **** *
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 38


1089:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
1090:Generated_Source\PSoC4/SPIM.c **** void SPIM_SetInterruptMode(uint8 intSrc) 
1091:Generated_Source\PSoC4/SPIM.c **** {
 1019              		.loc 1 1091 0
 1020              		.cfi_startproc
 1021 0000 80B5     		push	{r7, lr}
 1022              		.cfi_def_cfa_offset 8
 1023              		.cfi_offset 7, -8
 1024              		.cfi_offset 14, -4
 1025 0002 82B0     		sub	sp, sp, #8
 1026              		.cfi_def_cfa_offset 16
 1027 0004 00AF     		add	r7, sp, #0
 1028              		.cfi_def_cfa_register 7
 1029 0006 021C     		mov	r2, r0
 1030 0008 FB1D     		add	r3, r7, #7
 1031 000a 1A70     		strb	r2, [r3]
1092:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_STATUS_MASK_REG  = (intSrc & ((uint8) ~SPIM_STS_SPI_IDLE));
 1032              		.loc 1 1092 0
 1033 000c 064A     		ldr	r2, .L72
 1034 000e FB1D     		add	r3, r7, #7
 1035 0010 1B78     		ldrb	r3, [r3]
 1036 0012 1021     		mov	r1, #16
 1037 0014 8B43     		bic	r3, r1
 1038 0016 DBB2     		uxtb	r3, r3
 1039 0018 1370     		strb	r3, [r2]
1093:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_STATUS_MASK_REG  =  intSrc;
 1040              		.loc 1 1093 0
 1041 001a 044A     		ldr	r2, .L72+4
 1042 001c FB1D     		add	r3, r7, #7
 1043 001e 1B78     		ldrb	r3, [r3]
 1044 0020 1370     		strb	r3, [r2]
1094:Generated_Source\PSoC4/SPIM.c **** }
 1045              		.loc 1 1094 0
 1046 0022 BD46     		mov	sp, r7
 1047 0024 02B0     		add	sp, sp, #8
 1048              		@ sp needed
 1049 0026 80BD     		pop	{r7, pc}
 1050              	.L73:
 1051              		.align	2
 1052              	.L72:
 1053 0028 87000F40 		.word	1074724999
 1054 002c 85000F40 		.word	1074724997
 1055              		.cfi_endproc
 1056              	.LFE23:
 1057              		.size	SPIM_SetInterruptMode, .-SPIM_SetInterruptMode
 1058              		.section	.text.SPIM_ReadStatus,"ax",%progbits
 1059              		.align	2
 1060              		.global	SPIM_ReadStatus
 1061              		.code	16
 1062              		.thumb_func
 1063              		.type	SPIM_ReadStatus, %function
 1064              	SPIM_ReadStatus:
 1065              	.LFB24:
1095:Generated_Source\PSoC4/SPIM.c **** 
1096:Generated_Source\PSoC4/SPIM.c **** 
1097:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
1098:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ReadStatus
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 39


1099:Generated_Source\PSoC4/SPIM.c **** ********************************************************************************
1100:Generated_Source\PSoC4/SPIM.c **** *
1101:Generated_Source\PSoC4/SPIM.c **** * Summary:
1102:Generated_Source\PSoC4/SPIM.c **** *  Read the status register for the component.
1103:Generated_Source\PSoC4/SPIM.c **** *
1104:Generated_Source\PSoC4/SPIM.c **** * Parameters:
1105:Generated_Source\PSoC4/SPIM.c **** *  None.
1106:Generated_Source\PSoC4/SPIM.c **** *
1107:Generated_Source\PSoC4/SPIM.c **** * Return:
1108:Generated_Source\PSoC4/SPIM.c **** *  Contents of the status register.
1109:Generated_Source\PSoC4/SPIM.c **** *
1110:Generated_Source\PSoC4/SPIM.c **** * Global variables:
1111:Generated_Source\PSoC4/SPIM.c **** *  SPIM_swStatus - used to store in software status register,
1112:Generated_Source\PSoC4/SPIM.c **** *  modified every function call - resets to zero.
1113:Generated_Source\PSoC4/SPIM.c **** *
1114:Generated_Source\PSoC4/SPIM.c **** * Theory:
1115:Generated_Source\PSoC4/SPIM.c **** *  Allows the user and the API to read the status register for error detection
1116:Generated_Source\PSoC4/SPIM.c **** *  and flow control.
1117:Generated_Source\PSoC4/SPIM.c **** *
1118:Generated_Source\PSoC4/SPIM.c **** * Side Effects:
1119:Generated_Source\PSoC4/SPIM.c **** *  Clear status register of the component.
1120:Generated_Source\PSoC4/SPIM.c **** *
1121:Generated_Source\PSoC4/SPIM.c **** * Reentrant:
1122:Generated_Source\PSoC4/SPIM.c **** *  No.
1123:Generated_Source\PSoC4/SPIM.c **** *
1124:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
1125:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_ReadStatus(void) 
1126:Generated_Source\PSoC4/SPIM.c **** {
 1066              		.loc 1 1126 0
 1067              		.cfi_startproc
 1068 0000 80B5     		push	{r7, lr}
 1069              		.cfi_def_cfa_offset 8
 1070              		.cfi_offset 7, -8
 1071              		.cfi_offset 14, -4
 1072 0002 82B0     		sub	sp, sp, #8
 1073              		.cfi_def_cfa_offset 16
 1074 0004 00AF     		add	r7, sp, #0
 1075              		.cfi_def_cfa_register 7
1127:Generated_Source\PSoC4/SPIM.c ****     uint8 tmpStatus;
1128:Generated_Source\PSoC4/SPIM.c **** 
1129:Generated_Source\PSoC4/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED || SPIM_RX_SOFTWARE_BUF_ENABLED)
1130:Generated_Source\PSoC4/SPIM.c **** 
1131:Generated_Source\PSoC4/SPIM.c ****         SPIM_DisableInt();
1132:Generated_Source\PSoC4/SPIM.c **** 
1133:Generated_Source\PSoC4/SPIM.c ****         tmpStatus  = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
1134:Generated_Source\PSoC4/SPIM.c ****         tmpStatus |= SPIM_GET_STATUS_TX(SPIM_swStatusTx);
1135:Generated_Source\PSoC4/SPIM.c ****         tmpStatus &= ((uint8) ~SPIM_STS_SPI_IDLE);
1136:Generated_Source\PSoC4/SPIM.c **** 
1137:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusTx = 0u;
1138:Generated_Source\PSoC4/SPIM.c ****         SPIM_swStatusRx = 0u;
1139:Generated_Source\PSoC4/SPIM.c **** 
1140:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableInt();
1141:Generated_Source\PSoC4/SPIM.c **** 
1142:Generated_Source\PSoC4/SPIM.c ****     #else
1143:Generated_Source\PSoC4/SPIM.c **** 
1144:Generated_Source\PSoC4/SPIM.c ****         tmpStatus  = SPIM_RX_STATUS_REG;
 1076              		.loc 1 1144 0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 40


 1077 0006 0C4A     		ldr	r2, .L76
 1078 0008 FB1D     		add	r3, r7, #7
 1079 000a 1278     		ldrb	r2, [r2]
 1080 000c 1A70     		strb	r2, [r3]
1145:Generated_Source\PSoC4/SPIM.c ****         tmpStatus |= SPIM_TX_STATUS_REG;
 1081              		.loc 1 1145 0
 1082 000e 0B4B     		ldr	r3, .L76+4
 1083 0010 1B78     		ldrb	r3, [r3]
 1084 0012 D9B2     		uxtb	r1, r3
 1085 0014 FB1D     		add	r3, r7, #7
 1086 0016 FA1D     		add	r2, r7, #7
 1087 0018 1278     		ldrb	r2, [r2]
 1088 001a 0A43     		orr	r2, r1
 1089 001c 1A70     		strb	r2, [r3]
1146:Generated_Source\PSoC4/SPIM.c ****         tmpStatus &= ((uint8) ~SPIM_STS_SPI_IDLE);
 1090              		.loc 1 1146 0
 1091 001e FB1D     		add	r3, r7, #7
 1092 0020 FA1D     		add	r2, r7, #7
 1093 0022 1278     		ldrb	r2, [r2]
 1094 0024 1021     		mov	r1, #16
 1095 0026 8A43     		bic	r2, r1
 1096 0028 1A70     		strb	r2, [r3]
1147:Generated_Source\PSoC4/SPIM.c **** 
1148:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED || SPIM_RX_SOFTWARE_BUF_ENABLED) */
1149:Generated_Source\PSoC4/SPIM.c **** 
1150:Generated_Source\PSoC4/SPIM.c ****     return(tmpStatus);
 1097              		.loc 1 1150 0
 1098 002a FB1D     		add	r3, r7, #7
 1099 002c 1B78     		ldrb	r3, [r3]
1151:Generated_Source\PSoC4/SPIM.c **** }
 1100              		.loc 1 1151 0
 1101 002e 181C     		mov	r0, r3
 1102 0030 BD46     		mov	sp, r7
 1103 0032 02B0     		add	sp, sp, #8
 1104              		@ sp needed
 1105 0034 80BD     		pop	{r7, pc}
 1106              	.L77:
 1107 0036 C046     		.align	2
 1108              	.L76:
 1109 0038 65000F40 		.word	1074724965
 1110 003c 67000F40 		.word	1074724967
 1111              		.cfi_endproc
 1112              	.LFE24:
 1113              		.size	SPIM_ReadStatus, .-SPIM_ReadStatus
 1114              		.text
 1115              	.Letext0:
 1116              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1117              		.section	.debug_info,"",%progbits
 1118              	.Ldebug_info0:
 1119 0000 E9030000 		.4byte	0x3e9
 1120 0004 0400     		.2byte	0x4
 1121 0006 00000000 		.4byte	.Ldebug_abbrev0
 1122 000a 04       		.byte	0x4
 1123 000b 01       		.uleb128 0x1
 1124 000c EB010000 		.4byte	.LASF51
 1125 0010 01       		.byte	0x1
 1126 0011 EA000000 		.4byte	.LASF52
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 41


 1127 0015 11000000 		.4byte	.LASF53
 1128 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1129 001d 00000000 		.4byte	0
 1130 0021 00000000 		.4byte	.Ldebug_line0
 1131 0025 02       		.uleb128 0x2
 1132 0026 01       		.byte	0x1
 1133 0027 06       		.byte	0x6
 1134 0028 99030000 		.4byte	.LASF0
 1135 002c 02       		.uleb128 0x2
 1136 002d 01       		.byte	0x1
 1137 002e 08       		.byte	0x8
 1138 002f 98010000 		.4byte	.LASF1
 1139 0033 02       		.uleb128 0x2
 1140 0034 02       		.byte	0x2
 1141 0035 05       		.byte	0x5
 1142 0036 31030000 		.4byte	.LASF2
 1143 003a 02       		.uleb128 0x2
 1144 003b 02       		.byte	0x2
 1145 003c 07       		.byte	0x7
 1146 003d 98000000 		.4byte	.LASF3
 1147 0041 02       		.uleb128 0x2
 1148 0042 04       		.byte	0x4
 1149 0043 05       		.byte	0x5
 1150 0044 86030000 		.4byte	.LASF4
 1151 0048 02       		.uleb128 0x2
 1152 0049 04       		.byte	0x4
 1153 004a 07       		.byte	0x7
 1154 004b 51010000 		.4byte	.LASF5
 1155 004f 02       		.uleb128 0x2
 1156 0050 08       		.byte	0x8
 1157 0051 05       		.byte	0x5
 1158 0052 0A030000 		.4byte	.LASF6
 1159 0056 02       		.uleb128 0x2
 1160 0057 08       		.byte	0x8
 1161 0058 07       		.byte	0x7
 1162 0059 B6020000 		.4byte	.LASF7
 1163 005d 03       		.uleb128 0x3
 1164 005e 04       		.byte	0x4
 1165 005f 05       		.byte	0x5
 1166 0060 696E7400 		.ascii	"int\000"
 1167 0064 02       		.uleb128 0x2
 1168 0065 04       		.byte	0x4
 1169 0066 07       		.byte	0x7
 1170 0067 A9020000 		.4byte	.LASF8
 1171 006b 04       		.uleb128 0x4
 1172 006c 63010000 		.4byte	.LASF12
 1173 0070 02       		.byte	0x2
 1174 0071 B901     		.2byte	0x1b9
 1175 0073 2C000000 		.4byte	0x2c
 1176 0077 02       		.uleb128 0x2
 1177 0078 04       		.byte	0x4
 1178 0079 04       		.byte	0x4
 1179 007a 08010000 		.4byte	.LASF9
 1180 007e 02       		.uleb128 0x2
 1181 007f 08       		.byte	0x8
 1182 0080 04       		.byte	0x4
 1183 0081 B8010000 		.4byte	.LASF10
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 42


 1184 0085 02       		.uleb128 0x2
 1185 0086 01       		.byte	0x1
 1186 0087 08       		.byte	0x8
 1187 0088 AB000000 		.4byte	.LASF11
 1188 008c 04       		.uleb128 0x4
 1189 008d 3B010000 		.4byte	.LASF13
 1190 0091 02       		.byte	0x2
 1191 0092 6302     		.2byte	0x263
 1192 0094 98000000 		.4byte	0x98
 1193 0098 05       		.uleb128 0x5
 1194 0099 6B000000 		.4byte	0x6b
 1195 009d 02       		.uleb128 0x2
 1196 009e 04       		.byte	0x4
 1197 009f 07       		.byte	0x7
 1198 00a0 01030000 		.4byte	.LASF14
 1199 00a4 06       		.uleb128 0x6
 1200 00a5 18030000 		.4byte	.LASF15
 1201 00a9 01       		.byte	0x1
 1202 00aa 3F       		.byte	0x3f
 1203 00ab 00000000 		.4byte	.LFB1
 1204 00af 34000000 		.4byte	.LFE1-.LFB1
 1205 00b3 01       		.uleb128 0x1
 1206 00b4 9C       		.byte	0x9c
 1207 00b5 07       		.uleb128 0x7
 1208 00b6 7B000000 		.4byte	.LASF17
 1209 00ba 01       		.byte	0x1
 1210 00bb 78       		.byte	0x78
 1211 00bc 00000000 		.4byte	.LFB2
 1212 00c0 6C000000 		.4byte	.LFE2-.LFB2
 1213 00c4 01       		.uleb128 0x1
 1214 00c5 9C       		.byte	0x9c
 1215 00c6 D9000000 		.4byte	0xd9
 1216 00ca 08       		.uleb128 0x8
 1217 00cb 77010000 		.4byte	.LASF19
 1218 00cf 01       		.byte	0x1
 1219 00d0 7A       		.byte	0x7a
 1220 00d1 6B000000 		.4byte	0x6b
 1221 00d5 02       		.uleb128 0x2
 1222 00d6 91       		.byte	0x91
 1223 00d7 6F       		.sleb128 -17
 1224 00d8 00       		.byte	0
 1225 00d9 06       		.uleb128 0x6
 1226 00da A5030000 		.4byte	.LASF16
 1227 00de 01       		.byte	0x1
 1228 00df A3       		.byte	0xa3
 1229 00e0 00000000 		.4byte	.LFB3
 1230 00e4 24000000 		.4byte	.LFE3-.LFB3
 1231 00e8 01       		.uleb128 0x1
 1232 00e9 9C       		.byte	0x9c
 1233 00ea 07       		.uleb128 0x7
 1234 00eb 87000000 		.4byte	.LASF18
 1235 00ef 01       		.byte	0x1
 1236 00f0 C0       		.byte	0xc0
 1237 00f1 00000000 		.4byte	.LFB4
 1238 00f5 54000000 		.4byte	.LFE4-.LFB4
 1239 00f9 01       		.uleb128 0x1
 1240 00fa 9C       		.byte	0x9c
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 43


 1241 00fb 0E010000 		.4byte	0x10e
 1242 00ff 08       		.uleb128 0x8
 1243 0100 77010000 		.4byte	.LASF19
 1244 0104 01       		.byte	0x1
 1245 0105 C2       		.byte	0xc2
 1246 0106 6B000000 		.4byte	0x6b
 1247 010a 02       		.uleb128 0x2
 1248 010b 91       		.byte	0x91
 1249 010c 6F       		.sleb128 -17
 1250 010d 00       		.byte	0
 1251 010e 09       		.uleb128 0x9
 1252 010f 40010000 		.4byte	.LASF20
 1253 0113 01       		.byte	0x1
 1254 0114 E3       		.byte	0xe3
 1255 0115 00000000 		.4byte	.LFB5
 1256 0119 08000000 		.4byte	.LFE5-.LFB5
 1257 011d 01       		.uleb128 0x1
 1258 011e 9C       		.byte	0x9c
 1259 011f 09       		.uleb128 0x9
 1260 0120 75030000 		.4byte	.LASF21
 1261 0124 01       		.byte	0x1
 1262 0125 FC       		.byte	0xfc
 1263 0126 00000000 		.4byte	.LFB6
 1264 012a 08000000 		.4byte	.LFE6-.LFB6
 1265 012e 01       		.uleb128 0x1
 1266 012f 9C       		.byte	0x9c
 1267 0130 0A       		.uleb128 0xa
 1268 0131 A6010000 		.4byte	.LASF22
 1269 0135 01       		.byte	0x1
 1270 0136 1501     		.2byte	0x115
 1271 0138 00000000 		.4byte	.LFB7
 1272 013c 08000000 		.4byte	.LFE7-.LFB7
 1273 0140 01       		.uleb128 0x1
 1274 0141 9C       		.byte	0x9c
 1275 0142 0A       		.uleb128 0xa
 1276 0143 C2030000 		.4byte	.LASF23
 1277 0147 01       		.byte	0x1
 1278 0148 2E01     		.2byte	0x12e
 1279 014a 00000000 		.4byte	.LFB8
 1280 014e 08000000 		.4byte	.LFE8-.LFB8
 1281 0152 01       		.uleb128 0x1
 1282 0153 9C       		.byte	0x9c
 1283 0154 0B       		.uleb128 0xb
 1284 0155 79020000 		.4byte	.LASF24
 1285 0159 01       		.byte	0x1
 1286 015a 4801     		.2byte	0x148
 1287 015c 00000000 		.4byte	.LFB9
 1288 0160 20000000 		.4byte	.LFE9-.LFB9
 1289 0164 01       		.uleb128 0x1
 1290 0165 9C       		.byte	0x9c
 1291 0166 7A010000 		.4byte	0x17a
 1292 016a 0C       		.uleb128 0xc
 1293 016b BF010000 		.4byte	.LASF26
 1294 016f 01       		.byte	0x1
 1295 0170 4801     		.2byte	0x148
 1296 0172 6B000000 		.4byte	0x6b
 1297 0176 02       		.uleb128 0x2
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 44


 1298 0177 91       		.byte	0x91
 1299 0178 77       		.sleb128 -9
 1300 0179 00       		.byte	0
 1301 017a 0B       		.uleb128 0xb
 1302 017b 91020000 		.4byte	.LASF25
 1303 017f 01       		.byte	0x1
 1304 0180 6001     		.2byte	0x160
 1305 0182 00000000 		.4byte	.LFB10
 1306 0186 20000000 		.4byte	.LFE10-.LFB10
 1307 018a 01       		.uleb128 0x1
 1308 018b 9C       		.byte	0x9c
 1309 018c A0010000 		.4byte	0x1a0
 1310 0190 0C       		.uleb128 0xc
 1311 0191 BF010000 		.4byte	.LASF26
 1312 0195 01       		.byte	0x1
 1313 0196 6001     		.2byte	0x160
 1314 0198 6B000000 		.4byte	0x6b
 1315 019c 02       		.uleb128 0x2
 1316 019d 91       		.byte	0x91
 1317 019e 77       		.sleb128 -9
 1318 019f 00       		.byte	0
 1319 01a0 0D       		.uleb128 0xd
 1320 01a1 B0030000 		.4byte	.LASF28
 1321 01a5 01       		.byte	0x1
 1322 01a6 8201     		.2byte	0x182
 1323 01a8 6B000000 		.4byte	0x6b
 1324 01ac 00000000 		.4byte	.LFB11
 1325 01b0 20000000 		.4byte	.LFE11-.LFB11
 1326 01b4 01       		.uleb128 0x1
 1327 01b5 9C       		.byte	0x9c
 1328 01b6 CA010000 		.4byte	0x1ca
 1329 01ba 0E       		.uleb128 0xe
 1330 01bb 8F030000 		.4byte	.LASF27
 1331 01bf 01       		.byte	0x1
 1332 01c0 8401     		.2byte	0x184
 1333 01c2 6B000000 		.4byte	0x6b
 1334 01c6 02       		.uleb128 0x2
 1335 01c7 91       		.byte	0x91
 1336 01c8 77       		.sleb128 -9
 1337 01c9 00       		.byte	0
 1338 01ca 0D       		.uleb128 0xd
 1339 01cb D7020000 		.4byte	.LASF29
 1340 01cf 01       		.byte	0x1
 1341 01d0 B501     		.2byte	0x1b5
 1342 01d2 6B000000 		.4byte	0x6b
 1343 01d6 00000000 		.4byte	.LFB12
 1344 01da 20000000 		.4byte	.LFE12-.LFB12
 1345 01de 01       		.uleb128 0x1
 1346 01df 9C       		.byte	0x9c
 1347 01e0 F4010000 		.4byte	0x1f4
 1348 01e4 0E       		.uleb128 0xe
 1349 01e5 8F030000 		.4byte	.LASF27
 1350 01e9 01       		.byte	0x1
 1351 01ea B701     		.2byte	0x1b7
 1352 01ec 6B000000 		.4byte	0x6b
 1353 01f0 02       		.uleb128 0x2
 1354 01f1 91       		.byte	0x91
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 45


 1355 01f2 77       		.sleb128 -9
 1356 01f3 00       		.byte	0
 1357 01f4 0B       		.uleb128 0xb
 1358 01f5 00000000 		.4byte	.LASF30
 1359 01f9 01       		.byte	0x1
 1360 01fa EE01     		.2byte	0x1ee
 1361 01fc 00000000 		.4byte	.LFB13
 1362 0200 34000000 		.4byte	.LFE13-.LFB13
 1363 0204 01       		.uleb128 0x1
 1364 0205 9C       		.byte	0x9c
 1365 0206 1A020000 		.4byte	0x21a
 1366 020a 0C       		.uleb128 0xc
 1367 020b 91000000 		.4byte	.LASF31
 1368 020f 01       		.byte	0x1
 1369 0210 EE01     		.2byte	0x1ee
 1370 0212 6B000000 		.4byte	0x6b
 1371 0216 02       		.uleb128 0x2
 1372 0217 91       		.byte	0x91
 1373 0218 77       		.sleb128 -9
 1374 0219 00       		.byte	0
 1375 021a 0D       		.uleb128 0xd
 1376 021b 88010000 		.4byte	.LASF32
 1377 021f 01       		.byte	0x1
 1378 0220 5A02     		.2byte	0x25a
 1379 0222 6B000000 		.4byte	0x6b
 1380 0226 00000000 		.4byte	.LFB14
 1381 022a 20000000 		.4byte	.LFE14-.LFB14
 1382 022e 01       		.uleb128 0x1
 1383 022f 9C       		.byte	0x9c
 1384 0230 44020000 		.4byte	0x244
 1385 0234 0E       		.uleb128 0xe
 1386 0235 D3000000 		.4byte	.LASF33
 1387 0239 01       		.byte	0x1
 1388 023a 5C02     		.2byte	0x25c
 1389 023c 6B000000 		.4byte	0x6b
 1390 0240 02       		.uleb128 0x2
 1391 0241 91       		.byte	0x91
 1392 0242 77       		.sleb128 -9
 1393 0243 00       		.byte	0
 1394 0244 0D       		.uleb128 0xd
 1395 0245 D6010000 		.4byte	.LASF34
 1396 0249 01       		.byte	0x1
 1397 024a 9A02     		.2byte	0x29a
 1398 024c 6B000000 		.4byte	0x6b
 1399 0250 00000000 		.4byte	.LFB15
 1400 0254 30000000 		.4byte	.LFE15-.LFB15
 1401 0258 01       		.uleb128 0x1
 1402 0259 9C       		.byte	0x9c
 1403 025a 6E020000 		.4byte	0x26e
 1404 025e 0E       		.uleb128 0xe
 1405 025f 21010000 		.4byte	.LASF35
 1406 0263 01       		.byte	0x1
 1407 0264 9C02     		.2byte	0x29c
 1408 0266 6B000000 		.4byte	0x6b
 1409 026a 02       		.uleb128 0x2
 1410 026b 91       		.byte	0x91
 1411 026c 77       		.sleb128 -9
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 46


 1412 026d 00       		.byte	0
 1413 026e 0D       		.uleb128 0xd
 1414 026f 26010000 		.4byte	.LASF36
 1415 0273 01       		.byte	0x1
 1416 0274 D702     		.2byte	0x2d7
 1417 0276 6B000000 		.4byte	0x6b
 1418 027a 00000000 		.4byte	.LFB16
 1419 027e 48000000 		.4byte	.LFE16-.LFB16
 1420 0282 01       		.uleb128 0x1
 1421 0283 9C       		.byte	0x9c
 1422 0284 98020000 		.4byte	0x298
 1423 0288 0E       		.uleb128 0xe
 1424 0289 21010000 		.4byte	.LASF35
 1425 028d 01       		.byte	0x1
 1426 028e D902     		.2byte	0x2d9
 1427 0290 6B000000 		.4byte	0x6b
 1428 0294 02       		.uleb128 0x2
 1429 0295 91       		.byte	0x91
 1430 0296 77       		.sleb128 -9
 1431 0297 00       		.byte	0
 1432 0298 0A       		.uleb128 0xa
 1433 0299 0E010000 		.4byte	.LASF37
 1434 029d 01       		.byte	0x1
 1435 029e 2603     		.2byte	0x326
 1436 02a0 00000000 		.4byte	.LFB17
 1437 02a4 24000000 		.4byte	.LFE17-.LFB17
 1438 02a8 01       		.uleb128 0x1
 1439 02a9 9C       		.byte	0x9c
 1440 02aa 0F       		.uleb128 0xf
 1441 02ab 3B030000 		.4byte	.LASF38
 1442 02af 01       		.byte	0x1
 1443 02b0 5D03     		.2byte	0x35d
 1444 02b2 00000000 		.4byte	.LFB18
 1445 02b6 44000000 		.4byte	.LFE18-.LFB18
 1446 02ba 01       		.uleb128 0x1
 1447 02bb 9C       		.byte	0x9c
 1448 02bc D0020000 		.4byte	0x2d0
 1449 02c0 0E       		.uleb128 0xe
 1450 02c1 77010000 		.4byte	.LASF19
 1451 02c5 01       		.byte	0x1
 1452 02c6 5F03     		.2byte	0x35f
 1453 02c8 6B000000 		.4byte	0x6b
 1454 02cc 02       		.uleb128 0x2
 1455 02cd 91       		.byte	0x91
 1456 02ce 6F       		.sleb128 -17
 1457 02cf 00       		.byte	0
 1458 02d0 0F       		.uleb128 0xf
 1459 02d1 69010000 		.4byte	.LASF39
 1460 02d5 01       		.byte	0x1
 1461 02d6 C203     		.2byte	0x3c2
 1462 02d8 00000000 		.4byte	.LFB19
 1463 02dc 50000000 		.4byte	.LFE19-.LFB19
 1464 02e0 01       		.uleb128 0x1
 1465 02e1 9C       		.byte	0x9c
 1466 02e2 14030000 		.4byte	0x314
 1467 02e6 0C       		.uleb128 0xc
 1468 02e7 4E030000 		.4byte	.LASF40
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 47


 1469 02eb 01       		.byte	0x1
 1470 02ec C203     		.2byte	0x3c2
 1471 02ee 14030000 		.4byte	0x314
 1472 02f2 02       		.uleb128 0x2
 1473 02f3 91       		.byte	0x91
 1474 02f4 6C       		.sleb128 -20
 1475 02f5 0C       		.uleb128 0xc
 1476 02f6 CD020000 		.4byte	.LASF41
 1477 02fa 01       		.byte	0x1
 1478 02fb C203     		.2byte	0x3c2
 1479 02fd 6B000000 		.4byte	0x6b
 1480 0301 02       		.uleb128 0x2
 1481 0302 91       		.byte	0x91
 1482 0303 6B       		.sleb128 -21
 1483 0304 0E       		.uleb128 0xe
 1484 0305 E9020000 		.4byte	.LASF42
 1485 0309 01       		.byte	0x1
 1486 030a C503     		.2byte	0x3c5
 1487 030c 6B000000 		.4byte	0x6b
 1488 0310 02       		.uleb128 0x2
 1489 0311 91       		.byte	0x91
 1490 0312 77       		.sleb128 -9
 1491 0313 00       		.byte	0
 1492 0314 10       		.uleb128 0x10
 1493 0315 04       		.byte	0x4
 1494 0316 1A030000 		.4byte	0x31a
 1495 031a 11       		.uleb128 0x11
 1496 031b 6B000000 		.4byte	0x6b
 1497 031f 0F       		.uleb128 0xf
 1498 0320 22030000 		.4byte	.LASF43
 1499 0324 01       		.byte	0x1
 1500 0325 E303     		.2byte	0x3e3
 1501 0327 00000000 		.4byte	.LFB20
 1502 032b 60000000 		.4byte	.LFE20-.LFB20
 1503 032f 01       		.uleb128 0x1
 1504 0330 9C       		.byte	0x9c
 1505 0331 45030000 		.4byte	0x345
 1506 0335 0E       		.uleb128 0xe
 1507 0336 77010000 		.4byte	.LASF19
 1508 033a 01       		.byte	0x1
 1509 033b E503     		.2byte	0x3e5
 1510 033d 6B000000 		.4byte	0x6b
 1511 0341 02       		.uleb128 0x2
 1512 0342 91       		.byte	0x91
 1513 0343 6F       		.sleb128 -17
 1514 0344 00       		.byte	0
 1515 0345 12       		.uleb128 0x12
 1516 0346 F2020000 		.4byte	.LASF44
 1517 034a 01       		.byte	0x1
 1518 034b 1104     		.2byte	0x411
 1519 034d 00000000 		.4byte	.LFB21
 1520 0351 10000000 		.4byte	.LFE21-.LFB21
 1521 0355 01       		.uleb128 0x1
 1522 0356 9C       		.byte	0x9c
 1523 0357 12       		.uleb128 0x12
 1524 0358 DA000000 		.4byte	.LASF45
 1525 035c 01       		.byte	0x1
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 48


 1526 035d 2904     		.2byte	0x429
 1527 035f 00000000 		.4byte	.LFB22
 1528 0363 10000000 		.4byte	.LFE22-.LFB22
 1529 0367 01       		.uleb128 0x1
 1530 0368 9C       		.byte	0x9c
 1531 0369 0B       		.uleb128 0xb
 1532 036a B0000000 		.4byte	.LASF46
 1533 036e 01       		.byte	0x1
 1534 036f 4204     		.2byte	0x442
 1535 0371 00000000 		.4byte	.LFB23
 1536 0375 30000000 		.4byte	.LFE23-.LFB23
 1537 0379 01       		.uleb128 0x1
 1538 037a 9C       		.byte	0x9c
 1539 037b 8F030000 		.4byte	0x38f
 1540 037f 0C       		.uleb128 0xc
 1541 0380 BF010000 		.4byte	.LASF26
 1542 0384 01       		.byte	0x1
 1543 0385 4204     		.2byte	0x442
 1544 0387 6B000000 		.4byte	0x6b
 1545 038b 02       		.uleb128 0x2
 1546 038c 91       		.byte	0x91
 1547 038d 77       		.sleb128 -9
 1548 038e 00       		.byte	0
 1549 038f 0D       		.uleb128 0xd
 1550 0390 55030000 		.4byte	.LASF47
 1551 0394 01       		.byte	0x1
 1552 0395 6504     		.2byte	0x465
 1553 0397 6B000000 		.4byte	0x6b
 1554 039b 00000000 		.4byte	.LFB24
 1555 039f 40000000 		.4byte	.LFE24-.LFB24
 1556 03a3 01       		.uleb128 0x1
 1557 03a4 9C       		.byte	0x9c
 1558 03a5 B9030000 		.4byte	0x3b9
 1559 03a9 0E       		.uleb128 0xe
 1560 03aa 8F030000 		.4byte	.LASF27
 1561 03ae 01       		.byte	0x1
 1562 03af 6704     		.2byte	0x467
 1563 03b1 6B000000 		.4byte	0x6b
 1564 03b5 02       		.uleb128 0x2
 1565 03b6 91       		.byte	0x91
 1566 03b7 77       		.sleb128 -9
 1567 03b8 00       		.byte	0
 1568 03b9 13       		.uleb128 0x13
 1569 03ba C6000000 		.4byte	.LASF48
 1570 03be 01       		.byte	0x1
 1571 03bf 22       		.byte	0x22
 1572 03c0 6B000000 		.4byte	0x6b
 1573 03c4 05       		.uleb128 0x5
 1574 03c5 03       		.byte	0x3
 1575 03c6 00000000 		.4byte	SPIM_initVar
 1576 03ca 13       		.uleb128 0x13
 1577 03cb 65030000 		.4byte	.LASF49
 1578 03cf 01       		.byte	0x1
 1579 03d0 24       		.byte	0x24
 1580 03d1 98000000 		.4byte	0x98
 1581 03d5 05       		.uleb128 0x5
 1582 03d6 03       		.byte	0x3
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 49


 1583 03d7 00000000 		.4byte	SPIM_swStatusTx
 1584 03db 13       		.uleb128 0x13
 1585 03dc C6010000 		.4byte	.LASF50
 1586 03e0 01       		.byte	0x1
 1587 03e1 25       		.byte	0x25
 1588 03e2 98000000 		.4byte	0x98
 1589 03e6 05       		.uleb128 0x5
 1590 03e7 03       		.byte	0x3
 1591 03e8 00000000 		.4byte	SPIM_swStatusRx
 1592 03ec 00       		.byte	0
 1593              		.section	.debug_abbrev,"",%progbits
 1594              	.Ldebug_abbrev0:
 1595 0000 01       		.uleb128 0x1
 1596 0001 11       		.uleb128 0x11
 1597 0002 01       		.byte	0x1
 1598 0003 25       		.uleb128 0x25
 1599 0004 0E       		.uleb128 0xe
 1600 0005 13       		.uleb128 0x13
 1601 0006 0B       		.uleb128 0xb
 1602 0007 03       		.uleb128 0x3
 1603 0008 0E       		.uleb128 0xe
 1604 0009 1B       		.uleb128 0x1b
 1605 000a 0E       		.uleb128 0xe
 1606 000b 55       		.uleb128 0x55
 1607 000c 17       		.uleb128 0x17
 1608 000d 11       		.uleb128 0x11
 1609 000e 01       		.uleb128 0x1
 1610 000f 10       		.uleb128 0x10
 1611 0010 17       		.uleb128 0x17
 1612 0011 00       		.byte	0
 1613 0012 00       		.byte	0
 1614 0013 02       		.uleb128 0x2
 1615 0014 24       		.uleb128 0x24
 1616 0015 00       		.byte	0
 1617 0016 0B       		.uleb128 0xb
 1618 0017 0B       		.uleb128 0xb
 1619 0018 3E       		.uleb128 0x3e
 1620 0019 0B       		.uleb128 0xb
 1621 001a 03       		.uleb128 0x3
 1622 001b 0E       		.uleb128 0xe
 1623 001c 00       		.byte	0
 1624 001d 00       		.byte	0
 1625 001e 03       		.uleb128 0x3
 1626 001f 24       		.uleb128 0x24
 1627 0020 00       		.byte	0
 1628 0021 0B       		.uleb128 0xb
 1629 0022 0B       		.uleb128 0xb
 1630 0023 3E       		.uleb128 0x3e
 1631 0024 0B       		.uleb128 0xb
 1632 0025 03       		.uleb128 0x3
 1633 0026 08       		.uleb128 0x8
 1634 0027 00       		.byte	0
 1635 0028 00       		.byte	0
 1636 0029 04       		.uleb128 0x4
 1637 002a 16       		.uleb128 0x16
 1638 002b 00       		.byte	0
 1639 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 50


 1640 002d 0E       		.uleb128 0xe
 1641 002e 3A       		.uleb128 0x3a
 1642 002f 0B       		.uleb128 0xb
 1643 0030 3B       		.uleb128 0x3b
 1644 0031 05       		.uleb128 0x5
 1645 0032 49       		.uleb128 0x49
 1646 0033 13       		.uleb128 0x13
 1647 0034 00       		.byte	0
 1648 0035 00       		.byte	0
 1649 0036 05       		.uleb128 0x5
 1650 0037 35       		.uleb128 0x35
 1651 0038 00       		.byte	0
 1652 0039 49       		.uleb128 0x49
 1653 003a 13       		.uleb128 0x13
 1654 003b 00       		.byte	0
 1655 003c 00       		.byte	0
 1656 003d 06       		.uleb128 0x6
 1657 003e 2E       		.uleb128 0x2e
 1658 003f 00       		.byte	0
 1659 0040 3F       		.uleb128 0x3f
 1660 0041 19       		.uleb128 0x19
 1661 0042 03       		.uleb128 0x3
 1662 0043 0E       		.uleb128 0xe
 1663 0044 3A       		.uleb128 0x3a
 1664 0045 0B       		.uleb128 0xb
 1665 0046 3B       		.uleb128 0x3b
 1666 0047 0B       		.uleb128 0xb
 1667 0048 27       		.uleb128 0x27
 1668 0049 19       		.uleb128 0x19
 1669 004a 11       		.uleb128 0x11
 1670 004b 01       		.uleb128 0x1
 1671 004c 12       		.uleb128 0x12
 1672 004d 06       		.uleb128 0x6
 1673 004e 40       		.uleb128 0x40
 1674 004f 18       		.uleb128 0x18
 1675 0050 9642     		.uleb128 0x2116
 1676 0052 19       		.uleb128 0x19
 1677 0053 00       		.byte	0
 1678 0054 00       		.byte	0
 1679 0055 07       		.uleb128 0x7
 1680 0056 2E       		.uleb128 0x2e
 1681 0057 01       		.byte	0x1
 1682 0058 3F       		.uleb128 0x3f
 1683 0059 19       		.uleb128 0x19
 1684 005a 03       		.uleb128 0x3
 1685 005b 0E       		.uleb128 0xe
 1686 005c 3A       		.uleb128 0x3a
 1687 005d 0B       		.uleb128 0xb
 1688 005e 3B       		.uleb128 0x3b
 1689 005f 0B       		.uleb128 0xb
 1690 0060 27       		.uleb128 0x27
 1691 0061 19       		.uleb128 0x19
 1692 0062 11       		.uleb128 0x11
 1693 0063 01       		.uleb128 0x1
 1694 0064 12       		.uleb128 0x12
 1695 0065 06       		.uleb128 0x6
 1696 0066 40       		.uleb128 0x40
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 51


 1697 0067 18       		.uleb128 0x18
 1698 0068 9642     		.uleb128 0x2116
 1699 006a 19       		.uleb128 0x19
 1700 006b 01       		.uleb128 0x1
 1701 006c 13       		.uleb128 0x13
 1702 006d 00       		.byte	0
 1703 006e 00       		.byte	0
 1704 006f 08       		.uleb128 0x8
 1705 0070 34       		.uleb128 0x34
 1706 0071 00       		.byte	0
 1707 0072 03       		.uleb128 0x3
 1708 0073 0E       		.uleb128 0xe
 1709 0074 3A       		.uleb128 0x3a
 1710 0075 0B       		.uleb128 0xb
 1711 0076 3B       		.uleb128 0x3b
 1712 0077 0B       		.uleb128 0xb
 1713 0078 49       		.uleb128 0x49
 1714 0079 13       		.uleb128 0x13
 1715 007a 02       		.uleb128 0x2
 1716 007b 18       		.uleb128 0x18
 1717 007c 00       		.byte	0
 1718 007d 00       		.byte	0
 1719 007e 09       		.uleb128 0x9
 1720 007f 2E       		.uleb128 0x2e
 1721 0080 00       		.byte	0
 1722 0081 3F       		.uleb128 0x3f
 1723 0082 19       		.uleb128 0x19
 1724 0083 03       		.uleb128 0x3
 1725 0084 0E       		.uleb128 0xe
 1726 0085 3A       		.uleb128 0x3a
 1727 0086 0B       		.uleb128 0xb
 1728 0087 3B       		.uleb128 0x3b
 1729 0088 0B       		.uleb128 0xb
 1730 0089 27       		.uleb128 0x27
 1731 008a 19       		.uleb128 0x19
 1732 008b 11       		.uleb128 0x11
 1733 008c 01       		.uleb128 0x1
 1734 008d 12       		.uleb128 0x12
 1735 008e 06       		.uleb128 0x6
 1736 008f 40       		.uleb128 0x40
 1737 0090 18       		.uleb128 0x18
 1738 0091 9742     		.uleb128 0x2117
 1739 0093 19       		.uleb128 0x19
 1740 0094 00       		.byte	0
 1741 0095 00       		.byte	0
 1742 0096 0A       		.uleb128 0xa
 1743 0097 2E       		.uleb128 0x2e
 1744 0098 00       		.byte	0
 1745 0099 3F       		.uleb128 0x3f
 1746 009a 19       		.uleb128 0x19
 1747 009b 03       		.uleb128 0x3
 1748 009c 0E       		.uleb128 0xe
 1749 009d 3A       		.uleb128 0x3a
 1750 009e 0B       		.uleb128 0xb
 1751 009f 3B       		.uleb128 0x3b
 1752 00a0 05       		.uleb128 0x5
 1753 00a1 27       		.uleb128 0x27
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 52


 1754 00a2 19       		.uleb128 0x19
 1755 00a3 11       		.uleb128 0x11
 1756 00a4 01       		.uleb128 0x1
 1757 00a5 12       		.uleb128 0x12
 1758 00a6 06       		.uleb128 0x6
 1759 00a7 40       		.uleb128 0x40
 1760 00a8 18       		.uleb128 0x18
 1761 00a9 9742     		.uleb128 0x2117
 1762 00ab 19       		.uleb128 0x19
 1763 00ac 00       		.byte	0
 1764 00ad 00       		.byte	0
 1765 00ae 0B       		.uleb128 0xb
 1766 00af 2E       		.uleb128 0x2e
 1767 00b0 01       		.byte	0x1
 1768 00b1 3F       		.uleb128 0x3f
 1769 00b2 19       		.uleb128 0x19
 1770 00b3 03       		.uleb128 0x3
 1771 00b4 0E       		.uleb128 0xe
 1772 00b5 3A       		.uleb128 0x3a
 1773 00b6 0B       		.uleb128 0xb
 1774 00b7 3B       		.uleb128 0x3b
 1775 00b8 05       		.uleb128 0x5
 1776 00b9 27       		.uleb128 0x27
 1777 00ba 19       		.uleb128 0x19
 1778 00bb 11       		.uleb128 0x11
 1779 00bc 01       		.uleb128 0x1
 1780 00bd 12       		.uleb128 0x12
 1781 00be 06       		.uleb128 0x6
 1782 00bf 40       		.uleb128 0x40
 1783 00c0 18       		.uleb128 0x18
 1784 00c1 9742     		.uleb128 0x2117
 1785 00c3 19       		.uleb128 0x19
 1786 00c4 01       		.uleb128 0x1
 1787 00c5 13       		.uleb128 0x13
 1788 00c6 00       		.byte	0
 1789 00c7 00       		.byte	0
 1790 00c8 0C       		.uleb128 0xc
 1791 00c9 05       		.uleb128 0x5
 1792 00ca 00       		.byte	0
 1793 00cb 03       		.uleb128 0x3
 1794 00cc 0E       		.uleb128 0xe
 1795 00cd 3A       		.uleb128 0x3a
 1796 00ce 0B       		.uleb128 0xb
 1797 00cf 3B       		.uleb128 0x3b
 1798 00d0 05       		.uleb128 0x5
 1799 00d1 49       		.uleb128 0x49
 1800 00d2 13       		.uleb128 0x13
 1801 00d3 02       		.uleb128 0x2
 1802 00d4 18       		.uleb128 0x18
 1803 00d5 00       		.byte	0
 1804 00d6 00       		.byte	0
 1805 00d7 0D       		.uleb128 0xd
 1806 00d8 2E       		.uleb128 0x2e
 1807 00d9 01       		.byte	0x1
 1808 00da 3F       		.uleb128 0x3f
 1809 00db 19       		.uleb128 0x19
 1810 00dc 03       		.uleb128 0x3
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 53


 1811 00dd 0E       		.uleb128 0xe
 1812 00de 3A       		.uleb128 0x3a
 1813 00df 0B       		.uleb128 0xb
 1814 00e0 3B       		.uleb128 0x3b
 1815 00e1 05       		.uleb128 0x5
 1816 00e2 27       		.uleb128 0x27
 1817 00e3 19       		.uleb128 0x19
 1818 00e4 49       		.uleb128 0x49
 1819 00e5 13       		.uleb128 0x13
 1820 00e6 11       		.uleb128 0x11
 1821 00e7 01       		.uleb128 0x1
 1822 00e8 12       		.uleb128 0x12
 1823 00e9 06       		.uleb128 0x6
 1824 00ea 40       		.uleb128 0x40
 1825 00eb 18       		.uleb128 0x18
 1826 00ec 9742     		.uleb128 0x2117
 1827 00ee 19       		.uleb128 0x19
 1828 00ef 01       		.uleb128 0x1
 1829 00f0 13       		.uleb128 0x13
 1830 00f1 00       		.byte	0
 1831 00f2 00       		.byte	0
 1832 00f3 0E       		.uleb128 0xe
 1833 00f4 34       		.uleb128 0x34
 1834 00f5 00       		.byte	0
 1835 00f6 03       		.uleb128 0x3
 1836 00f7 0E       		.uleb128 0xe
 1837 00f8 3A       		.uleb128 0x3a
 1838 00f9 0B       		.uleb128 0xb
 1839 00fa 3B       		.uleb128 0x3b
 1840 00fb 05       		.uleb128 0x5
 1841 00fc 49       		.uleb128 0x49
 1842 00fd 13       		.uleb128 0x13
 1843 00fe 02       		.uleb128 0x2
 1844 00ff 18       		.uleb128 0x18
 1845 0100 00       		.byte	0
 1846 0101 00       		.byte	0
 1847 0102 0F       		.uleb128 0xf
 1848 0103 2E       		.uleb128 0x2e
 1849 0104 01       		.byte	0x1
 1850 0105 3F       		.uleb128 0x3f
 1851 0106 19       		.uleb128 0x19
 1852 0107 03       		.uleb128 0x3
 1853 0108 0E       		.uleb128 0xe
 1854 0109 3A       		.uleb128 0x3a
 1855 010a 0B       		.uleb128 0xb
 1856 010b 3B       		.uleb128 0x3b
 1857 010c 05       		.uleb128 0x5
 1858 010d 27       		.uleb128 0x27
 1859 010e 19       		.uleb128 0x19
 1860 010f 11       		.uleb128 0x11
 1861 0110 01       		.uleb128 0x1
 1862 0111 12       		.uleb128 0x12
 1863 0112 06       		.uleb128 0x6
 1864 0113 40       		.uleb128 0x40
 1865 0114 18       		.uleb128 0x18
 1866 0115 9642     		.uleb128 0x2116
 1867 0117 19       		.uleb128 0x19
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 54


 1868 0118 01       		.uleb128 0x1
 1869 0119 13       		.uleb128 0x13
 1870 011a 00       		.byte	0
 1871 011b 00       		.byte	0
 1872 011c 10       		.uleb128 0x10
 1873 011d 0F       		.uleb128 0xf
 1874 011e 00       		.byte	0
 1875 011f 0B       		.uleb128 0xb
 1876 0120 0B       		.uleb128 0xb
 1877 0121 49       		.uleb128 0x49
 1878 0122 13       		.uleb128 0x13
 1879 0123 00       		.byte	0
 1880 0124 00       		.byte	0
 1881 0125 11       		.uleb128 0x11
 1882 0126 26       		.uleb128 0x26
 1883 0127 00       		.byte	0
 1884 0128 49       		.uleb128 0x49
 1885 0129 13       		.uleb128 0x13
 1886 012a 00       		.byte	0
 1887 012b 00       		.byte	0
 1888 012c 12       		.uleb128 0x12
 1889 012d 2E       		.uleb128 0x2e
 1890 012e 00       		.byte	0
 1891 012f 3F       		.uleb128 0x3f
 1892 0130 19       		.uleb128 0x19
 1893 0131 03       		.uleb128 0x3
 1894 0132 0E       		.uleb128 0xe
 1895 0133 3A       		.uleb128 0x3a
 1896 0134 0B       		.uleb128 0xb
 1897 0135 3B       		.uleb128 0x3b
 1898 0136 05       		.uleb128 0x5
 1899 0137 27       		.uleb128 0x27
 1900 0138 19       		.uleb128 0x19
 1901 0139 11       		.uleb128 0x11
 1902 013a 01       		.uleb128 0x1
 1903 013b 12       		.uleb128 0x12
 1904 013c 06       		.uleb128 0x6
 1905 013d 40       		.uleb128 0x40
 1906 013e 18       		.uleb128 0x18
 1907 013f 9642     		.uleb128 0x2116
 1908 0141 19       		.uleb128 0x19
 1909 0142 00       		.byte	0
 1910 0143 00       		.byte	0
 1911 0144 13       		.uleb128 0x13
 1912 0145 34       		.uleb128 0x34
 1913 0146 00       		.byte	0
 1914 0147 03       		.uleb128 0x3
 1915 0148 0E       		.uleb128 0xe
 1916 0149 3A       		.uleb128 0x3a
 1917 014a 0B       		.uleb128 0xb
 1918 014b 3B       		.uleb128 0x3b
 1919 014c 0B       		.uleb128 0xb
 1920 014d 49       		.uleb128 0x49
 1921 014e 13       		.uleb128 0x13
 1922 014f 3F       		.uleb128 0x3f
 1923 0150 19       		.uleb128 0x19
 1924 0151 02       		.uleb128 0x2
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 55


 1925 0152 18       		.uleb128 0x18
 1926 0153 00       		.byte	0
 1927 0154 00       		.byte	0
 1928 0155 00       		.byte	0
 1929              		.section	.debug_aranges,"",%progbits
 1930 0000 D4000000 		.4byte	0xd4
 1931 0004 0200     		.2byte	0x2
 1932 0006 00000000 		.4byte	.Ldebug_info0
 1933 000a 04       		.byte	0x4
 1934 000b 00       		.byte	0
 1935 000c 0000     		.2byte	0
 1936 000e 0000     		.2byte	0
 1937 0010 00000000 		.4byte	.LFB1
 1938 0014 34000000 		.4byte	.LFE1-.LFB1
 1939 0018 00000000 		.4byte	.LFB2
 1940 001c 6C000000 		.4byte	.LFE2-.LFB2
 1941 0020 00000000 		.4byte	.LFB3
 1942 0024 24000000 		.4byte	.LFE3-.LFB3
 1943 0028 00000000 		.4byte	.LFB4
 1944 002c 54000000 		.4byte	.LFE4-.LFB4
 1945 0030 00000000 		.4byte	.LFB5
 1946 0034 08000000 		.4byte	.LFE5-.LFB5
 1947 0038 00000000 		.4byte	.LFB6
 1948 003c 08000000 		.4byte	.LFE6-.LFB6
 1949 0040 00000000 		.4byte	.LFB7
 1950 0044 08000000 		.4byte	.LFE7-.LFB7
 1951 0048 00000000 		.4byte	.LFB8
 1952 004c 08000000 		.4byte	.LFE8-.LFB8
 1953 0050 00000000 		.4byte	.LFB9
 1954 0054 20000000 		.4byte	.LFE9-.LFB9
 1955 0058 00000000 		.4byte	.LFB10
 1956 005c 20000000 		.4byte	.LFE10-.LFB10
 1957 0060 00000000 		.4byte	.LFB11
 1958 0064 20000000 		.4byte	.LFE11-.LFB11
 1959 0068 00000000 		.4byte	.LFB12
 1960 006c 20000000 		.4byte	.LFE12-.LFB12
 1961 0070 00000000 		.4byte	.LFB13
 1962 0074 34000000 		.4byte	.LFE13-.LFB13
 1963 0078 00000000 		.4byte	.LFB14
 1964 007c 20000000 		.4byte	.LFE14-.LFB14
 1965 0080 00000000 		.4byte	.LFB15
 1966 0084 30000000 		.4byte	.LFE15-.LFB15
 1967 0088 00000000 		.4byte	.LFB16
 1968 008c 48000000 		.4byte	.LFE16-.LFB16
 1969 0090 00000000 		.4byte	.LFB17
 1970 0094 24000000 		.4byte	.LFE17-.LFB17
 1971 0098 00000000 		.4byte	.LFB18
 1972 009c 44000000 		.4byte	.LFE18-.LFB18
 1973 00a0 00000000 		.4byte	.LFB19
 1974 00a4 50000000 		.4byte	.LFE19-.LFB19
 1975 00a8 00000000 		.4byte	.LFB20
 1976 00ac 60000000 		.4byte	.LFE20-.LFB20
 1977 00b0 00000000 		.4byte	.LFB21
 1978 00b4 10000000 		.4byte	.LFE21-.LFB21
 1979 00b8 00000000 		.4byte	.LFB22
 1980 00bc 10000000 		.4byte	.LFE22-.LFB22
 1981 00c0 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 56


 1982 00c4 30000000 		.4byte	.LFE23-.LFB23
 1983 00c8 00000000 		.4byte	.LFB24
 1984 00cc 40000000 		.4byte	.LFE24-.LFB24
 1985 00d0 00000000 		.4byte	0
 1986 00d4 00000000 		.4byte	0
 1987              		.section	.debug_ranges,"",%progbits
 1988              	.Ldebug_ranges0:
 1989 0000 00000000 		.4byte	.LFB1
 1990 0004 34000000 		.4byte	.LFE1
 1991 0008 00000000 		.4byte	.LFB2
 1992 000c 6C000000 		.4byte	.LFE2
 1993 0010 00000000 		.4byte	.LFB3
 1994 0014 24000000 		.4byte	.LFE3
 1995 0018 00000000 		.4byte	.LFB4
 1996 001c 54000000 		.4byte	.LFE4
 1997 0020 00000000 		.4byte	.LFB5
 1998 0024 08000000 		.4byte	.LFE5
 1999 0028 00000000 		.4byte	.LFB6
 2000 002c 08000000 		.4byte	.LFE6
 2001 0030 00000000 		.4byte	.LFB7
 2002 0034 08000000 		.4byte	.LFE7
 2003 0038 00000000 		.4byte	.LFB8
 2004 003c 08000000 		.4byte	.LFE8
 2005 0040 00000000 		.4byte	.LFB9
 2006 0044 20000000 		.4byte	.LFE9
 2007 0048 00000000 		.4byte	.LFB10
 2008 004c 20000000 		.4byte	.LFE10
 2009 0050 00000000 		.4byte	.LFB11
 2010 0054 20000000 		.4byte	.LFE11
 2011 0058 00000000 		.4byte	.LFB12
 2012 005c 20000000 		.4byte	.LFE12
 2013 0060 00000000 		.4byte	.LFB13
 2014 0064 34000000 		.4byte	.LFE13
 2015 0068 00000000 		.4byte	.LFB14
 2016 006c 20000000 		.4byte	.LFE14
 2017 0070 00000000 		.4byte	.LFB15
 2018 0074 30000000 		.4byte	.LFE15
 2019 0078 00000000 		.4byte	.LFB16
 2020 007c 48000000 		.4byte	.LFE16
 2021 0080 00000000 		.4byte	.LFB17
 2022 0084 24000000 		.4byte	.LFE17
 2023 0088 00000000 		.4byte	.LFB18
 2024 008c 44000000 		.4byte	.LFE18
 2025 0090 00000000 		.4byte	.LFB19
 2026 0094 50000000 		.4byte	.LFE19
 2027 0098 00000000 		.4byte	.LFB20
 2028 009c 60000000 		.4byte	.LFE20
 2029 00a0 00000000 		.4byte	.LFB21
 2030 00a4 10000000 		.4byte	.LFE21
 2031 00a8 00000000 		.4byte	.LFB22
 2032 00ac 10000000 		.4byte	.LFE22
 2033 00b0 00000000 		.4byte	.LFB23
 2034 00b4 30000000 		.4byte	.LFE23
 2035 00b8 00000000 		.4byte	.LFB24
 2036 00bc 40000000 		.4byte	.LFE24
 2037 00c0 00000000 		.4byte	0
 2038 00c4 00000000 		.4byte	0
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 57


 2039              		.section	.debug_line,"",%progbits
 2040              	.Ldebug_line0:
 2041 0000 5E020000 		.section	.debug_str,"MS",%progbits,1
 2041      02004100 
 2041      00000201 
 2041      FB0E0D00 
 2041      01010101 
 2042              	.LASF30:
 2043 0000 5350494D 		.ascii	"SPIM_WriteTxData\000"
 2043      5F577269 
 2043      74655478 
 2043      44617461 
 2043      00
 2044              	.LASF53:
 2045 0011 443A5C44 		.ascii	"D:\\Dropbox\\IoT Development\\Cypress PSoC Developm"
 2045      726F7062 
 2045      6F785C49 
 2045      6F542044 
 2045      6576656C 
 2046 0041 656E745C 		.ascii	"ent\\SPI_Slave\\SCB_SpiCommSlave01\\SCB_SpiCommSlav"
 2046      5350495F 
 2046      536C6176 
 2046      655C5343 
 2046      425F5370 
 2047 0071 6530312E 		.ascii	"e01.cydsn\000"
 2047      63796473 
 2047      6E00
 2048              	.LASF17:
 2049 007b 5350494D 		.ascii	"SPIM_Enable\000"
 2049      5F456E61 
 2049      626C6500 
 2050              	.LASF18:
 2051 0087 5350494D 		.ascii	"SPIM_Stop\000"
 2051      5F53746F 
 2051      7000
 2052              	.LASF31:
 2053 0091 74784461 		.ascii	"txData\000"
 2053      746100
 2054              	.LASF3:
 2055 0098 73686F72 		.ascii	"short unsigned int\000"
 2055      7420756E 
 2055      7369676E 
 2055      65642069 
 2055      6E7400
 2056              	.LASF11:
 2057 00ab 63686172 		.ascii	"char\000"
 2057      00
 2058              	.LASF46:
 2059 00b0 5350494D 		.ascii	"SPIM_SetInterruptMode\000"
 2059      5F536574 
 2059      496E7465 
 2059      72727570 
 2059      744D6F64 
 2060              	.LASF48:
 2061 00c6 5350494D 		.ascii	"SPIM_initVar\000"
 2061      5F696E69 
 2061      74566172 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 58


 2061      00
 2062              	.LASF33:
 2063 00d3 72784461 		.ascii	"rxData\000"
 2063      746100
 2064              	.LASF45:
 2065 00da 5350494D 		.ascii	"SPIM_DisableInt\000"
 2065      5F446973 
 2065      61626C65 
 2065      496E7400 
 2066              	.LASF52:
 2067 00ea 47656E65 		.ascii	"Generated_Source\\PSoC4\\SPIM.c\000"
 2067      72617465 
 2067      645F536F 
 2067      75726365 
 2067      5C50536F 
 2068              	.LASF9:
 2069 0108 666C6F61 		.ascii	"float\000"
 2069      7400
 2070              	.LASF37:
 2071 010e 5350494D 		.ascii	"SPIM_ClearRxBuffer\000"
 2071      5F436C65 
 2071      61725278 
 2071      42756666 
 2071      657200
 2072              	.LASF35:
 2073 0121 73697A65 		.ascii	"size\000"
 2073      00
 2074              	.LASF36:
 2075 0126 5350494D 		.ascii	"SPIM_GetTxBufferSize\000"
 2075      5F476574 
 2075      54784275 
 2075      66666572 
 2075      53697A65 
 2076              	.LASF13:
 2077 013b 72656738 		.ascii	"reg8\000"
 2077      00
 2078              	.LASF20:
 2079 0140 5350494D 		.ascii	"SPIM_EnableTxInt\000"
 2079      5F456E61 
 2079      626C6554 
 2079      78496E74 
 2079      00
 2080              	.LASF5:
 2081 0151 6C6F6E67 		.ascii	"long unsigned int\000"
 2081      20756E73 
 2081      69676E65 
 2081      6420696E 
 2081      7400
 2082              	.LASF12:
 2083 0163 75696E74 		.ascii	"uint8\000"
 2083      3800
 2084              	.LASF39:
 2085 0169 5350494D 		.ascii	"SPIM_PutArray\000"
 2085      5F507574 
 2085      41727261 
 2085      7900
 2086              	.LASF19:
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 59


 2087 0177 656E6162 		.ascii	"enableInterrupts\000"
 2087      6C65496E 
 2087      74657272 
 2087      75707473 
 2087      00
 2088              	.LASF32:
 2089 0188 5350494D 		.ascii	"SPIM_ReadRxData\000"
 2089      5F526561 
 2089      64527844 
 2089      61746100 
 2090              	.LASF1:
 2091 0198 756E7369 		.ascii	"unsigned char\000"
 2091      676E6564 
 2091      20636861 
 2091      7200
 2092              	.LASF22:
 2093 01a6 5350494D 		.ascii	"SPIM_DisableTxInt\000"
 2093      5F446973 
 2093      61626C65 
 2093      5478496E 
 2093      7400
 2094              	.LASF10:
 2095 01b8 646F7562 		.ascii	"double\000"
 2095      6C6500
 2096              	.LASF26:
 2097 01bf 696E7453 		.ascii	"intSrc\000"
 2097      726300
 2098              	.LASF50:
 2099 01c6 5350494D 		.ascii	"SPIM_swStatusRx\000"
 2099      5F737753 
 2099      74617475 
 2099      73527800 
 2100              	.LASF34:
 2101 01d6 5350494D 		.ascii	"SPIM_GetRxBufferSize\000"
 2101      5F476574 
 2101      52784275 
 2101      66666572 
 2101      53697A65 
 2102              	.LASF51:
 2103 01eb 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2103      4320342E 
 2103      392E3320 
 2103      32303135 
 2103      30333033 
 2104 021e 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2104      20726576 
 2104      6973696F 
 2104      6E203232 
 2104      31323230 
 2105 0251 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2105      66756E63 
 2105      74696F6E 
 2105      2D736563 
 2105      74696F6E 
 2106              	.LASF24:
 2107 0279 5350494D 		.ascii	"SPIM_SetTxInterruptMode\000"
 2107      5F536574 
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 60


 2107      5478496E 
 2107      74657272 
 2107      7570744D 
 2108              	.LASF25:
 2109 0291 5350494D 		.ascii	"SPIM_SetRxInterruptMode\000"
 2109      5F536574 
 2109      5278496E 
 2109      74657272 
 2109      7570744D 
 2110              	.LASF8:
 2111 02a9 756E7369 		.ascii	"unsigned int\000"
 2111      676E6564 
 2111      20696E74 
 2111      00
 2112              	.LASF7:
 2113 02b6 6C6F6E67 		.ascii	"long long unsigned int\000"
 2113      206C6F6E 
 2113      6720756E 
 2113      7369676E 
 2113      65642069 
 2114              	.LASF41:
 2115 02cd 62797465 		.ascii	"byteCount\000"
 2115      436F756E 
 2115      7400
 2116              	.LASF29:
 2117 02d7 5350494D 		.ascii	"SPIM_ReadRxStatus\000"
 2117      5F526561 
 2117      64527853 
 2117      74617475 
 2117      7300
 2118              	.LASF42:
 2119 02e9 62756649 		.ascii	"bufIndex\000"
 2119      6E646578 
 2119      00
 2120              	.LASF44:
 2121 02f2 5350494D 		.ascii	"SPIM_EnableInt\000"
 2121      5F456E61 
 2121      626C6549 
 2121      6E7400
 2122              	.LASF14:
 2123 0301 73697A65 		.ascii	"sizetype\000"
 2123      74797065 
 2123      00
 2124              	.LASF6:
 2125 030a 6C6F6E67 		.ascii	"long long int\000"
 2125      206C6F6E 
 2125      6720696E 
 2125      7400
 2126              	.LASF15:
 2127 0318 5350494D 		.ascii	"SPIM_Init\000"
 2127      5F496E69 
 2127      7400
 2128              	.LASF43:
 2129 0322 5350494D 		.ascii	"SPIM_ClearFIFO\000"
 2129      5F436C65 
 2129      61724649 
 2129      464F00
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 61


 2130              	.LASF2:
 2131 0331 73686F72 		.ascii	"short int\000"
 2131      7420696E 
 2131      7400
 2132              	.LASF38:
 2133 033b 5350494D 		.ascii	"SPIM_ClearTxBuffer\000"
 2133      5F436C65 
 2133      61725478 
 2133      42756666 
 2133      657200
 2134              	.LASF40:
 2135 034e 62756666 		.ascii	"buffer\000"
 2135      657200
 2136              	.LASF47:
 2137 0355 5350494D 		.ascii	"SPIM_ReadStatus\000"
 2137      5F526561 
 2137      64537461 
 2137      74757300 
 2138              	.LASF49:
 2139 0365 5350494D 		.ascii	"SPIM_swStatusTx\000"
 2139      5F737753 
 2139      74617475 
 2139      73547800 
 2140              	.LASF21:
 2141 0375 5350494D 		.ascii	"SPIM_EnableRxInt\000"
 2141      5F456E61 
 2141      626C6552 
 2141      78496E74 
 2141      00
 2142              	.LASF4:
 2143 0386 6C6F6E67 		.ascii	"long int\000"
 2143      20696E74 
 2143      00
 2144              	.LASF27:
 2145 038f 746D7053 		.ascii	"tmpStatus\000"
 2145      74617475 
 2145      7300
 2146              	.LASF0:
 2147 0399 7369676E 		.ascii	"signed char\000"
 2147      65642063 
 2147      68617200 
 2148              	.LASF16:
 2149 03a5 5350494D 		.ascii	"SPIM_Start\000"
 2149      5F537461 
 2149      727400
 2150              	.LASF28:
 2151 03b0 5350494D 		.ascii	"SPIM_ReadTxStatus\000"
 2151      5F526561 
 2151      64547853 
 2151      74617475 
 2151      7300
 2152              	.LASF23:
 2153 03c2 5350494D 		.ascii	"SPIM_DisableRxInt\000"
 2153      5F446973 
 2153      61626C65 
 2153      5278496E 
 2153      7400
ARM GAS  C:\Users\GREG~1.PHI\AppData\Local\Temp\ccMdYBXU.s 			page 62


 2154              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
